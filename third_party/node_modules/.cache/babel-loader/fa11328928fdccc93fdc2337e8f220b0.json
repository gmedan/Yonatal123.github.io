{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.THREE = {});\n})(this, function (exports) {\n  'use strict'; // Polyfills\n\n  if (Number.EPSILON === undefined) {\n    Number.EPSILON = Math.pow(2, -52);\n  }\n\n  if (Number.isInteger === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    Number.isInteger = function (value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    };\n  } //\n\n\n  if (Math.sign === undefined) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n    Math.sign = function (x) {\n      return x < 0 ? -1 : x > 0 ? 1 : +x;\n    };\n  }\n\n  if ('name' in Function.prototype === false) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function () {\n        return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n      }\n    });\n  }\n\n  if (Object.assign === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    (function () {\n      Object.assign = function (target) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n\n        return output;\n      };\n    })();\n  }\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n\n  function EventDispatcher() {}\n\n  Object.assign(EventDispatcher.prototype, {\n    addEventListener: function (type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    },\n    hasEventListener: function (type, listener) {\n      if (this._listeners === undefined) return false;\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    },\n    removeEventListener: function (type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    },\n    dispatchEvent: function (event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this;\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  });\n  var REVISION = '97';\n  var MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n  };\n  var CullFaceNone = 0;\n  var CullFaceBack = 1;\n  var CullFaceFront = 2;\n  var CullFaceFrontBack = 3;\n  var FrontFaceDirectionCW = 0;\n  var FrontFaceDirectionCCW = 1;\n  var BasicShadowMap = 0;\n  var PCFShadowMap = 1;\n  var PCFSoftShadowMap = 2;\n  var FrontSide = 0;\n  var BackSide = 1;\n  var DoubleSide = 2;\n  var FlatShading = 1;\n  var SmoothShading = 2;\n  var NoColors = 0;\n  var FaceColors = 1;\n  var VertexColors = 2;\n  var NoBlending = 0;\n  var NormalBlending = 1;\n  var AdditiveBlending = 2;\n  var SubtractiveBlending = 3;\n  var MultiplyBlending = 4;\n  var CustomBlending = 5;\n  var AddEquation = 100;\n  var SubtractEquation = 101;\n  var ReverseSubtractEquation = 102;\n  var MinEquation = 103;\n  var MaxEquation = 104;\n  var ZeroFactor = 200;\n  var OneFactor = 201;\n  var SrcColorFactor = 202;\n  var OneMinusSrcColorFactor = 203;\n  var SrcAlphaFactor = 204;\n  var OneMinusSrcAlphaFactor = 205;\n  var DstAlphaFactor = 206;\n  var OneMinusDstAlphaFactor = 207;\n  var DstColorFactor = 208;\n  var OneMinusDstColorFactor = 209;\n  var SrcAlphaSaturateFactor = 210;\n  var NeverDepth = 0;\n  var AlwaysDepth = 1;\n  var LessDepth = 2;\n  var LessEqualDepth = 3;\n  var EqualDepth = 4;\n  var GreaterEqualDepth = 5;\n  var GreaterDepth = 6;\n  var NotEqualDepth = 7;\n  var MultiplyOperation = 0;\n  var MixOperation = 1;\n  var AddOperation = 2;\n  var NoToneMapping = 0;\n  var LinearToneMapping = 1;\n  var ReinhardToneMapping = 2;\n  var Uncharted2ToneMapping = 3;\n  var CineonToneMapping = 4;\n  var UVMapping = 300;\n  var CubeReflectionMapping = 301;\n  var CubeRefractionMapping = 302;\n  var EquirectangularReflectionMapping = 303;\n  var EquirectangularRefractionMapping = 304;\n  var SphericalReflectionMapping = 305;\n  var CubeUVReflectionMapping = 306;\n  var CubeUVRefractionMapping = 307;\n  var RepeatWrapping = 1000;\n  var ClampToEdgeWrapping = 1001;\n  var MirroredRepeatWrapping = 1002;\n  var NearestFilter = 1003;\n  var NearestMipMapNearestFilter = 1004;\n  var NearestMipMapLinearFilter = 1005;\n  var LinearFilter = 1006;\n  var LinearMipMapNearestFilter = 1007;\n  var LinearMipMapLinearFilter = 1008;\n  var UnsignedByteType = 1009;\n  var ByteType = 1010;\n  var ShortType = 1011;\n  var UnsignedShortType = 1012;\n  var IntType = 1013;\n  var UnsignedIntType = 1014;\n  var FloatType = 1015;\n  var HalfFloatType = 1016;\n  var UnsignedShort4444Type = 1017;\n  var UnsignedShort5551Type = 1018;\n  var UnsignedShort565Type = 1019;\n  var UnsignedInt248Type = 1020;\n  var AlphaFormat = 1021;\n  var RGBFormat = 1022;\n  var RGBAFormat = 1023;\n  var LuminanceFormat = 1024;\n  var LuminanceAlphaFormat = 1025;\n  var RGBEFormat = RGBAFormat;\n  var DepthFormat = 1026;\n  var DepthStencilFormat = 1027;\n  var RedFormat = 1028;\n  var RGB_S3TC_DXT1_Format = 33776;\n  var RGBA_S3TC_DXT1_Format = 33777;\n  var RGBA_S3TC_DXT3_Format = 33778;\n  var RGBA_S3TC_DXT5_Format = 33779;\n  var RGB_PVRTC_4BPPV1_Format = 35840;\n  var RGB_PVRTC_2BPPV1_Format = 35841;\n  var RGBA_PVRTC_4BPPV1_Format = 35842;\n  var RGBA_PVRTC_2BPPV1_Format = 35843;\n  var RGB_ETC1_Format = 36196;\n  var RGBA_ASTC_4x4_Format = 37808;\n  var RGBA_ASTC_5x4_Format = 37809;\n  var RGBA_ASTC_5x5_Format = 37810;\n  var RGBA_ASTC_6x5_Format = 37811;\n  var RGBA_ASTC_6x6_Format = 37812;\n  var RGBA_ASTC_8x5_Format = 37813;\n  var RGBA_ASTC_8x6_Format = 37814;\n  var RGBA_ASTC_8x8_Format = 37815;\n  var RGBA_ASTC_10x5_Format = 37816;\n  var RGBA_ASTC_10x6_Format = 37817;\n  var RGBA_ASTC_10x8_Format = 37818;\n  var RGBA_ASTC_10x10_Format = 37819;\n  var RGBA_ASTC_12x10_Format = 37820;\n  var RGBA_ASTC_12x12_Format = 37821;\n  var LoopOnce = 2200;\n  var LoopRepeat = 2201;\n  var LoopPingPong = 2202;\n  var InterpolateDiscrete = 2300;\n  var InterpolateLinear = 2301;\n  var InterpolateSmooth = 2302;\n  var ZeroCurvatureEnding = 2400;\n  var ZeroSlopeEnding = 2401;\n  var WrapAroundEnding = 2402;\n  var TrianglesDrawMode = 0;\n  var TriangleStripDrawMode = 1;\n  var TriangleFanDrawMode = 2;\n  var LinearEncoding = 3000;\n  var sRGBEncoding = 3001;\n  var GammaEncoding = 3007;\n  var RGBEEncoding = 3002;\n  var LogLuvEncoding = 3003;\n  var RGBM7Encoding = 3004;\n  var RGBM16Encoding = 3005;\n  var RGBDEncoding = 3006;\n  var BasicDepthPacking = 3200;\n  var RGBADepthPacking = 3201;\n  var TangentSpaceNormalMap = 0;\n  var ObjectSpaceNormalMap = 1;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _Math = {\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    generateUUID: function () {\n      // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n      var lut = [];\n\n      for (var i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n      }\n\n      return function generateUUID() {\n        var d0 = Math.random() * 0xffffffff | 0;\n        var d1 = Math.random() * 0xffffffff | 0;\n        var d2 = Math.random() * 0xffffffff | 0;\n        var d3 = Math.random() * 0xffffffff | 0;\n        var uuid = lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n        return uuid.toUpperCase();\n      };\n    }(),\n    clamp: function (value, min, max) {\n      return Math.max(min, Math.min(max, value));\n    },\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n    euclideanModulo: function (n, m) {\n      return (n % m + m) % m;\n    },\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n    mapLinear: function (x, a1, a2, b1, b2) {\n      return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n    },\n    // https://en.wikipedia.org/wiki/Linear_interpolation\n    lerp: function (x, y, t) {\n      return (1 - t) * x + t * y;\n    },\n    // http://en.wikipedia.org/wiki/Smoothstep\n    smoothstep: function (x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * (3 - 2 * x);\n    },\n    smootherstep: function (x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * x * (x * (x * 6 - 15) + 10);\n    },\n    // Random integer from <low, high> interval\n    randInt: function (low, high) {\n      return low + Math.floor(Math.random() * (high - low + 1));\n    },\n    // Random float from <low, high> interval\n    randFloat: function (low, high) {\n      return low + Math.random() * (high - low);\n    },\n    // Random float from <-range/2, range/2> interval\n    randFloatSpread: function (range) {\n      return range * (0.5 - Math.random());\n    },\n    degToRad: function (degrees) {\n      return degrees * _Math.DEG2RAD;\n    },\n    radToDeg: function (radians) {\n      return radians * _Math.RAD2DEG;\n    },\n    isPowerOfTwo: function (value) {\n      return (value & value - 1) === 0 && value !== 0;\n    },\n    ceilPowerOfTwo: function (value) {\n      return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n    },\n    floorPowerOfTwo: function (value) {\n      return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author philogb / http://blog.thejit.org/\n   * @author egraether / http://egraether.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  function Vector2(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  Object.defineProperties(Vector2.prototype, {\n    \"width\": {\n      get: function () {\n        return this.x;\n      },\n      set: function (value) {\n        this.x = value;\n      }\n    },\n    \"height\": {\n      get: function () {\n        return this.y;\n      },\n      set: function (value) {\n        this.y = value;\n      }\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    isVector2: true,\n    set: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    },\n    multiply: function (v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    applyMatrix3: function (m) {\n      var x = this.x,\n          y = this.y;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6];\n      this.y = e[1] * x + e[4] * y + e[7];\n      return this;\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    },\n    clampScalar: function () {\n      var min = new Vector2();\n      var max = new Vector2();\n      return function clampScalar(minVal, maxVal) {\n        min.set(minVal, minVal);\n        max.set(maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y;\n    },\n    cross: function (v) {\n      return this.x * v.y - this.y * v.x;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    manhattanLength: function () {\n      return Math.abs(this.x) + Math.abs(this.y);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    angle: function () {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(this.y, this.x);\n      if (angle < 0) angle += 2 * Math.PI;\n      return angle;\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    },\n    manhattanDistanceTo: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      return this;\n    },\n    rotateAround: function (center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author jordi_ros / http://plattsoft.com\n   * @author D1plo1d / http://github.com/D1plo1d\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author timknip / http://www.floorplanner.com/\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Matrix4() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix4.prototype, {\n    isMatrix4: true,\n    set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new Matrix4().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      te[9] = me[9];\n      te[10] = me[10];\n      te[11] = me[11];\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      te[15] = me[15];\n      return this;\n    },\n    copyPosition: function (m) {\n      var te = this.elements,\n          me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    },\n    extractBasis: function (xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    },\n    makeBasis: function (xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    extractRotation: function () {\n      var v1 = new Vector3();\n      return function extractRotation(m) {\n        // this method does not support reflection matrices\n        var te = this.elements;\n        var me = m.elements;\n        var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n        var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n        var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n        te[0] = me[0] * scaleX;\n        te[1] = me[1] * scaleX;\n        te[2] = me[2] * scaleX;\n        te[3] = 0;\n        te[4] = me[4] * scaleY;\n        te[5] = me[5] * scaleY;\n        te[6] = me[6] * scaleY;\n        te[7] = 0;\n        te[8] = me[8] * scaleZ;\n        te[9] = me[9] * scaleZ;\n        te[10] = me[10] * scaleZ;\n        te[11] = 0;\n        te[12] = 0;\n        te[13] = 0;\n        te[14] = 0;\n        te[15] = 1;\n        return this;\n      };\n    }(),\n    makeRotationFromEuler: function (euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n      } // bottom row\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // last column\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    makeRotationFromQuaternion: function () {\n      var zero = new Vector3(0, 0, 0);\n      var one = new Vector3(1, 1, 1);\n      return function makeRotationFromQuaternion(q) {\n        return this.compose(zero, q, one);\n      };\n    }(),\n    lookAt: function () {\n      var x = new Vector3();\n      var y = new Vector3();\n      var z = new Vector3();\n      return function lookAt(eye, target, up) {\n        var te = this.elements;\n        z.subVectors(eye, target);\n\n        if (z.lengthSq() === 0) {\n          // eye and target are in the same position\n          z.z = 1;\n        }\n\n        z.normalize();\n        x.crossVectors(up, z);\n\n        if (x.lengthSq() === 0) {\n          // up and z are parallel\n          if (Math.abs(up.z) === 1) {\n            z.x += 0.0001;\n          } else {\n            z.z += 0.0001;\n          }\n\n          z.normalize();\n          x.crossVectors(up, z);\n        }\n\n        x.normalize();\n        y.crossVectors(z, x);\n        te[0] = x.x;\n        te[4] = y.x;\n        te[8] = z.x;\n        te[1] = x.y;\n        te[5] = y.y;\n        te[9] = z.y;\n        te[2] = x.z;\n        te[6] = y.z;\n        te[10] = z.z;\n        return this;\n      };\n    }(),\n    multiply: function (m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    },\n    applyToBufferAttribute: function () {\n      var v1 = new Vector3();\n      return function applyToBufferAttribute(attribute) {\n        for (var i = 0, l = attribute.count; i < l; i++) {\n          v1.x = attribute.getX(i);\n          v1.y = attribute.getY(i);\n          v1.z = attribute.getZ(i);\n          v1.applyMatrix4(this);\n          attribute.setXYZ(i, v1.x, v1.y, v1.z);\n        }\n\n        return attribute;\n      };\n    }(),\n    determinant: function () {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    },\n    transpose: function () {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    },\n    setPosition: function (v) {\n      var te = this.elements;\n      te[12] = v.x;\n      te[13] = v.y;\n      te[14] = v.z;\n      return this;\n    },\n    getInverse: function (m, throwOnDegenerate) {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          me = m.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n41 = me[3],\n          n12 = me[4],\n          n22 = me[5],\n          n32 = me[6],\n          n42 = me[7],\n          n13 = me[8],\n          n23 = me[9],\n          n33 = me[10],\n          n43 = me[11],\n          n14 = me[12],\n          n24 = me[13],\n          n34 = me[14],\n          n44 = me[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    },\n    scale: function (v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    },\n    getMaxScaleOnAxis: function () {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    },\n    makeTranslation: function (x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationX: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationY: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationZ: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationAxis: function (axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeScale: function (x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeShear: function (x, y, z) {\n      this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    compose: function (position, quaternion, scale) {\n      var te = this.elements;\n      var x = quaternion._x,\n          y = quaternion._y,\n          z = quaternion._z,\n          w = quaternion._w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      var sx = scale.x,\n          sy = scale.y,\n          sz = scale.z;\n      te[0] = (1 - (yy + zz)) * sx;\n      te[1] = (xy + wz) * sx;\n      te[2] = (xz - wy) * sx;\n      te[3] = 0;\n      te[4] = (xy - wz) * sy;\n      te[5] = (1 - (xx + zz)) * sy;\n      te[6] = (yz + wx) * sy;\n      te[7] = 0;\n      te[8] = (xz + wy) * sz;\n      te[9] = (yz - wx) * sz;\n      te[10] = (1 - (xx + yy)) * sz;\n      te[11] = 0;\n      te[12] = position.x;\n      te[13] = position.y;\n      te[14] = position.z;\n      te[15] = 1;\n      return this;\n    },\n    decompose: function () {\n      var vector = new Vector3();\n      var matrix = new Matrix4();\n      return function decompose(position, quaternion, scale) {\n        var te = this.elements;\n        var sx = vector.set(te[0], te[1], te[2]).length();\n        var sy = vector.set(te[4], te[5], te[6]).length();\n        var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n        var det = this.determinant();\n        if (det < 0) sx = -sx;\n        position.x = te[12];\n        position.y = te[13];\n        position.z = te[14]; // scale the rotation part\n\n        matrix.copy(this);\n        var invSX = 1 / sx;\n        var invSY = 1 / sy;\n        var invSZ = 1 / sz;\n        matrix.elements[0] *= invSX;\n        matrix.elements[1] *= invSX;\n        matrix.elements[2] *= invSX;\n        matrix.elements[4] *= invSY;\n        matrix.elements[5] *= invSY;\n        matrix.elements[6] *= invSY;\n        matrix.elements[8] *= invSZ;\n        matrix.elements[9] *= invSZ;\n        matrix.elements[10] *= invSZ;\n        quaternion.setFromRotationMatrix(matrix);\n        scale.x = sx;\n        scale.y = sy;\n        scale.z = sz;\n        return this;\n      };\n    }(),\n    makePerspective: function (left, right, top, bottom, near, far) {\n      if (far === undefined) {\n        console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n      }\n\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    },\n    makeOrthographic: function (left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n\n      for (var i = 0; i < 16; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  function Quaternion(x, y, z, w) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Quaternion, {\n    slerp: function (qa, qb, qm, t) {\n      return qm.copy(qa).slerp(qb, t);\n    },\n    slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3],\n          x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t,\n            cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n  });\n  Object.defineProperties(Quaternion.prototype, {\n    x: {\n      get: function () {\n        return this._x;\n      },\n      set: function (value) {\n        this._x = value;\n        this.onChangeCallback();\n      }\n    },\n    y: {\n      get: function () {\n        return this._y;\n      },\n      set: function (value) {\n        this._y = value;\n        this.onChangeCallback();\n      }\n    },\n    z: {\n      get: function () {\n        return this._z;\n      },\n      set: function (value) {\n        this._z = value;\n        this.onChangeCallback();\n      }\n    },\n    w: {\n      get: function () {\n        return this._w;\n      },\n      set: function (value) {\n        this._w = value;\n        this.onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Quaternion.prototype, {\n    isQuaternion: true,\n    set: function (x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    },\n    copy: function (quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromEuler: function (euler, update) {\n      if (!(euler && euler.isEuler)) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      var x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c1 = cos(x / 2);\n      var c2 = cos(y / 2);\n      var c3 = cos(z / 2);\n      var s1 = sin(x / 2);\n      var s2 = sin(y / 2);\n      var s3 = sin(z / 2);\n\n      if (order === 'XYZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'YXZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'ZXY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'ZYX') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'YZX') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'XZY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      }\n\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromAxisAngle: function (axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33,\n          s;\n\n      if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    setFromUnitVectors: function () {\n      // assumes direction vectors vFrom and vTo are normalized\n      var v1 = new Vector3();\n      var r;\n      var EPS = 0.000001;\n      return function setFromUnitVectors(vFrom, vTo) {\n        if (v1 === undefined) v1 = new Vector3();\n        r = vFrom.dot(vTo) + 1;\n\n        if (r < EPS) {\n          r = 0;\n\n          if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n            v1.set(-vFrom.y, vFrom.x, 0);\n          } else {\n            v1.set(0, -vFrom.z, vFrom.y);\n          }\n        } else {\n          v1.crossVectors(vFrom, vTo);\n        }\n\n        this._x = v1.x;\n        this._y = v1.y;\n        this._z = v1.z;\n        this._w = r;\n        return this.normalize();\n      };\n    }(),\n    angleTo: function (q) {\n      return 2 * Math.acos(Math.abs(_Math.clamp(this.dot(q), -1, 1)));\n    },\n    rotateTowards: function (q, step) {\n      var angle = this.angleTo(q);\n      if (angle === 0) return this;\n      var t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    },\n    inverse: function () {\n      // quaternion is assumed to have unit length\n      return this.conjugate();\n    },\n    conjugate: function () {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n      this.onChangeCallback();\n      return this;\n    },\n    dot: function (v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    },\n    lengthSq: function () {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    },\n    length: function () {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    },\n    normalize: function () {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    multiply: function (q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    },\n    premultiply: function (q) {\n      return this.multiplyQuaternions(q, this);\n    },\n    multiplyQuaternions: function (a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n      this.onChangeCallback();\n      return this;\n    },\n    slerp: function (qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        var s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        return this.normalize();\n      }\n\n      var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n      this.onChangeCallback();\n      return this;\n    },\n    equals: function (quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    },\n    onChange: function (callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector3(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n\n  Object.assign(Vector3.prototype, {\n    isVector3: true,\n    set: function (x, y, z) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    },\n    multiply: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    },\n    multiplyVectors: function (a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    },\n    applyEuler: function () {\n      var quaternion = new Quaternion();\n      return function applyEuler(euler) {\n        if (!(euler && euler.isEuler)) {\n          console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n        }\n\n        return this.applyQuaternion(quaternion.setFromEuler(euler));\n      };\n    }(),\n    applyAxisAngle: function () {\n      var quaternion = new Quaternion();\n      return function applyAxisAngle(axis, angle) {\n        return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      };\n    }(),\n    applyMatrix3: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    },\n    applyQuaternion: function (q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    },\n    project: function (camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    },\n    unproject: function () {\n      var matrix = new Matrix4();\n      return function unproject(camera) {\n        return this.applyMatrix4(matrix.getInverse(camera.projectionMatrix)).applyMatrix4(camera.matrixWorld);\n      };\n    }(),\n    transformDirection: function (m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    },\n    clampScalar: function () {\n      var min = new Vector3();\n      var max = new Vector3();\n      return function clampScalar(minVal, maxVal) {\n        min.set(minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n    // TODO lengthSquared?\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    },\n    manhattanLength: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    cross: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      return this.crossVectors(this, v);\n    },\n    crossVectors: function (a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    },\n    projectOnVector: function (vector) {\n      var scalar = vector.dot(this) / vector.lengthSq();\n      return this.copy(vector).multiplyScalar(scalar);\n    },\n    projectOnPlane: function () {\n      var v1 = new Vector3();\n      return function projectOnPlane(planeNormal) {\n        v1.copy(this).projectOnVector(planeNormal);\n        return this.sub(v1);\n      };\n    }(),\n    reflect: function () {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      var v1 = new Vector3();\n      return function reflect(normal) {\n        return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n      };\n    }(),\n    angleTo: function (v) {\n      var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n      return Math.acos(_Math.clamp(theta, -1, 1));\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    },\n    manhattanDistanceTo: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    },\n    setFromSpherical: function (s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    },\n    setFromSphericalCoords: function (radius, phi, theta) {\n      var sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    },\n    setFromCylindrical: function (c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    },\n    setFromCylindricalCoords: function (radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    },\n    setFromMatrixPosition: function (m) {\n      var e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    },\n    setFromMatrixScale: function (m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    },\n    setFromMatrixColumn: function (m, index) {\n      return this.fromArray(m.elements, index * 4);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   * @author tschw\n   */\n\n  function Matrix3() {\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix3.prototype, {\n    isMatrix3: true,\n    set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    },\n    setFromMatrix4: function (m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    },\n    applyToBufferAttribute: function () {\n      var v1 = new Vector3();\n      return function applyToBufferAttribute(attribute) {\n        for (var i = 0, l = attribute.count; i < l; i++) {\n          v1.x = attribute.getX(i);\n          v1.y = attribute.getY(i);\n          v1.z = attribute.getZ(i);\n          v1.applyMatrix3(this);\n          attribute.setXYZ(i, v1.x, v1.y, v1.z);\n        }\n\n        return attribute;\n      };\n    }(),\n    multiply: function (m) {\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n      var a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n      var a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n      var b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n      var b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n      var b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    },\n    determinant: function () {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    },\n    getInverse: function (matrix, throwOnDegenerate) {\n      if (matrix && matrix.isMatrix4) {\n        console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");\n      }\n\n      var me = matrix.elements,\n          te = this.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n12 = me[3],\n          n22 = me[4],\n          n32 = me[5],\n          n13 = me[6],\n          n23 = me[7],\n          n33 = me[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    },\n    transpose: function () {\n      var tmp,\n          m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    },\n    getNormalMatrix: function (matrix4) {\n      return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n    },\n    transposeIntoArray: function (r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    },\n    setUvTransform: function (tx, ty, sx, sy, rotation, cx, cy) {\n      var c = Math.cos(rotation);\n      var s = Math.sin(rotation);\n      this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n    },\n    scale: function (sx, sy) {\n      var te = this.elements;\n      te[0] *= sx;\n      te[3] *= sx;\n      te[6] *= sx;\n      te[1] *= sy;\n      te[4] *= sy;\n      te[7] *= sy;\n      return this;\n    },\n    rotate: function (theta) {\n      var c = Math.cos(theta);\n      var s = Math.sin(theta);\n      var te = this.elements;\n      var a11 = te[0],\n          a12 = te[3],\n          a13 = te[6];\n      var a21 = te[1],\n          a22 = te[4],\n          a23 = te[7];\n      te[0] = c * a11 + s * a21;\n      te[3] = c * a12 + s * a22;\n      te[6] = c * a13 + s * a23;\n      te[1] = -s * a11 + c * a21;\n      te[4] = -s * a12 + c * a22;\n      te[7] = -s * a13 + c * a23;\n      return this;\n    },\n    translate: function (tx, ty) {\n      var te = this.elements;\n      te[0] += tx * te[2];\n      te[3] += tx * te[5];\n      te[6] += tx * te[8];\n      te[1] += ty * te[2];\n      te[4] += ty * te[5];\n      te[7] += ty * te[8];\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 9; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n\n      for (var i = 0; i < 9; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var ImageUtils = {\n    getDataURL: function (image) {\n      var canvas;\n\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var textureId = 0;\n\n  function Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n    this.mipmaps = [];\n    this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n    this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n    this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n    this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n    this.format = format !== undefined ? format : RGBAFormat;\n    this.type = type !== undefined ? type : UnsignedByteType;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding !== undefined ? encoding : LinearEncoding;\n    this.version = 0;\n    this.onUpdate = null;\n  }\n\n  Texture.DEFAULT_IMAGE = undefined;\n  Texture.DEFAULT_MAPPING = UVMapping;\n  Texture.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Texture,\n    isTexture: true,\n    updateMatrix: function () {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    },\n    toJSON: function (meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = _Math.generateUUID(); // UGH\n        }\n\n        if (!isRootObject && meta.images[image.uuid] === undefined) {\n          var url;\n\n          if (Array.isArray(image)) {\n            // process array of images e.g. CubeTexture\n            url = [];\n\n            for (var i = 0, l = image.length; i < l; i++) {\n              url.push(ImageUtils.getDataURL(image[i]));\n            }\n          } else {\n            // process single image\n            url = ImageUtils.getDataURL(image);\n          }\n\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: url\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    },\n    transformUv: function (uv) {\n      if (this.mapping !== UVMapping) return uv;\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  });\n  Object.defineProperty(Texture.prototype, \"needsUpdate\", {\n    set: function (value) {\n      if (value === true) this.version++;\n    }\n  });\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector4(x, y, z, w) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Vector4.prototype, {\n    isVector4: true,\n    set: function (x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setW: function (w) {\n      this.w = w;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    setAxisAngleFromQuaternion: function (q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    },\n    setAxisAngleFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle,\n          x,\n          y,\n          z,\n          // variables for result\n      epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    },\n    clampScalar: function () {\n      var min, max;\n      return function clampScalar(minVal, maxVal) {\n        if (min === undefined) {\n          min = new Vector4();\n          max = new Vector4();\n        }\n\n        min.set(minVal, minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n    manhattanLength: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      this.w = attribute.getW(index);\n      return this;\n    }\n  });\n  /**\n   * @author szimek / https://github.com/szimek/\n   * @author alteredq / http://alteredqualia.com/\n   * @author Marius Kintel / https://github.com/kintel\n   */\n\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n  function WebGLRenderTarget(width, height, options) {\n    this.width = width;\n    this.height = height;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    options = options || {};\n    if (options.minFilter === undefined) options.minFilter = LinearFilter;\n    this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n\n  WebGLRenderTarget.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: WebGLRenderTarget,\n    isWebGLRenderTarget: true,\n    setSize: function (width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      this.depthTexture = source.depthTexture;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com\n   */\n\n  function WebGLRenderTargetCube(width, height, options) {\n    WebGLRenderTarget.call(this, width, height, options);\n    this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n    this.activeMipMapLevel = 0;\n  }\n\n  WebGLRenderTargetCube.prototype = Object.create(WebGLRenderTarget.prototype);\n  WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n  WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n\n  DataTexture.prototype = Object.create(Texture.prototype);\n  DataTexture.prototype.constructor = DataTexture;\n  DataTexture.prototype.isDataTexture = true;\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Box3(min, max) {\n    this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n  }\n\n  Object.assign(Box3.prototype, {\n    isBox3: true,\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromArray: function (array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromBufferAttribute: function (attribute) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        var x = attribute.getX(i);\n        var y = attribute.getY(i);\n        var z = attribute.getZ(i);\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new Vector3();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    setFromObject: function (object) {\n      this.makeEmpty();\n      return this.expandByObject(object);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    },\n    getCenter: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getSize() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    expandByObject: function () {\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      var scope, i, l;\n      var v1 = new Vector3();\n\n      function traverse(node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                v1.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n                scope.expandByPoint(v1);\n              }\n            }\n          }\n        }\n      }\n\n      return function expandByObject(object) {\n        scope = this;\n        object.updateMatrixWorld(true);\n        object.traverse(traverse);\n        return this;\n      };\n    }(),\n    containsPoint: function (point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n    },\n    containsBox: function (box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    },\n    getParameter: function (point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getParameter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    },\n    intersectsBox: function (box) {\n      // using 6 splitting planes to rule out intersections.\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n    },\n    intersectsSphere: function () {\n      var closestPoint = new Vector3();\n      return function intersectsSphere(sphere) {\n        // Find the point on the AABB closest to the sphere center.\n        this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n        return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n      };\n    }(),\n    intersectsPlane: function (plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= -plane.constant && max >= -plane.constant;\n    },\n    intersectsTriangle: function () {\n      // triangle centered vertices\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      var v2 = new Vector3(); // triangle edge vectors\n\n      var f0 = new Vector3();\n      var f1 = new Vector3();\n      var f2 = new Vector3();\n      var testAxis = new Vector3();\n      var center = new Vector3();\n      var extents = new Vector3();\n      var triangleNormal = new Vector3();\n\n      function satForAxes(axes) {\n        var i, j;\n\n        for (i = 0, j = axes.length - 3; i <= j; i += 3) {\n          testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n          var r = extents.x * Math.abs(testAxis.x) + extents.y * Math.abs(testAxis.y) + extents.z * Math.abs(testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n          var p0 = v0.dot(testAxis);\n          var p1 = v1.dot(testAxis);\n          var p2 = v2.dot(testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n          if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n            // points of the projected triangle are outside the projected half-length of the aabb\n            // the axis is seperating and we can exit\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return function intersectsTriangle(triangle) {\n        if (this.isEmpty()) {\n          return false;\n        } // compute box center and extents\n\n\n        this.getCenter(center);\n        extents.subVectors(this.max, center); // translate triangle to aabb origin\n\n        v0.subVectors(triangle.a, center);\n        v1.subVectors(triangle.b, center);\n        v2.subVectors(triangle.c, center); // compute edge vectors for triangle\n\n        f0.subVectors(v1, v0);\n        f1.subVectors(v2, v1);\n        f2.subVectors(v0, v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n        // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n        // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n        var axes = [0, -f0.z, f0.y, 0, -f1.z, f1.y, 0, -f2.z, f2.y, f0.z, 0, -f0.x, f1.z, 0, -f1.x, f2.z, 0, -f2.x, -f0.y, f0.x, 0, -f1.y, f1.x, 0, -f2.y, f2.x, 0];\n\n        if (!satForAxes(axes)) {\n          return false;\n        } // test 3 face normals from the aabb\n\n\n        axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n        if (!satForAxes(axes)) {\n          return false;\n        } // finally testing the face normal of the triangle\n        // use already existing triangle edge vectors here\n\n\n        triangleNormal.crossVectors(f0, f1);\n        axes = [triangleNormal.x, triangleNormal.y, triangleNormal.z];\n        return satForAxes(axes);\n      };\n    }(),\n    clampPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new Vector3();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    getBoundingSphere: function () {\n      var v1 = new Vector3();\n      return function getBoundingSphere(target) {\n        if (target === undefined) {\n          console.warn('THREE.Box3: .getBoundingSphere() target is now required');\n          target = new Sphere();\n        }\n\n        this.getCenter(target.center);\n        target.radius = this.getSize(v1).length() * 0.5;\n        return target;\n      };\n    }(),\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    applyMatrix4: function () {\n      var points = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\n      return function applyMatrix4(matrix) {\n        // transform of empty box is an empty box.\n        if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n        points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n        points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n        points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n        points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n        points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n        points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n        points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n        points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n        this.setFromPoints(points);\n        return this;\n      };\n    }(),\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Sphere(center, radius) {\n    this.center = center !== undefined ? center : new Vector3();\n    this.radius = radius !== undefined ? radius : 0;\n  }\n\n  Object.assign(Sphere.prototype, {\n    set: function (center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    },\n    setFromPoints: function () {\n      var box = new Box3();\n      return function setFromPoints(points, optionalCenter) {\n        var center = this.center;\n\n        if (optionalCenter !== undefined) {\n          center.copy(optionalCenter);\n        } else {\n          box.setFromPoints(points).getCenter(center);\n        }\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = points.length; i < il; i++) {\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n        }\n\n        this.radius = Math.sqrt(maxRadiusSq);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    },\n    empty: function () {\n      return this.radius <= 0;\n    },\n    containsPoint: function (point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    },\n    distanceToPoint: function (point) {\n      return point.distanceTo(this.center) - this.radius;\n    },\n    intersectsSphere: function (sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsSphere(this);\n    },\n    intersectsPlane: function (plane) {\n      return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n    },\n    clampPoint: function (point, target) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        target.sub(this.center).normalize();\n        target.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return target;\n    },\n    getBoundingBox: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .getBoundingBox() target is now required');\n        target = new Box3();\n      }\n\n      target.set(this.center, this.center);\n      target.expandByScalar(this.radius);\n      return target;\n    },\n    applyMatrix4: function (matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    },\n    translate: function (offset) {\n      this.center.add(offset);\n      return this;\n    },\n    equals: function (sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Plane(normal, constant) {\n    // normal is assumed to be normalized\n    this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n    this.constant = constant !== undefined ? constant : 0;\n  }\n\n  Object.assign(Plane.prototype, {\n    set: function (normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    },\n    setComponents: function (x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    },\n    setFromNormalAndCoplanarPoint: function (normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal);\n      return this;\n    },\n    setFromCoplanarPoints: function () {\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function setFromCoplanarPoints(a, b, c) {\n        var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n        this.setFromNormalAndCoplanarPoint(normal, a);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    },\n    normalize: function () {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    },\n    negate: function () {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    },\n    distanceToPoint: function (point) {\n      return this.normal.dot(point) + this.constant;\n    },\n    distanceToSphere: function (sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    },\n    projectPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .projectPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n    },\n    intersectLine: function () {\n      var v1 = new Vector3();\n      return function intersectLine(line, target) {\n        if (target === undefined) {\n          console.warn('THREE.Plane: .intersectLine() target is now required');\n          target = new Vector3();\n        }\n\n        var direction = line.delta(v1);\n        var denominator = this.normal.dot(direction);\n\n        if (denominator === 0) {\n          // line is coplanar, return origin\n          if (this.distanceToPoint(line.start) === 0) {\n            return target.copy(line.start);\n          } // Unsure if this is the correct method to handle this case.\n\n\n          return undefined;\n        }\n\n        var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n        if (t < 0 || t > 1) {\n          return undefined;\n        }\n\n        return target.copy(direction).multiplyScalar(t).add(line.start);\n      };\n    }(),\n    intersectsLine: function (line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsPlane(this);\n    },\n    intersectsSphere: function (sphere) {\n      return sphere.intersectsPlane(this);\n    },\n    coplanarPoint: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .coplanarPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.constant);\n    },\n    applyMatrix4: function () {\n      var v1 = new Vector3();\n      var m1 = new Matrix3();\n      return function applyMatrix4(matrix, optionalNormalMatrix) {\n        var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n        var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix);\n        var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n        this.constant = -referencePoint.dot(normal);\n        return this;\n      };\n    }(),\n    translate: function (offset) {\n      this.constant -= offset.dot(this.normal);\n      return this;\n    },\n    equals: function (plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / http://clara.io\n   */\n\n  function Frustum(p0, p1, p2, p3, p4, p5) {\n    this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n  }\n\n  Object.assign(Frustum.prototype, {\n    set: function (p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    },\n    setFromMatrix: function (m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    },\n    intersectsObject: function () {\n      var sphere = new Sphere();\n      return function intersectsObject(object) {\n        var geometry = object.geometry;\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSprite: function () {\n      var sphere = new Sphere();\n      return function intersectsSprite(sprite) {\n        sphere.center.set(0, 0, 0);\n        sphere.radius = 0.7071067811865476;\n        sphere.applyMatrix4(sprite.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSphere: function (sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    intersectsBox: function () {\n      var p = new Vector3();\n      return function intersectsBox(box) {\n        var planes = this.planes;\n\n        for (var i = 0; i < 6; i++) {\n          var plane = planes[i]; // corner at max distance\n\n          p.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n          p.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n          p.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n          if (plane.distanceToPoint(p) < 0) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    }(),\n    containsPoint: function (point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n  var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n  var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n  var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n  var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n  var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n  var begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n  var beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n  var bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n  var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n  var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n  var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n  var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n  var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n  var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n  var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n  var color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n  var common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n  var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n  var defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n  var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n  var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n  var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n  var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n  var encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n  var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\\n\";\n  var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n  var envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n  var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n  var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n  var fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\\n\";\n  var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\\n\";\n  var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n  var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n  var gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n  var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n  var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n  var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n  var lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n  var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n  var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n  var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n  var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n  var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n  var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n  var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n  var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n  var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n  var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\n  var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\n  var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n  var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n  var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n  var map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n  var map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n  var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n  var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n  var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n  var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n  var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n  var normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n  var normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n  var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n  var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n  var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n  var project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n  var dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n  var dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n  var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n  var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n  var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n  var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n  var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n  var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n  var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n  var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n  var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n  var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n  var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n  var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n  var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n  var tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n  var uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n  var uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n  var uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n  var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n  var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n  var background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n}\\n\";\n  var background_vert = \"varying vec2 vUv;\\nvoid main() {\\n\\tvUv = uv;\\n\\tgl_Position = vec4( position, 1.0 );\\n\\tgl_Position.z = 1.0;\\n}\\n\";\n  var cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n  var cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n  var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n  var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n  var distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n  var distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n  var equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n  var equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n  var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n  var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\\n\";\n  var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n  var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n  var meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n  var normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n  var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n  var shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n  var sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n  var ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars_begin: lights_pars_begin,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_fragment_begin: lights_fragment_begin,\n    lights_fragment_maps: lights_fragment_maps,\n    lights_fragment_end: lights_fragment_end,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_fragment_begin: normal_fragment_begin,\n    normal_fragment_maps: normal_fragment_maps,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n    background_frag: background_frag,\n    background_vert: background_vert,\n    cube_frag: cube_frag,\n    cube_vert: cube_vert,\n    depth_frag: depth_frag,\n    depth_vert: depth_vert,\n    distanceRGBA_frag: distanceRGBA_frag,\n    distanceRGBA_vert: distanceRGBA_vert,\n    equirect_frag: equirect_frag,\n    equirect_vert: equirect_vert,\n    linedashed_frag: linedashed_frag,\n    linedashed_vert: linedashed_vert,\n    meshbasic_frag: meshbasic_frag,\n    meshbasic_vert: meshbasic_vert,\n    meshlambert_frag: meshlambert_frag,\n    meshlambert_vert: meshlambert_vert,\n    meshmatcap_frag: meshmatcap_frag,\n    meshmatcap_vert: meshmatcap_vert,\n    meshphong_frag: meshphong_frag,\n    meshphong_vert: meshphong_vert,\n    meshphysical_frag: meshphysical_frag,\n    meshphysical_vert: meshphysical_vert,\n    normal_frag: normal_frag,\n    normal_vert: normal_vert,\n    points_frag: points_frag,\n    points_vert: points_vert,\n    shadow_frag: shadow_frag,\n    shadow_vert: shadow_vert,\n    sprite_frag: sprite_frag,\n    sprite_vert: sprite_vert\n  };\n  /**\n   * Uniform Utilities\n   */\n\n  var UniformsUtils = {\n    merge: function (uniforms) {\n      var merged = {};\n\n      for (var u = 0; u < uniforms.length; u++) {\n        var tmp = this.clone(uniforms[u]);\n\n        for (var p in tmp) {\n          merged[p] = tmp[p];\n        }\n      }\n\n      return merged;\n    },\n    clone: function (uniforms_src) {\n      var uniforms_dst = {};\n\n      for (var u in uniforms_src) {\n        uniforms_dst[u] = {};\n\n        for (var p in uniforms_src[u]) {\n          var parameter_src = uniforms_src[u][p];\n\n          if (parameter_src && (parameter_src.isColor || parameter_src.isMatrix3 || parameter_src.isMatrix4 || parameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 || parameter_src.isTexture)) {\n            uniforms_dst[u][p] = parameter_src.clone();\n          } else if (Array.isArray(parameter_src)) {\n            uniforms_dst[u][p] = parameter_src.slice();\n          } else {\n            uniforms_dst[u][p] = parameter_src;\n          }\n        }\n      }\n\n      return uniforms_dst;\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var ColorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'rebeccapurple': 0x663399,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  };\n\n  function Color(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  Object.assign(Color.prototype, {\n    isColor: true,\n    r: 1,\n    g: 1,\n    b: 1,\n    set: function (value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    },\n    setHex: function (hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    },\n    setRGB: function (r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    },\n    setHSL: function () {\n      function hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n        return p;\n      }\n\n      return function setHSL(h, s, l) {\n        // h,s,l ranges are in 0.0 - 1.0\n        h = _Math.euclideanModulo(h, 1);\n        s = _Math.clamp(s, 0, 1);\n        l = _Math.clamp(l, 0, 1);\n\n        if (s === 0) {\n          this.r = this.g = this.b = l;\n        } else {\n          var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n          var q = 2 * l - p;\n          this.r = hue2rgb(q, p, h + 1 / 3);\n          this.g = hue2rgb(q, p, h);\n          this.b = hue2rgb(q, p, h - 1 / 3);\n        }\n\n        return this;\n      };\n    }(),\n    setStyle: function (style) {\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[5]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        // color keywords\n        var hex = ColorKeywords[style];\n\n        if (hex !== undefined) {\n          // red\n          this.setHex(hex);\n        } else {\n          // unknown color\n          console.warn('THREE.Color: Unknown color ' + style);\n        }\n      }\n\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.r, this.g, this.b);\n    },\n    copy: function (color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    },\n    copyGammaToLinear: function (color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    },\n    copyLinearToGamma: function (color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    },\n    convertGammaToLinear: function (gammaFactor) {\n      this.copyGammaToLinear(this, gammaFactor);\n      return this;\n    },\n    convertLinearToGamma: function (gammaFactor) {\n      this.copyLinearToGamma(this, gammaFactor);\n      return this;\n    },\n    copySRGBToLinear: function () {\n      function SRGBToLinear(c) {\n        return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n      }\n\n      return function copySRGBToLinear(color) {\n        this.r = SRGBToLinear(color.r);\n        this.g = SRGBToLinear(color.g);\n        this.b = SRGBToLinear(color.b);\n        return this;\n      };\n    }(),\n    copyLinearToSRGB: function () {\n      function LinearToSRGB(c) {\n        return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n      }\n\n      return function copyLinearToSRGB(color) {\n        this.r = LinearToSRGB(color.r);\n        this.g = LinearToSRGB(color.g);\n        this.b = LinearToSRGB(color.b);\n        return this;\n      };\n    }(),\n    convertSRGBToLinear: function () {\n      this.copySRGBToLinear(this);\n      return this;\n    },\n    convertLinearToSRGB: function () {\n      this.copyLinearToSRGB(this);\n      return this;\n    },\n    getHex: function () {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    },\n    getHexString: function () {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    },\n    getHSL: function (target) {\n      // h,s,l ranges are in 0.0 - 1.0\n      if (target === undefined) {\n        console.warn('THREE.Color: .getHSL() target is now required');\n        target = {\n          h: 0,\n          s: 0,\n          l: 0\n        };\n      }\n\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    },\n    getStyle: function () {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    },\n    offsetHSL: function () {\n      var hsl = {};\n      return function (h, s, l) {\n        this.getHSL(hsl);\n        hsl.h += h;\n        hsl.s += s;\n        hsl.l += l;\n        this.setHSL(hsl.h, hsl.s, hsl.l);\n        return this;\n      };\n    }(),\n    add: function (color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    },\n    addColors: function (color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    },\n    addScalar: function (s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    },\n    sub: function (color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    },\n    multiply: function (color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    },\n    lerp: function (color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    },\n    lerpHSL: function () {\n      var hslA = {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n      var hslB = {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n      return function lerpHSL(color, alpha) {\n        this.getHSL(hslA);\n        color.getHSL(hslB);\n\n        var h = _Math.lerp(hslA.h, hslB.h, alpha);\n\n        var s = _Math.lerp(hslA.s, hslB.s, alpha);\n\n        var l = _Math.lerp(hslA.l, hslB.l, alpha);\n\n        this.setHSL(h, s, l);\n        return this;\n      };\n    }(),\n    equals: function (c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) offset = 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    },\n    toJSON: function () {\n      return this.getHex();\n    }\n  });\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  var UniformsLib = {\n    common: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      },\n      alphaMap: {\n        value: null\n      }\n    },\n    specularmap: {\n      specularMap: {\n        value: null\n      }\n    },\n    envmap: {\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      reflectivity: {\n        value: 1.0\n      },\n      refractionRatio: {\n        value: 0.98\n      },\n      maxMipLevel: {\n        value: 0\n      }\n    },\n    aomap: {\n      aoMap: {\n        value: null\n      },\n      aoMapIntensity: {\n        value: 1\n      }\n    },\n    lightmap: {\n      lightMap: {\n        value: null\n      },\n      lightMapIntensity: {\n        value: 1\n      }\n    },\n    emissivemap: {\n      emissiveMap: {\n        value: null\n      }\n    },\n    bumpmap: {\n      bumpMap: {\n        value: null\n      },\n      bumpScale: {\n        value: 1\n      }\n    },\n    normalmap: {\n      normalMap: {\n        value: null\n      },\n      normalScale: {\n        value: new Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      displacementMap: {\n        value: null\n      },\n      displacementScale: {\n        value: 1\n      },\n      displacementBias: {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      roughnessMap: {\n        value: null\n      }\n    },\n    metalnessmap: {\n      metalnessMap: {\n        value: null\n      }\n    },\n    gradientmap: {\n      gradientMap: {\n        value: null\n      }\n    },\n    fog: {\n      fogDensity: {\n        value: 0.00025\n      },\n      fogNear: {\n        value: 1\n      },\n      fogFar: {\n        value: 2000\n      },\n      fogColor: {\n        value: new Color(0xffffff)\n      }\n    },\n    lights: {\n      ambientLightColor: {\n        value: []\n      },\n      directionalLights: {\n        value: [],\n        properties: {\n          direction: {},\n          color: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      directionalShadowMap: {\n        value: []\n      },\n      directionalShadowMatrix: {\n        value: []\n      },\n      spotLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          direction: {},\n          distance: {},\n          coneCos: {},\n          penumbraCos: {},\n          decay: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      spotShadowMap: {\n        value: []\n      },\n      spotShadowMatrix: {\n        value: []\n      },\n      pointLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          decay: {},\n          distance: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {},\n          shadowCameraNear: {},\n          shadowCameraFar: {}\n        }\n      },\n      pointShadowMap: {\n        value: []\n      },\n      pointShadowMatrix: {\n        value: []\n      },\n      hemisphereLights: {\n        value: [],\n        properties: {\n          direction: {},\n          skyColor: {},\n          groundColor: {}\n        }\n      },\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n      rectAreaLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          width: {},\n          height: {}\n        }\n      }\n    },\n    points: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      size: {\n        value: 1.0\n      },\n      scale: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    },\n    sprite: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      center: {\n        value: new Vector2(0.5, 0.5)\n      },\n      rotation: {\n        value: 0.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    }\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   */\n\n  var ShaderLib = {\n    basic: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n      vertexShader: ShaderChunk.meshbasic_vert,\n      fragmentShader: ShaderChunk.meshbasic_frag\n    },\n    lambert: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshlambert_vert,\n      fragmentShader: ShaderChunk.meshlambert_frag\n    },\n    phong: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        specular: {\n          value: new Color(0x111111)\n        },\n        shininess: {\n          value: 30\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphong_vert,\n      fragmentShader: ShaderChunk.meshphong_frag\n    },\n    standard: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        roughness: {\n          value: 0.5\n        },\n        metalness: {\n          value: 0.5\n        },\n        envMapIntensity: {\n          value: 1 // temporary\n\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphysical_vert,\n      fragmentShader: ShaderChunk.meshphysical_frag\n    },\n    matcap: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n        matcap: {\n          value: null\n        }\n      }]),\n      vertexShader: ShaderChunk.meshmatcap_vert,\n      fragmentShader: ShaderChunk.meshmatcap_frag\n    },\n    points: {\n      uniforms: UniformsUtils.merge([UniformsLib.points, UniformsLib.fog]),\n      vertexShader: ShaderChunk.points_vert,\n      fragmentShader: ShaderChunk.points_frag\n    },\n    dashed: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.fog, {\n        scale: {\n          value: 1\n        },\n        dashSize: {\n          value: 1\n        },\n        totalSize: {\n          value: 2\n        }\n      }]),\n      vertexShader: ShaderChunk.linedashed_vert,\n      fragmentShader: ShaderChunk.linedashed_frag\n    },\n    depth: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap]),\n      vertexShader: ShaderChunk.depth_vert,\n      fragmentShader: ShaderChunk.depth_frag\n    },\n    normal: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.normal_vert,\n      fragmentShader: ShaderChunk.normal_frag\n    },\n    sprite: {\n      uniforms: UniformsUtils.merge([UniformsLib.sprite, UniformsLib.fog]),\n      vertexShader: ShaderChunk.sprite_vert,\n      fragmentShader: ShaderChunk.sprite_frag\n    },\n    background: {\n      uniforms: {\n        t2D: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.background_vert,\n      fragmentShader: ShaderChunk.background_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    cube: {\n      uniforms: {\n        tCube: {\n          value: null\n        },\n        tFlip: {\n          value: -1\n        },\n        opacity: {\n          value: 1.0\n        }\n      },\n      vertexShader: ShaderChunk.cube_vert,\n      fragmentShader: ShaderChunk.cube_frag\n    },\n    equirect: {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.equirect_vert,\n      fragmentShader: ShaderChunk.equirect_frag\n    },\n    distanceRGBA: {\n      uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap, {\n        referencePosition: {\n          value: new Vector3()\n        },\n        nearDistance: {\n          value: 1\n        },\n        farDistance: {\n          value: 1000\n        }\n      }]),\n      vertexShader: ShaderChunk.distanceRGBA_vert,\n      fragmentShader: ShaderChunk.distanceRGBA_frag\n    },\n    shadow: {\n      uniforms: UniformsUtils.merge([UniformsLib.lights, UniformsLib.fog, {\n        color: {\n          value: new Color(0x00000)\n        },\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.shadow_vert,\n      fragmentShader: ShaderChunk.shadow_frag\n    }\n  };\n  ShaderLib.physical = {\n    uniforms: UniformsUtils.merge([ShaderLib.standard.uniforms, {\n      clearCoat: {\n        value: 0\n      },\n      clearCoatRoughness: {\n        value: 0\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLAnimation() {\n    var context = null;\n    var isAnimating = false;\n    var animationLoop = null;\n\n    function onAnimationFrame(time, frame) {\n      if (isAnimating === false) return;\n      animationLoop(time, frame);\n      context.requestAnimationFrame(onAnimationFrame);\n    }\n\n    return {\n      start: function () {\n        if (isAnimating === true) return;\n        if (animationLoop === null) return;\n        context.requestAnimationFrame(onAnimationFrame);\n        isAnimating = true;\n      },\n      stop: function () {\n        isAnimating = false;\n      },\n      setAnimationLoop: function (callback) {\n        animationLoop = callback;\n      },\n      setContext: function (value) {\n        context = value;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLAttributes(gl) {\n    var buffers = new WeakMap();\n\n    function createBuffer(attribute, bufferType) {\n      var array = attribute.array;\n      var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, buffer);\n      gl.bufferData(bufferType, array, usage);\n      attribute.onUploadCallback();\n      var type = gl.FLOAT;\n\n      if (array instanceof Float32Array) {\n        type = gl.FLOAT;\n      } else if (array instanceof Float64Array) {\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n      } else if (array instanceof Uint16Array) {\n        type = gl.UNSIGNED_SHORT;\n      } else if (array instanceof Int16Array) {\n        type = gl.SHORT;\n      } else if (array instanceof Uint32Array) {\n        type = gl.UNSIGNED_INT;\n      } else if (array instanceof Int32Array) {\n        type = gl.INT;\n      } else if (array instanceof Int8Array) {\n        type = gl.BYTE;\n      } else if (array instanceof Uint8Array) {\n        type = gl.UNSIGNED_BYTE;\n      }\n\n      return {\n        buffer: buffer,\n        type: type,\n        bytesPerElement: array.BYTES_PER_ELEMENT,\n        version: attribute.version\n      };\n    }\n\n    function updateBuffer(buffer, attribute, bufferType) {\n      var array = attribute.array;\n      var updateRange = attribute.updateRange;\n      gl.bindBuffer(bufferType, buffer);\n\n      if (attribute.dynamic === false) {\n        gl.bufferData(bufferType, array, gl.STATIC_DRAW);\n      } else if (updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, array);\n      } else if (updateRange.count === 0) {\n        console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n      } else {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n        updateRange.count = -1; // reset range\n      }\n    } //\n\n\n    function get(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      return buffers.get(attribute);\n    }\n\n    function remove(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data) {\n        gl.deleteBuffer(data.buffer);\n        buffers.delete(attribute);\n      }\n    }\n\n    function update(attribute, bufferType) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data === undefined) {\n        buffers.set(attribute, createBuffer(attribute, bufferType));\n      } else if (data.version < attribute.version) {\n        updateBuffer(data.buffer, attribute, bufferType);\n        data.version = attribute.version;\n      }\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Face3(a, b, c, normal, color, materialIndex) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = normal && normal.isVector3 ? normal : new Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = color && color.isColor ? color : new Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n  }\n\n  Object.assign(Face3.prototype, {\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.a = source.a;\n      this.b = source.b;\n      this.c = source.c;\n      this.normal.copy(source.normal);\n      this.color.copy(source.color);\n      this.materialIndex = source.materialIndex;\n\n      for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n        this.vertexNormals[i] = source.vertexNormals[i].clone();\n      }\n\n      for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n        this.vertexColors[i] = source.vertexColors[i].clone();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  function Euler(x, y, z, order) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._order = order || Euler.DefaultOrder;\n  }\n\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n  Euler.DefaultOrder = 'XYZ';\n  Object.defineProperties(Euler.prototype, {\n    x: {\n      get: function () {\n        return this._x;\n      },\n      set: function (value) {\n        this._x = value;\n        this.onChangeCallback();\n      }\n    },\n    y: {\n      get: function () {\n        return this._y;\n      },\n      set: function (value) {\n        this._y = value;\n        this.onChangeCallback();\n      }\n    },\n    z: {\n      get: function () {\n        return this._z;\n      },\n      set: function (value) {\n        this._z = value;\n        this.onChangeCallback();\n      }\n    },\n    order: {\n      get: function () {\n        return this._order;\n      },\n      set: function (value) {\n        this._order = value;\n        this.onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Euler.prototype, {\n    isEuler: true,\n    set: function (x, y, z, order) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order || this._order;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    },\n    copy: function (euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function (m, order, update) {\n      var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n      order = order || this._order;\n\n      if (order === 'XYZ') {\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.99999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n      } else if (order === 'YXZ') {\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.99999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n      } else if (order === 'ZXY') {\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.99999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n      } else if (order === 'ZYX') {\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.99999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n      } else if (order === 'YZX') {\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.99999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n      } else if (order === 'XZY') {\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.99999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n      } else {\n        console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n      }\n\n      this._order = order;\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromQuaternion: function () {\n      var matrix = new Matrix4();\n      return function setFromQuaternion(q, order, update) {\n        matrix.makeRotationFromQuaternion(q);\n        return this.setFromRotationMatrix(matrix, order, update);\n      };\n    }(),\n    setFromVector3: function (v, order) {\n      return this.set(v.x, v.y, v.z, order || this._order);\n    },\n    reorder: function () {\n      // WARNING: this discards revolution information -bhouston\n      var q = new Quaternion();\n      return function reorder(newOrder) {\n        q.setFromEuler(this);\n        return this.setFromQuaternion(q, newOrder);\n      };\n    }(),\n    equals: function (euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    },\n    fromArray: function (array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n      if (array[3] !== undefined) this._order = array[3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    },\n    toVector3: function (optionalResult) {\n      if (optionalResult) {\n        return optionalResult.set(this._x, this._y, this._z);\n      } else {\n        return new Vector3(this._x, this._y, this._z);\n      }\n    },\n    onChange: function (callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Layers() {\n    this.mask = 1 | 0;\n  }\n\n  Object.assign(Layers.prototype, {\n    set: function (channel) {\n      this.mask = 1 << channel | 0;\n    },\n    enable: function (channel) {\n      this.mask |= 1 << channel | 0;\n    },\n    toggle: function (channel) {\n      this.mask ^= 1 << channel | 0;\n    },\n    disable: function (channel) {\n      this.mask &= ~(1 << channel | 0);\n    },\n    test: function (layers) {\n      return (this.mask & layers.mask) !== 0;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author elephantatwork / www.elephantatwork.ch\n   */\n\n  var object3DId = 0;\n\n  function Object3D() {\n    Object.defineProperty(this, 'id', {\n      value: object3DId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DefaultUp.clone();\n    var position = new Vector3();\n    var rotation = new Euler();\n    var quaternion = new Quaternion();\n    var scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation.onChange(onRotationChange);\n    quaternion.onChange(onQuaternionChange);\n    Object.defineProperties(this, {\n      position: {\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.userData = {};\n  }\n\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\n  Object3D.DefaultMatrixAutoUpdate = true;\n  Object3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Object3D,\n    isObject3D: true,\n    onBeforeRender: function () {},\n    onAfterRender: function () {},\n    applyMatrix: function (matrix) {\n      this.matrix.multiplyMatrices(matrix, this.matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    applyQuaternion: function (q) {\n      this.quaternion.premultiply(q);\n      return this;\n    },\n    setRotationFromAxisAngle: function (axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    },\n    setRotationFromEuler: function (euler) {\n      this.quaternion.setFromEuler(euler, true);\n    },\n    setRotationFromMatrix: function (m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    },\n    setRotationFromQuaternion: function (q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    },\n    rotateOnAxis: function () {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      var q1 = new Quaternion();\n      return function rotateOnAxis(axis, angle) {\n        q1.setFromAxisAngle(axis, angle);\n        this.quaternion.multiply(q1);\n        return this;\n      };\n    }(),\n    rotateOnWorldAxis: function () {\n      // rotate object on axis in world space\n      // axis is assumed to be normalized\n      // method assumes no rotated parent\n      var q1 = new Quaternion();\n      return function rotateOnWorldAxis(axis, angle) {\n        q1.setFromAxisAngle(axis, angle);\n        this.quaternion.premultiply(q1);\n        return this;\n      };\n    }(),\n    rotateX: function () {\n      var v1 = new Vector3(1, 0, 0);\n      return function rotateX(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateY: function () {\n      var v1 = new Vector3(0, 1, 0);\n      return function rotateY(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateZ: function () {\n      var v1 = new Vector3(0, 0, 1);\n      return function rotateZ(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    translateOnAxis: function () {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      var v1 = new Vector3();\n      return function translateOnAxis(axis, distance) {\n        v1.copy(axis).applyQuaternion(this.quaternion);\n        this.position.add(v1.multiplyScalar(distance));\n        return this;\n      };\n    }(),\n    translateX: function () {\n      var v1 = new Vector3(1, 0, 0);\n      return function translateX(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateY: function () {\n      var v1 = new Vector3(0, 1, 0);\n      return function translateY(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateZ: function () {\n      var v1 = new Vector3(0, 0, 1);\n      return function translateZ(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    localToWorld: function (vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function () {\n      var m1 = new Matrix4();\n      return function worldToLocal(vector) {\n        return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n      };\n    }(),\n    lookAt: function () {\n      // This method does not support objects having non-uniformly-scaled parent(s)\n      var q1 = new Quaternion();\n      var m1 = new Matrix4();\n      var target = new Vector3();\n      var position = new Vector3();\n      return function lookAt(x, y, z) {\n        if (x.isVector3) {\n          target.copy(x);\n        } else {\n          target.set(x, y, z);\n        }\n\n        var parent = this.parent;\n        this.updateWorldMatrix(true, false);\n        position.setFromMatrixPosition(this.matrixWorld);\n\n        if (this.isCamera) {\n          m1.lookAt(position, target, this.up);\n        } else {\n          m1.lookAt(target, position, this.up);\n        }\n\n        this.quaternion.setFromRotationMatrix(m1);\n\n        if (parent) {\n          m1.extractRotation(parent.matrixWorld);\n          q1.setFromRotationMatrix(m1);\n          this.quaternion.premultiply(q1.inverse());\n        }\n      };\n    }(),\n    add: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n        return this;\n      }\n\n      if (object && object.isObject3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        object.dispatchEvent({\n          type: 'added'\n        });\n        this.children.push(object);\n      } else {\n        console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n      }\n\n      return this;\n    },\n    remove: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        object.dispatchEvent({\n          type: 'removed'\n        });\n        this.children.splice(index, 1);\n      }\n\n      return this;\n    },\n    getObjectById: function (id) {\n      return this.getObjectByProperty('id', id);\n    },\n    getObjectByName: function (name) {\n      return this.getObjectByProperty('name', name);\n    },\n    getObjectByProperty: function (name, value) {\n      if (this[name] === value) return this;\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    },\n    getWorldPosition: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      return target.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function () {\n      var position = new Vector3();\n      var scale = new Vector3();\n      return function getWorldQuaternion(target) {\n        if (target === undefined) {\n          console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n          target = new Quaternion();\n        }\n\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, target, scale);\n        return target;\n      };\n    }(),\n    getWorldScale: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      return function getWorldScale(target) {\n        if (target === undefined) {\n          console.warn('THREE.Object3D: .getWorldScale() target is now required');\n          target = new Vector3();\n        }\n\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, quaternion, target);\n        return target;\n      };\n    }(),\n    getWorldDirection: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      var e = this.matrixWorld.elements;\n      return target.set(e[8], e[9], e[10]).normalize();\n    },\n    raycast: function () {},\n    traverse: function (callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    },\n    traverseVisible: function (callback) {\n      if (this.visible === false) return;\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    },\n    traverseAncestors: function (callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    },\n    updateMatrix: function () {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    },\n    updateMatrixWorld: function (force) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.matrixWorldNeedsUpdate || force) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(force);\n      }\n    },\n    updateWorldMatrix: function (updateParents, updateChildren) {\n      var parent = this.parent;\n\n      if (updateParents === true && parent !== null) {\n        parent.updateWorldMatrix(true, false);\n      }\n\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      } // update children\n\n\n      if (updateChildren === true) {\n        var children = this.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateWorldMatrix(false, true);\n        }\n      }\n    },\n    toJSON: function (meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; //\n\n      function serialize(library, element) {\n        if (library[element.uuid] === undefined) {\n          library[element.uuid] = element.toJSON(meta);\n        }\n\n        return element.uuid;\n      }\n\n      if (this.isMesh || this.isLine || this.isPoints) {\n        object.geometry = serialize(meta.geometries, this.geometry);\n        var parameters = this.geometry.parameters;\n\n        if (parameters !== undefined && parameters.shapes !== undefined) {\n          var shapes = parameters.shapes;\n\n          if (Array.isArray(shapes)) {\n            for (var i = 0, l = shapes.length; i < l; i++) {\n              var shape = shapes[i];\n              serialize(meta.shapes, shape);\n            }\n          } else {\n            serialize(meta.shapes, shapes);\n          }\n        }\n      }\n\n      if (this.material !== undefined) {\n        if (Array.isArray(this.material)) {\n          var uuids = [];\n\n          for (var i = 0, l = this.material.length; i < l; i++) {\n            uuids.push(serialize(meta.materials, this.material[i]));\n          }\n\n          object.material = uuids;\n        } else {\n          object.material = serialize(meta.materials, this.material);\n        }\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        var shapes = extractFromCache(meta.shapes);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n        if (shapes.length > 0) output.shapes = shapes;\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    },\n    clone: function (recursive) {\n      return new this.constructor().copy(this, recursive);\n    },\n    copy: function (source, recursive) {\n      if (recursive === undefined) recursive = true;\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.layers.mask = source.layers.mask;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author bhouston / http://clara.io\n   */\n\n  var geometryId = 0; // Geometry uses even numbers as Id\n\n  function Geometry() {\n    Object.defineProperty(this, 'id', {\n      value: geometryId += 2\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Geometry';\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.elementsNeedUpdate = false;\n    this.verticesNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.lineDistancesNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Geometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Geometry,\n    isGeometry: true,\n    applyMatrix: function (matrix) {\n      var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n      for (var i = 0, il = this.vertices.length; i < il; i++) {\n        var vertex = this.vertices[i];\n        vertex.applyMatrix4(matrix);\n      }\n\n      for (var i = 0, il = this.faces.length; i < il; i++) {\n        var face = this.faces[i];\n        face.normal.applyMatrix3(normalMatrix).normalize();\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n        }\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      this.verticesNeedUpdate = true;\n      this.normalsNeedUpdate = true;\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1 = new Matrix4();\n      return function rotateX(angle) {\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1 = new Matrix4();\n      return function rotateY(angle) {\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1 = new Matrix4();\n      return function rotateZ(angle) {\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1 = new Matrix4();\n      return function translate(x, y, z) {\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1 = new Matrix4();\n      return function scale(x, y, z) {\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj = new Object3D();\n      return function lookAt(vector) {\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    fromBufferGeometry: function (geometry) {\n      var scope = this;\n      var indices = geometry.index !== null ? geometry.index.array : undefined;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n      var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n      var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n      var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n      var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n      if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n      var tempNormals = [];\n      var tempUVs = [];\n      var tempUVs2 = [];\n\n      for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n        scope.vertices.push(new Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n        if (normals !== undefined) {\n          tempNormals.push(new Vector3(normals[i], normals[i + 1], normals[i + 2]));\n        }\n\n        if (colors !== undefined) {\n          scope.colors.push(new Color(colors[i], colors[i + 1], colors[i + 2]));\n        }\n\n        if (uvs !== undefined) {\n          tempUVs.push(new Vector2(uvs[j], uvs[j + 1]));\n        }\n\n        if (uvs2 !== undefined) {\n          tempUVs2.push(new Vector2(uvs2[j], uvs2[j + 1]));\n        }\n      }\n\n      function addFace(a, b, c, materialIndex) {\n        var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n        var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n        var face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n        scope.faces.push(face);\n\n        if (uvs !== undefined) {\n          scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n        }\n\n        if (uvs2 !== undefined) {\n          scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n        }\n      }\n\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            if (indices !== undefined) {\n              addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n            } else {\n              addFace(j, j + 1, j + 2, group.materialIndex);\n            }\n          }\n        }\n      } else {\n        if (indices !== undefined) {\n          for (var i = 0; i < indices.length; i += 3) {\n            addFace(indices[i], indices[i + 1], indices[i + 2]);\n          }\n        } else {\n          for (var i = 0; i < positions.length / 3; i += 3) {\n            addFace(i, i + 1, i + 2);\n          }\n        }\n      }\n\n      this.computeFaceNormals();\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      return this;\n    },\n    center: function () {\n      var offset = new Vector3();\n      return function center() {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(offset).negate();\n        this.translate(offset.x, offset.y, offset.z);\n        return this;\n      };\n    }(),\n    normalize: function () {\n      this.computeBoundingSphere();\n      var center = this.boundingSphere.center;\n      var radius = this.boundingSphere.radius;\n      var s = radius === 0 ? 1 : 1.0 / radius;\n      var matrix = new Matrix4();\n      matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n      this.applyMatrix(matrix);\n      return this;\n    },\n    computeFaceNormals: function () {\n      var cb = new Vector3(),\n          ab = new Vector3();\n\n      for (var f = 0, fl = this.faces.length; f < fl; f++) {\n        var face = this.faces[f];\n        var vA = this.vertices[face.a];\n        var vB = this.vertices[face.b];\n        var vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        face.normal.copy(cb);\n      }\n    },\n    computeVertexNormals: function (areaWeighted) {\n      if (areaWeighted === undefined) areaWeighted = true;\n      var v, vl, f, fl, face, vertices;\n      vertices = new Array(this.vertices.length);\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v] = new Vector3();\n      }\n\n      if (areaWeighted) {\n        // vertex normals weighted by triangle areas\n        // http://www.iquilezles.org/www/articles/normals/normals.htm\n        var vA, vB, vC;\n        var cb = new Vector3(),\n            ab = new Vector3();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vA = this.vertices[face.a];\n          vB = this.vertices[face.b];\n          vC = this.vertices[face.c];\n          cb.subVectors(vC, vB);\n          ab.subVectors(vA, vB);\n          cb.cross(ab);\n          vertices[face.a].add(cb);\n          vertices[face.b].add(cb);\n          vertices[face.c].add(cb);\n        }\n      } else {\n        this.computeFaceNormals();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vertices[face.a].add(face.normal);\n          vertices[face.b].add(face.normal);\n          vertices[face.c].add(face.normal);\n        }\n      }\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v].normalize();\n      }\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(vertices[face.a]);\n          vertexNormals[1].copy(vertices[face.b]);\n          vertexNormals[2].copy(vertices[face.c]);\n        } else {\n          vertexNormals[0] = vertices[face.a].clone();\n          vertexNormals[1] = vertices[face.b].clone();\n          vertexNormals[2] = vertices[face.c].clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeFlatVertexNormals: function () {\n      var f, fl, face;\n      this.computeFaceNormals();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(face.normal);\n          vertexNormals[1].copy(face.normal);\n          vertexNormals[2].copy(face.normal);\n        } else {\n          vertexNormals[0] = face.normal.clone();\n          vertexNormals[1] = face.normal.clone();\n          vertexNormals[2] = face.normal.clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeMorphNormals: function () {\n      var i, il, f, fl, face; // save original normals\n      // - create temp variables on first access\n      //   otherwise just copy (for faster repeated calls)\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n\n        if (!face.__originalFaceNormal) {\n          face.__originalFaceNormal = face.normal.clone();\n        } else {\n          face.__originalFaceNormal.copy(face.normal);\n        }\n\n        if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n        for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n          if (!face.__originalVertexNormals[i]) {\n            face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n          } else {\n            face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n          }\n        }\n      } // use temp geometry to compute face and vertex normals for each morph\n\n\n      var tmpGeo = new Geometry();\n      tmpGeo.faces = this.faces;\n\n      for (i = 0, il = this.morphTargets.length; i < il; i++) {\n        // create on first access\n        if (!this.morphNormals[i]) {\n          this.morphNormals[i] = {};\n          this.morphNormals[i].faceNormals = [];\n          this.morphNormals[i].vertexNormals = [];\n          var dstNormalsFace = this.morphNormals[i].faceNormals;\n          var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n          var faceNormal, vertexNormals;\n\n          for (f = 0, fl = this.faces.length; f < fl; f++) {\n            faceNormal = new Vector3();\n            vertexNormals = {\n              a: new Vector3(),\n              b: new Vector3(),\n              c: new Vector3()\n            };\n            dstNormalsFace.push(faceNormal);\n            dstNormalsVertex.push(vertexNormals);\n          }\n        }\n\n        var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n        tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n        tmpGeo.computeFaceNormals();\n        tmpGeo.computeVertexNormals(); // store morph normals\n\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          faceNormal = morphNormals.faceNormals[f];\n          vertexNormals = morphNormals.vertexNormals[f];\n          faceNormal.copy(face.normal);\n          vertexNormals.a.copy(face.vertexNormals[0]);\n          vertexNormals.b.copy(face.vertexNormals[1]);\n          vertexNormals.c.copy(face.vertexNormals[2]);\n        }\n      } // restore original normals\n\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        face.normal = face.__originalFaceNormal;\n        face.vertexNormals = face.__originalVertexNormals;\n      }\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      this.boundingBox.setFromPoints(this.vertices);\n    },\n    computeBoundingSphere: function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      this.boundingSphere.setFromPoints(this.vertices);\n    },\n    merge: function (geometry, matrix, materialIndexOffset) {\n      if (!(geometry && geometry.isGeometry)) {\n        console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n        return;\n      }\n\n      var normalMatrix,\n          vertexOffset = this.vertices.length,\n          vertices1 = this.vertices,\n          vertices2 = geometry.vertices,\n          faces1 = this.faces,\n          faces2 = geometry.faces,\n          uvs1 = this.faceVertexUvs[0],\n          uvs2 = geometry.faceVertexUvs[0],\n          colors1 = this.colors,\n          colors2 = geometry.colors;\n      if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n      if (matrix !== undefined) {\n        normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      } // vertices\n\n\n      for (var i = 0, il = vertices2.length; i < il; i++) {\n        var vertex = vertices2[i];\n        var vertexCopy = vertex.clone();\n        if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n        vertices1.push(vertexCopy);\n      } // colors\n\n\n      for (var i = 0, il = colors2.length; i < il; i++) {\n        colors1.push(colors2[i].clone());\n      } // faces\n\n\n      for (i = 0, il = faces2.length; i < il; i++) {\n        var face = faces2[i],\n            faceCopy,\n            normal,\n            color,\n            faceVertexNormals = face.vertexNormals,\n            faceVertexColors = face.vertexColors;\n        faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n        faceCopy.normal.copy(face.normal);\n\n        if (normalMatrix !== undefined) {\n          faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n          normal = faceVertexNormals[j].clone();\n\n          if (normalMatrix !== undefined) {\n            normal.applyMatrix3(normalMatrix).normalize();\n          }\n\n          faceCopy.vertexNormals.push(normal);\n        }\n\n        faceCopy.color.copy(face.color);\n\n        for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n          color = faceVertexColors[j];\n          faceCopy.vertexColors.push(color.clone());\n        }\n\n        faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n        faces1.push(faceCopy);\n      } // uvs\n\n\n      for (i = 0, il = uvs2.length; i < il; i++) {\n        var uv = uvs2[i],\n            uvCopy = [];\n\n        if (uv === undefined) {\n          continue;\n        }\n\n        for (var j = 0, jl = uv.length; j < jl; j++) {\n          uvCopy.push(uv[j].clone());\n        }\n\n        uvs1.push(uvCopy);\n      }\n    },\n    mergeMesh: function (mesh) {\n      if (!(mesh && mesh.isMesh)) {\n        console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n        return;\n      }\n\n      if (mesh.matrixAutoUpdate) mesh.updateMatrix();\n      this.merge(mesh.geometry, mesh.matrix);\n    },\n\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    mergeVertices: function () {\n      var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n      var unique = [],\n          changes = [];\n      var v, key;\n      var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n      var precision = Math.pow(10, precisionPoints);\n      var i, il, face;\n      var indices, j, jl;\n\n      for (i = 0, il = this.vertices.length; i < il; i++) {\n        v = this.vertices[i];\n        key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n        if (verticesMap[key] === undefined) {\n          verticesMap[key] = i;\n          unique.push(this.vertices[i]);\n          changes[i] = unique.length - 1;\n        } else {\n          //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n          changes[i] = changes[verticesMap[key]];\n        }\n      } // if faces are completely degenerate after merging vertices, we\n      // have to remove them from the geometry.\n\n\n      var faceIndicesToRemove = [];\n\n      for (i = 0, il = this.faces.length; i < il; i++) {\n        face = this.faces[i];\n        face.a = changes[face.a];\n        face.b = changes[face.b];\n        face.c = changes[face.c];\n        indices = [face.a, face.b, face.c]; // if any duplicate vertices are found in a Face3\n        // we have to remove the face as nothing can be saved\n\n        for (var n = 0; n < 3; n++) {\n          if (indices[n] === indices[(n + 1) % 3]) {\n            faceIndicesToRemove.push(i);\n            break;\n          }\n        }\n      }\n\n      for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n        var idx = faceIndicesToRemove[i];\n        this.faces.splice(idx, 1);\n\n        for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n          this.faceVertexUvs[j].splice(idx, 1);\n        }\n      } // Use unique set of vertices\n\n\n      var diff = this.vertices.length - unique.length;\n      this.vertices = unique;\n      return diff;\n    },\n    setFromPoints: function (points) {\n      this.vertices = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        this.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return this;\n    },\n    sortFacesByMaterialIndex: function () {\n      var faces = this.faces;\n      var length = faces.length; // tag faces\n\n      for (var i = 0; i < length; i++) {\n        faces[i]._id = i;\n      } // sort faces\n\n\n      function materialIndexSort(a, b) {\n        return a.materialIndex - b.materialIndex;\n      }\n\n      faces.sort(materialIndexSort); // sort uvs\n\n      var uvs1 = this.faceVertexUvs[0];\n      var uvs2 = this.faceVertexUvs[1];\n      var newUvs1, newUvs2;\n      if (uvs1 && uvs1.length === length) newUvs1 = [];\n      if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n      for (var i = 0; i < length; i++) {\n        var id = faces[i]._id;\n        if (newUvs1) newUvs1.push(uvs1[id]);\n        if (newUvs2) newUvs2.push(uvs2[id]);\n      }\n\n      if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n      if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Geometry',\n          generator: 'Geometry.toJSON'\n        }\n      }; // standard Geometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      var vertices = [];\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var vertex = this.vertices[i];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      var faces = [];\n      var normals = [];\n      var normalsHash = {};\n      var colors = [];\n      var colorsHash = {};\n      var uvs = [];\n      var uvsHash = {};\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n        var hasMaterial = true;\n        var hasFaceUv = false; // deprecated\n\n        var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n        var hasFaceNormal = face.normal.length() > 0;\n        var hasFaceVertexNormal = face.vertexNormals.length > 0;\n        var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n        var hasFaceVertexColor = face.vertexColors.length > 0;\n        var faceType = 0;\n        faceType = setBit(faceType, 0, 0); // isQuad\n\n        faceType = setBit(faceType, 1, hasMaterial);\n        faceType = setBit(faceType, 2, hasFaceUv);\n        faceType = setBit(faceType, 3, hasFaceVertexUv);\n        faceType = setBit(faceType, 4, hasFaceNormal);\n        faceType = setBit(faceType, 5, hasFaceVertexNormal);\n        faceType = setBit(faceType, 6, hasFaceColor);\n        faceType = setBit(faceType, 7, hasFaceVertexColor);\n        faces.push(faceType);\n        faces.push(face.a, face.b, face.c);\n        faces.push(face.materialIndex);\n\n        if (hasFaceVertexUv) {\n          var faceVertexUvs = this.faceVertexUvs[0][i];\n          faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n        }\n\n        if (hasFaceNormal) {\n          faces.push(getNormalIndex(face.normal));\n        }\n\n        if (hasFaceVertexNormal) {\n          var vertexNormals = face.vertexNormals;\n          faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n        }\n\n        if (hasFaceColor) {\n          faces.push(getColorIndex(face.color));\n        }\n\n        if (hasFaceVertexColor) {\n          var vertexColors = face.vertexColors;\n          faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n        }\n      }\n\n      function setBit(value, position, enabled) {\n        return enabled ? value | 1 << position : value & ~(1 << position);\n      }\n\n      function getNormalIndex(normal) {\n        var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n        if (normalsHash[hash] !== undefined) {\n          return normalsHash[hash];\n        }\n\n        normalsHash[hash] = normals.length / 3;\n        normals.push(normal.x, normal.y, normal.z);\n        return normalsHash[hash];\n      }\n\n      function getColorIndex(color) {\n        var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n        if (colorsHash[hash] !== undefined) {\n          return colorsHash[hash];\n        }\n\n        colorsHash[hash] = colors.length;\n        colors.push(color.getHex());\n        return colorsHash[hash];\n      }\n\n      function getUvIndex(uv) {\n        var hash = uv.x.toString() + uv.y.toString();\n\n        if (uvsHash[hash] !== undefined) {\n          return uvsHash[hash];\n        }\n\n        uvsHash[hash] = uvs.length / 2;\n        uvs.push(uv.x, uv.y);\n        return uvsHash[hash];\n      }\n\n      data.data = {};\n      data.data.vertices = vertices;\n      data.data.normals = normals;\n      if (colors.length > 0) data.data.colors = colors;\n      if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n      data.data.faces = faces;\n      return data;\n    },\n    clone: function () {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new Geometry().copy(this);\n    },\n    copy: function (source) {\n      var i, il, j, jl, k, kl; // reset\n\n      this.vertices = [];\n      this.colors = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      this.morphTargets = [];\n      this.morphNormals = [];\n      this.skinWeights = [];\n      this.skinIndices = [];\n      this.lineDistances = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // vertices\n\n      var vertices = source.vertices;\n\n      for (i = 0, il = vertices.length; i < il; i++) {\n        this.vertices.push(vertices[i].clone());\n      } // colors\n\n\n      var colors = source.colors;\n\n      for (i = 0, il = colors.length; i < il; i++) {\n        this.colors.push(colors[i].clone());\n      } // faces\n\n\n      var faces = source.faces;\n\n      for (i = 0, il = faces.length; i < il; i++) {\n        this.faces.push(faces[i].clone());\n      } // face vertex uvs\n\n\n      for (i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n        var faceVertexUvs = source.faceVertexUvs[i];\n\n        if (this.faceVertexUvs[i] === undefined) {\n          this.faceVertexUvs[i] = [];\n        }\n\n        for (j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n          var uvs = faceVertexUvs[j],\n              uvsCopy = [];\n\n          for (k = 0, kl = uvs.length; k < kl; k++) {\n            var uv = uvs[k];\n            uvsCopy.push(uv.clone());\n          }\n\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      } // morph targets\n\n\n      var morphTargets = source.morphTargets;\n\n      for (i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = {};\n        morphTarget.name = morphTargets[i].name; // vertices\n\n        if (morphTargets[i].vertices !== undefined) {\n          morphTarget.vertices = [];\n\n          for (j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n            morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n          }\n        } // normals\n\n\n        if (morphTargets[i].normals !== undefined) {\n          morphTarget.normals = [];\n\n          for (j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n            morphTarget.normals.push(morphTargets[i].normals[j].clone());\n          }\n        }\n\n        this.morphTargets.push(morphTarget);\n      } // morph normals\n\n\n      var morphNormals = source.morphNormals;\n\n      for (i = 0, il = morphNormals.length; i < il; i++) {\n        var morphNormal = {}; // vertex normals\n\n        if (morphNormals[i].vertexNormals !== undefined) {\n          morphNormal.vertexNormals = [];\n\n          for (j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n            var srcVertexNormal = morphNormals[i].vertexNormals[j];\n            var destVertexNormal = {};\n            destVertexNormal.a = srcVertexNormal.a.clone();\n            destVertexNormal.b = srcVertexNormal.b.clone();\n            destVertexNormal.c = srcVertexNormal.c.clone();\n            morphNormal.vertexNormals.push(destVertexNormal);\n          }\n        } // face normals\n\n\n        if (morphNormals[i].faceNormals !== undefined) {\n          morphNormal.faceNormals = [];\n\n          for (j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n            morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n          }\n        }\n\n        this.morphNormals.push(morphNormal);\n      } // skin weights\n\n\n      var skinWeights = source.skinWeights;\n\n      for (i = 0, il = skinWeights.length; i < il; i++) {\n        this.skinWeights.push(skinWeights[i].clone());\n      } // skin indices\n\n\n      var skinIndices = source.skinIndices;\n\n      for (i = 0, il = skinIndices.length; i < il; i++) {\n        this.skinIndices.push(skinIndices[i].clone());\n      } // line distances\n\n\n      var lineDistances = source.lineDistances;\n\n      for (i = 0, il = lineDistances.length; i < il; i++) {\n        this.lineDistances.push(lineDistances[i]);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // update flags\n\n\n      this.elementsNeedUpdate = source.elementsNeedUpdate;\n      this.verticesNeedUpdate = source.verticesNeedUpdate;\n      this.uvsNeedUpdate = source.uvsNeedUpdate;\n      this.normalsNeedUpdate = source.normalsNeedUpdate;\n      this.colorsNeedUpdate = source.colorsNeedUpdate;\n      this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n      this.groupsNeedUpdate = source.groupsNeedUpdate;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferAttribute(array, itemSize, normalized) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n    set: function (value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    isBufferAttribute: true,\n    onUploadCallback: function () {},\n    setArray: function (array) {\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.count = array !== undefined ? array.length / this.itemSize : 0;\n      this.array = array;\n      return this;\n    },\n    setDynamic: function (value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.count = source.count;\n      this.normalized = source.normalized;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    copyArray: function (array) {\n      this.array.set(array);\n      return this;\n    },\n    copyColorsArray: function (colors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    },\n    copyVector2sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    },\n    copyVector3sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    },\n    copyVector4sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    getX: function (index) {\n      return this.array[index * this.itemSize];\n    },\n    setX: function (index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    },\n    getY: function (index) {\n      return this.array[index * this.itemSize + 1];\n    },\n    setY: function (index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    },\n    getZ: function (index) {\n      return this.array[index * this.itemSize + 2];\n    },\n    setZ: function (index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    },\n    getW: function (index) {\n      return this.array[index * this.itemSize + 3];\n    },\n    setW: function (index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    },\n    setXY: function (index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    },\n    onUpload: function (callback) {\n      this.onUploadCallback = callback;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.array, this.itemSize).copy(this);\n    }\n  }); //\n\n  function Int8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int8Array(array), itemSize, normalized);\n  }\n\n  Int8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n  function Uint8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8Array(array), itemSize, normalized);\n  }\n\n  Uint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n  function Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n  }\n\n  Uint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n  function Int16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int16Array(array), itemSize, normalized);\n  }\n\n  Int16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n  function Uint16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n  }\n\n  Uint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n  function Int32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int32Array(array), itemSize, normalized);\n  }\n\n  Int32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n  function Uint32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint32Array(array), itemSize, normalized);\n  }\n\n  Uint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n  function Float32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float32Array(array), itemSize, normalized);\n  }\n\n  Float32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n  function Float64BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float64Array(array), itemSize, normalized);\n  }\n\n  Float64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectGeometry() {\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = []; // this.lineDistances = [];\n\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.verticesNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Object.assign(DirectGeometry.prototype, {\n    computeGroups: function (geometry) {\n      var group;\n      var groups = [];\n      var materialIndex = undefined;\n      var faces = geometry.faces;\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i]; // materials\n\n        if (face.materialIndex !== materialIndex) {\n          materialIndex = face.materialIndex;\n\n          if (group !== undefined) {\n            group.count = i * 3 - group.start;\n            groups.push(group);\n          }\n\n          group = {\n            start: i * 3,\n            materialIndex: materialIndex\n          };\n        }\n      }\n\n      if (group !== undefined) {\n        group.count = i * 3 - group.start;\n        groups.push(group);\n      }\n\n      this.groups = groups;\n    },\n    fromGeometry: function (geometry) {\n      var faces = geometry.faces;\n      var vertices = geometry.vertices;\n      var faceVertexUvs = geometry.faceVertexUvs;\n      var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n      var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n      var morphTargets = geometry.morphTargets;\n      var morphTargetsLength = morphTargets.length;\n      var morphTargetsPosition;\n\n      if (morphTargetsLength > 0) {\n        morphTargetsPosition = [];\n\n        for (var i = 0; i < morphTargetsLength; i++) {\n          morphTargetsPosition[i] = {\n            name: morphTargets[i].name,\n            data: []\n          };\n        }\n\n        this.morphTargets.position = morphTargetsPosition;\n      }\n\n      var morphNormals = geometry.morphNormals;\n      var morphNormalsLength = morphNormals.length;\n      var morphTargetsNormal;\n\n      if (morphNormalsLength > 0) {\n        morphTargetsNormal = [];\n\n        for (var i = 0; i < morphNormalsLength; i++) {\n          morphTargetsNormal[i] = {\n            name: morphNormals[i].name,\n            data: []\n          };\n        }\n\n        this.morphTargets.normal = morphTargetsNormal;\n      } // skins\n\n\n      var skinIndices = geometry.skinIndices;\n      var skinWeights = geometry.skinWeights;\n      var hasSkinIndices = skinIndices.length === vertices.length;\n      var hasSkinWeights = skinWeights.length === vertices.length; //\n\n      if (vertices.length > 0 && faces.length === 0) {\n        console.error('THREE.DirectGeometry: Faceless geometries are not supported.');\n      }\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i];\n        this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n        } else {\n          var normal = face.normal;\n          this.normals.push(normal, normal, normal);\n        }\n\n        var vertexColors = face.vertexColors;\n\n        if (vertexColors.length === 3) {\n          this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n        } else {\n          var color = face.color;\n          this.colors.push(color, color, color);\n        }\n\n        if (hasFaceVertexUv === true) {\n          var vertexUvs = faceVertexUvs[0][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n            this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        }\n\n        if (hasFaceVertexUv2 === true) {\n          var vertexUvs = faceVertexUvs[1][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n            this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        } // morphs\n\n\n        for (var j = 0; j < morphTargetsLength; j++) {\n          var morphTarget = morphTargets[j].vertices;\n          morphTargetsPosition[j].data.push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n        }\n\n        for (var j = 0; j < morphNormalsLength; j++) {\n          var morphNormal = morphNormals[j].vertexNormals[i];\n          morphTargetsNormal[j].data.push(morphNormal.a, morphNormal.b, morphNormal.c);\n        } // skins\n\n\n        if (hasSkinIndices) {\n          this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n        }\n\n        if (hasSkinWeights) {\n          this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n        }\n      }\n\n      this.computeGroups(geometry);\n      this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function arrayMax(array) {\n    if (array.length === 0) return -Infinity;\n    var max = array[0];\n\n    for (var i = 1, l = array.length; i < l; ++i) {\n      if (array[i] > max) max = array[i];\n    }\n\n    return max;\n  }\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n  function BufferGeometry() {\n    Object.defineProperty(this, 'id', {\n      value: bufferGeometryId += 2\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    this.userData = {};\n  }\n\n  BufferGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: BufferGeometry,\n    isBufferGeometry: true,\n    getIndex: function () {\n      return this.index;\n    },\n    setIndex: function (index) {\n      if (Array.isArray(index)) {\n        this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n      } else {\n        this.index = index;\n      }\n    },\n    addAttribute: function (name, attribute) {\n      if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n        console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n        return this.addAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n      }\n\n      if (name === 'index') {\n        console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n        this.setIndex(attribute);\n        return this;\n      }\n\n      this.attributes[name] = attribute;\n      return this;\n    },\n    getAttribute: function (name) {\n      return this.attributes[name];\n    },\n    removeAttribute: function (name) {\n      delete this.attributes[name];\n      return this;\n    },\n    addGroup: function (start, count, materialIndex) {\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex !== undefined ? materialIndex : 0\n      });\n    },\n    clearGroups: function () {\n      this.groups = [];\n    },\n    setDrawRange: function (start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    },\n    applyMatrix: function (matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        matrix.applyToBufferAttribute(position);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n        normalMatrix.applyToBufferAttribute(normal);\n        normal.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1 = new Matrix4();\n      return function rotateX(angle) {\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1 = new Matrix4();\n      return function rotateY(angle) {\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1 = new Matrix4();\n      return function rotateZ(angle) {\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1 = new Matrix4();\n      return function translate(x, y, z) {\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1 = new Matrix4();\n      return function scale(x, y, z) {\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj = new Object3D();\n      return function lookAt(vector) {\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    center: function () {\n      var offset = new Vector3();\n      return function center() {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(offset).negate();\n        this.translate(offset.x, offset.y, offset.z);\n        return this;\n      };\n    }(),\n    setFromObject: function (object) {\n      // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n      var geometry = object.geometry;\n\n      if (object.isPoints || object.isLine) {\n        var positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n        var colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n        this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n        this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n        if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n          var lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n          this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n        }\n\n        if (geometry.boundingSphere !== null) {\n          this.boundingSphere = geometry.boundingSphere.clone();\n        }\n\n        if (geometry.boundingBox !== null) {\n          this.boundingBox = geometry.boundingBox.clone();\n        }\n      } else if (object.isMesh) {\n        if (geometry && geometry.isGeometry) {\n          this.fromGeometry(geometry);\n        }\n      }\n\n      return this;\n    },\n    setFromPoints: function (points) {\n      var position = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        position.push(point.x, point.y, point.z || 0);\n      }\n\n      this.addAttribute('position', new Float32BufferAttribute(position, 3));\n      return this;\n    },\n    updateFromObject: function (object) {\n      var geometry = object.geometry;\n\n      if (object.isMesh) {\n        var direct = geometry.__directGeometry;\n\n        if (geometry.elementsNeedUpdate === true) {\n          direct = undefined;\n          geometry.elementsNeedUpdate = false;\n        }\n\n        if (direct === undefined) {\n          return this.fromGeometry(geometry);\n        }\n\n        direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        geometry.verticesNeedUpdate = false;\n        geometry.normalsNeedUpdate = false;\n        geometry.colorsNeedUpdate = false;\n        geometry.uvsNeedUpdate = false;\n        geometry.groupsNeedUpdate = false;\n        geometry = direct;\n      }\n\n      var attribute;\n\n      if (geometry.verticesNeedUpdate === true) {\n        attribute = this.attributes.position;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.vertices);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.verticesNeedUpdate = false;\n      }\n\n      if (geometry.normalsNeedUpdate === true) {\n        attribute = this.attributes.normal;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.normals);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.normalsNeedUpdate = false;\n      }\n\n      if (geometry.colorsNeedUpdate === true) {\n        attribute = this.attributes.color;\n\n        if (attribute !== undefined) {\n          attribute.copyColorsArray(geometry.colors);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.colorsNeedUpdate = false;\n      }\n\n      if (geometry.uvsNeedUpdate) {\n        attribute = this.attributes.uv;\n\n        if (attribute !== undefined) {\n          attribute.copyVector2sArray(geometry.uvs);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.uvsNeedUpdate = false;\n      }\n\n      if (geometry.lineDistancesNeedUpdate) {\n        attribute = this.attributes.lineDistance;\n\n        if (attribute !== undefined) {\n          attribute.copyArray(geometry.lineDistances);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.lineDistancesNeedUpdate = false;\n      }\n\n      if (geometry.groupsNeedUpdate) {\n        geometry.computeGroups(object.geometry);\n        this.groups = geometry.groups;\n        geometry.groupsNeedUpdate = false;\n      }\n\n      return this;\n    },\n    fromGeometry: function (geometry) {\n      geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n      return this.fromDirectGeometry(geometry.__directGeometry);\n    },\n    fromDirectGeometry: function (geometry) {\n      var positions = new Float32Array(geometry.vertices.length * 3);\n      this.addAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n      if (geometry.normals.length > 0) {\n        var normals = new Float32Array(geometry.normals.length * 3);\n        this.addAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n      }\n\n      if (geometry.colors.length > 0) {\n        var colors = new Float32Array(geometry.colors.length * 3);\n        this.addAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n      }\n\n      if (geometry.uvs.length > 0) {\n        var uvs = new Float32Array(geometry.uvs.length * 2);\n        this.addAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n      }\n\n      if (geometry.uvs2.length > 0) {\n        var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n        this.addAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n      } // groups\n\n\n      this.groups = geometry.groups; // morphs\n\n      for (var name in geometry.morphTargets) {\n        var array = [];\n        var morphTargets = geometry.morphTargets[name];\n\n        for (var i = 0, l = morphTargets.length; i < l; i++) {\n          var morphTarget = morphTargets[i];\n          var attribute = new Float32BufferAttribute(morphTarget.data.length * 3, 3);\n          attribute.name = morphTarget.name;\n          array.push(attribute.copyVector3sArray(morphTarget.data));\n        }\n\n        this.morphAttributes[name] = array;\n      } // skinning\n\n\n      if (geometry.skinIndices.length > 0) {\n        var skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n        this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n      }\n\n      if (geometry.skinWeights.length > 0) {\n        var skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n        this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n      } //\n\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      return this;\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        this.boundingBox.setFromBufferAttribute(position);\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    },\n    computeBoundingSphere: function () {\n      var box = new Box3();\n      var vector = new Vector3();\n      return function computeBoundingSphere() {\n        if (this.boundingSphere === null) {\n          this.boundingSphere = new Sphere();\n        }\n\n        var position = this.attributes.position;\n\n        if (position) {\n          var center = this.boundingSphere.center;\n          box.setFromBufferAttribute(position);\n          box.getCenter(center); // hoping to find a boundingSphere with a radius smaller than the\n          // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n          var maxRadiusSq = 0;\n\n          for (var i = 0, il = position.count; i < il; i++) {\n            vector.x = position.getX(i);\n            vector.y = position.getY(i);\n            vector.z = position.getZ(i);\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n          }\n\n          this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n          if (isNaN(this.boundingSphere.radius)) {\n            console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n          }\n        }\n      };\n    }(),\n    computeFaceNormals: function () {// backwards compatibility\n    },\n    computeVertexNormals: function () {\n      var index = this.index;\n      var attributes = this.attributes;\n\n      if (attributes.position) {\n        var positions = attributes.position.array;\n\n        if (attributes.normal === undefined) {\n          this.addAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n        } else {\n          // reset existing normals to zero\n          var array = attributes.normal.array;\n\n          for (var i = 0, il = array.length; i < il; i++) {\n            array[i] = 0;\n          }\n        }\n\n        var normals = attributes.normal.array;\n        var vA, vB, vC;\n        var pA = new Vector3(),\n            pB = new Vector3(),\n            pC = new Vector3();\n        var cb = new Vector3(),\n            ab = new Vector3(); // indexed elements\n\n        if (index) {\n          var indices = index.array;\n\n          for (var i = 0, il = index.count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var i = 0, il = positions.length; i < il; i += 9) {\n            pA.fromArray(positions, i);\n            pB.fromArray(positions, i + 3);\n            pC.fromArray(positions, i + 6);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[i] = cb.x;\n            normals[i + 1] = cb.y;\n            normals[i + 2] = cb.z;\n            normals[i + 3] = cb.x;\n            normals[i + 4] = cb.y;\n            normals[i + 5] = cb.z;\n            normals[i + 6] = cb.x;\n            normals[i + 7] = cb.y;\n            normals[i + 8] = cb.z;\n          }\n        }\n\n        this.normalizeNormals();\n        attributes.normal.needsUpdate = true;\n      }\n    },\n    merge: function (geometry, offset) {\n      if (!(geometry && geometry.isBufferGeometry)) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n        console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) continue;\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeSize = attribute2.itemSize;\n\n        for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    },\n    normalizeNormals: function () {\n      var vector = new Vector3();\n      return function normalizeNormals() {\n        var normals = this.attributes.normal;\n\n        for (var i = 0, il = normals.count; i < il; i++) {\n          vector.x = normals.getX(i);\n          vector.y = normals.getY(i);\n          vector.z = normals.getZ(i);\n          vector.normalize();\n          normals.setXYZ(i, vector.x, vector.y, vector.z);\n        }\n      };\n    }(),\n    toNonIndexed: function () {\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          index = indices[i] * itemSize;\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        geometry2.addAttribute(name, new BufferAttribute(array2, itemSize));\n      }\n\n      var groups = this.groups;\n\n      for (var i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        geometry2.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return geometry2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        var array = Array.prototype.slice.call(index.array);\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: array\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var array = Array.prototype.slice.call(attribute.array);\n        data.data.attributes[key] = {\n          itemSize: attribute.itemSize,\n          type: attribute.array.constructor.name,\n          array: array,\n          normalized: attribute.normalized\n        };\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    },\n    clone: function () {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new BufferGeometry().copy(this);\n    },\n    copy: function (source) {\n      var name, i, l; // reset\n\n      this.index = null;\n      this.attributes = {};\n      this.morphAttributes = {};\n      this.groups = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // index\n\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone());\n      } // attributes\n\n\n      var attributes = source.attributes;\n\n      for (name in attributes) {\n        var attribute = attributes[name];\n        this.addAttribute(name, attribute.clone());\n      } // morph attributes\n\n\n      var morphAttributes = source.morphAttributes;\n\n      for (name in morphAttributes) {\n        var array = [];\n        var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (i = 0, l = morphAttribute.length; i < l; i++) {\n          array.push(morphAttribute[i].clone());\n        }\n\n        this.morphAttributes[name] = array;\n      } // groups\n\n\n      var groups = source.groups;\n\n      for (i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // draw range\n\n\n      this.drawRange.start = source.drawRange.start;\n      this.drawRange.count = source.drawRange.count; // user data\n\n      this.userData = source.userData;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // BoxGeometry\n\n  function BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    Geometry.call(this);\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n    this.mergeVertices();\n  }\n\n  BoxGeometry.prototype = Object.create(Geometry.prototype);\n  BoxGeometry.prototype.constructor = BoxGeometry; // BoxBufferGeometry\n\n  function BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    BufferGeometry.call(this);\n    this.type = 'BoxBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    var scope = this;\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1; // segments\n\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var numberOfVertices = 0;\n    var groupStart = 0; // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n    // build geometry\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      var segmentWidth = width / gridX;\n      var segmentHeight = height / gridY;\n      var widthHalf = width / 2;\n      var heightHalf = height / 2;\n      var depthHalf = depth / 2;\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var vertexCounter = 0;\n      var groupCount = 0;\n      var ix, iy;\n      var vector = new Vector3(); // generate vertices, normals and uvs\n\n      for (iy = 0; iy < gridY1; iy++) {\n        var y = iy * segmentHeight - heightHalf;\n\n        for (ix = 0; ix < gridX1; ix++) {\n          var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf; // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z); // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY); // counters\n\n          vertexCounter += 1;\n        }\n      } // indices\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n\n      for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n          var a = numberOfVertices + ix + gridX1 * iy;\n          var b = numberOfVertices + ix + gridX1 * (iy + 1);\n          var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          var d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // increase counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n      groupStart += groupCount; // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  }\n\n  BoxBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PlaneGeometry\n\n  function PlaneGeometry(width, height, widthSegments, heightSegments) {\n    Geometry.call(this);\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n    this.mergeVertices();\n  }\n\n  PlaneGeometry.prototype = Object.create(Geometry.prototype);\n  PlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry\n\n  function PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\n    BufferGeometry.call(this);\n    this.type = 'PlaneBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    width = width || 1;\n    height = height || 1;\n    var width_half = width / 2;\n    var height_half = height / 2;\n    var gridX = Math.floor(widthSegments) || 1;\n    var gridY = Math.floor(heightSegments) || 1;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var segment_width = width / gridX;\n    var segment_height = height / gridY;\n    var ix, iy; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy < gridY1; iy++) {\n      var y = iy * segment_height - height_half;\n\n      for (ix = 0; ix < gridX1; ix++) {\n        var x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    } // indices\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  PlaneBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  var materialId = 0;\n\n  function Material() {\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.lights = true;\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.flatShading = false;\n    this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaTest = 0;\n    this.premultipliedAlpha = false;\n    this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n    this.visible = true;\n    this.userData = {};\n    this.needsUpdate = true;\n  }\n\n  Material.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Material,\n    isMaterial: true,\n    onBeforeCompile: function () {},\n    setValues: function (values) {\n      if (values === undefined) return;\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n          continue;\n        } // for backward compatability if shading is set in the constructor\n\n\n        if (key === 'shading') {\n          console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n          this.flatShading = newValue === FlatShading ? true : false;\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n          continue;\n        }\n\n        if (currentValue && currentValue.isColor) {\n          currentValue.set(newValue);\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n          currentValue.copy(newValue);\n        } else if (key === 'overdraw') {\n          // ensure overdraw is backwards-compatible with legacy boolean type\n          this[key] = Number(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    },\n    toJSON: function (meta) {\n      var isRoot = meta === undefined || typeof meta === 'string';\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (this.color && this.color.isColor) data.color = this.color.getHex();\n      if (this.roughness !== undefined) data.roughness = this.roughness;\n      if (this.metalness !== undefined) data.metalness = this.metalness;\n      if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n      if (this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n      if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n      if (this.shininess !== undefined) data.shininess = this.shininess;\n      if (this.clearCoat !== undefined) data.clearCoat = this.clearCoat;\n      if (this.clearCoatRoughness !== undefined) data.clearCoatRoughness = this.clearCoatRoughness;\n      if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n      if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n      if (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n      if (this.aoMap && this.aoMap.isTexture) {\n        data.aoMap = this.aoMap.toJSON(meta).uuid;\n        data.aoMapIntensity = this.aoMapIntensity;\n      }\n\n      if (this.bumpMap && this.bumpMap.isTexture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap && this.normalMap.isTexture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalMapType = this.normalMapType;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap && this.displacementMap.isTexture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n      if (this.envMap && this.envMap.isTexture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        data.reflectivity = this.reflectivity; // Scale behind envMap\n\n        if (this.combine !== undefined) data.combine = this.combine;\n        if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n      }\n\n      if (this.gradientMap && this.gradientMap.isTexture) {\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n      }\n\n      if (this.size !== undefined) data.size = this.size;\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n      if (this.blending !== NormalBlending) data.blending = this.blending;\n      if (this.flatShading === true) data.flatShading = this.flatShading;\n      if (this.side !== FrontSide) data.side = this.side;\n      if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n      if (this.opacity < 1) data.opacity = this.opacity;\n      if (this.transparent === true) data.transparent = this.transparent;\n      data.depthFunc = this.depthFunc;\n      data.depthTest = this.depthTest;\n      data.depthWrite = this.depthWrite; // rotation (SpriteMaterial)\n\n      if (this.rotation !== 0) data.rotation = this.rotation;\n      if (this.polygonOffset === true) data.polygonOffset = true;\n      if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n      if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n      if (this.linewidth !== 1) data.linewidth = this.linewidth;\n      if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n      if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n      if (this.scale !== undefined) data.scale = this.scale;\n      if (this.dithering === true) data.dithering = true;\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n      if (this.wireframe === true) data.wireframe = this.wireframe;\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n      if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n      if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n      if (this.morphTargets === true) data.morphTargets = true;\n      if (this.skinning === true) data.skinning = true;\n      if (this.visible === false) data.visible = false;\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n      }\n\n      return data;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.fog = source.fog;\n      this.lights = source.lights;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.flatShading = source.flatShading;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.dithering = source.dithering;\n      this.alphaTest = source.alphaTest;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.overdraw = source.overdraw;\n      this.visible = source.visible;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      this.clipShadows = source.clipShadows;\n      this.clipIntersection = source.clipIntersection;\n      var srcPlanes = source.clippingPlanes,\n          dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) dstPlanes[i] = srcPlanes[i].clone();\n      }\n\n      this.clippingPlanes = dstPlanes;\n      this.shadowSide = source.shadowSide;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  defines: { \"label\" : \"value\" },\n   *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *  fragmentShader: <string>,\n   *  vertexShader: <string>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  lights: <bool>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function ShaderMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n    this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n\n    this.lights = false; // set to use scene lights\n\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.skinning = false; // set to use skinning attribute streams\n\n    this.morphTargets = false; // set to use morph targets\n\n    this.morphNormals = false; // set to use morph normals\n\n    this.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n    this.uniformsNeedUpdate = false;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      this.setValues(parameters);\n    }\n  }\n\n  ShaderMaterial.prototype = Object.create(Material.prototype);\n  ShaderMaterial.prototype.constructor = ShaderMaterial;\n  ShaderMaterial.prototype.isShaderMaterial = true;\n\n  ShaderMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = UniformsUtils.clone(source.uniforms);\n    this.defines = Object.assign({}, source.defines);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = source.extensions;\n    return this;\n  };\n\n  ShaderMaterial.prototype.toJSON = function (meta) {\n    var data = Material.prototype.toJSON.call(this, meta);\n    data.uniforms = {};\n\n    for (var name in this.uniforms) {\n      var uniform = this.uniforms[name];\n      var value = uniform.value;\n\n      if (value.isTexture) {\n        data.uniforms[name] = {\n          type: 't',\n          value: value.toJSON(meta).uuid\n        };\n      } else if (value.isColor) {\n        data.uniforms[name] = {\n          type: 'c',\n          value: value.getHex()\n        };\n      } else if (value.isVector2) {\n        data.uniforms[name] = {\n          type: 'v2',\n          value: value.toArray()\n        };\n      } else if (value.isVector3) {\n        data.uniforms[name] = {\n          type: 'v3',\n          value: value.toArray()\n        };\n      } else if (value.isVector4) {\n        data.uniforms[name] = {\n          type: 'v4',\n          value: value.toArray()\n        };\n      } else if (value.isMatrix4) {\n        data.uniforms[name] = {\n          type: 'm4',\n          value: value.toArray()\n        };\n      } else {\n        data.uniforms[name] = {\n          value: value\n        }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n\n    if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    return data;\n  };\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n\n  function Ray(origin, direction) {\n    this.origin = origin !== undefined ? origin : new Vector3();\n    this.direction = direction !== undefined ? direction : new Vector3();\n  }\n\n  Object.assign(Ray.prototype, {\n    set: function (origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    },\n    at: function (t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n    },\n    lookAt: function (v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    },\n    recast: function () {\n      var v1 = new Vector3();\n      return function recast(t) {\n        this.origin.copy(this.at(t, v1));\n        return this;\n      };\n    }(),\n    closestPointToPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(point, this.origin);\n      var directionDistance = target.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return target.copy(this.origin);\n      }\n\n      return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    },\n    distanceToPoint: function (point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    },\n    distanceSqToPoint: function () {\n      var v1 = new Vector3();\n      return function distanceSqToPoint(point) {\n        var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n        if (directionDistance < 0) {\n          return this.origin.distanceToSquared(point);\n        }\n\n        v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n        return v1.distanceToSquared(point);\n      };\n    }(),\n    distanceSqToSegment: function () {\n      var segCenter = new Vector3();\n      var segDir = new Vector3();\n      var diff = new Vector3();\n      return function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n        // It returns the min distance between the ray and the segment\n        // defined by v0 and v1\n        // It can also set two optional targets :\n        // - The closest point on the ray\n        // - The closest point on the segment\n        segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n        segDir.copy(v1).sub(v0).normalize();\n        diff.copy(this.origin).sub(segCenter);\n        var segExtent = v0.distanceTo(v1) * 0.5;\n        var a01 = -this.direction.dot(segDir);\n        var b0 = diff.dot(this.direction);\n        var b1 = -diff.dot(segDir);\n        var c = diff.lengthSq();\n        var det = Math.abs(1 - a01 * a01);\n        var s0, s1, sqrDist, extDet;\n\n        if (det > 0) {\n          // The ray and segment are not parallel.\n          s0 = a01 * b1 - b0;\n          s1 = a01 * b0 - b1;\n          extDet = segExtent * det;\n\n          if (s0 >= 0) {\n            if (s1 >= -extDet) {\n              if (s1 <= extDet) {\n                // region 0\n                // Minimum at interior points of ray and segment.\n                var invDet = 1 / det;\n                s0 *= invDet;\n                s1 *= invDet;\n                sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n              } else {\n                // region 1\n                s1 = segExtent;\n                s0 = Math.max(0, -(a01 * s1 + b0));\n                sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n              }\n            } else {\n              // region 5\n              s1 = -segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            if (s1 <= -extDet) {\n              // region 4\n              s0 = Math.max(0, -(-a01 * segExtent + b0));\n              s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            } else if (s1 <= extDet) {\n              // region 3\n              s0 = 0;\n              s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = s1 * (s1 + 2 * b1) + c;\n            } else {\n              // region 2\n              s0 = Math.max(0, -(a01 * segExtent + b0));\n              s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          }\n        } else {\n          // Ray and segment are parallel.\n          s1 = a01 > 0 ? -segExtent : segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n\n        if (optionalPointOnRay) {\n          optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n        }\n\n        if (optionalPointOnSegment) {\n          optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n        }\n\n        return sqrDist;\n      };\n    }(),\n    intersectSphere: function () {\n      var v1 = new Vector3();\n      return function intersectSphere(sphere, target) {\n        v1.subVectors(sphere.center, this.origin);\n        var tca = v1.dot(this.direction);\n        var d2 = v1.dot(v1) - tca * tca;\n        var radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return null;\n        var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n        var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n        var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n        if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n        // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n        // in order to always return an intersect point that is in front of the ray.\n\n        if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n        return this.at(t0, target);\n      };\n    }(),\n    intersectsSphere: function (sphere) {\n      return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n    },\n    distanceToPlane: function (plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    },\n    intersectPlane: function (plane, target) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, target);\n    },\n    intersectsPlane: function (plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    },\n    intersectBox: function (box, target) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) return null;\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n      if (tmax < 0) return null;\n      return this.at(tmin >= 0 ? tmin : tmax, target);\n    },\n    intersectsBox: function () {\n      var v = new Vector3();\n      return function intersectsBox(box) {\n        return this.intersectBox(box, v) !== null;\n      };\n    }(),\n    intersectTriangle: function () {\n      // Compute the offset origin, edges, and normal.\n      var diff = new Vector3();\n      var edge1 = new Vector3();\n      var edge2 = new Vector3();\n      var normal = new Vector3();\n      return function intersectTriangle(a, b, c, backfaceCulling, target) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        edge1.subVectors(b, a);\n        edge2.subVectors(c, a);\n        normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n        // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n        //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n        //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n        //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n        var DdN = this.direction.dot(normal);\n        var sign;\n\n        if (DdN > 0) {\n          if (backfaceCulling) return null;\n          sign = 1;\n        } else if (DdN < 0) {\n          sign = -1;\n          DdN = -DdN;\n        } else {\n          return null;\n        }\n\n        diff.subVectors(this.origin, a);\n        var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n        if (DdQxE2 < 0) {\n          return null;\n        }\n\n        var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n        if (DdE1xQ < 0) {\n          return null;\n        } // b1+b2 > 1, no intersection\n\n\n        if (DdQxE2 + DdE1xQ > DdN) {\n          return null;\n        } // Line intersects triangle, check if ray does.\n\n\n        var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n        if (QdN < 0) {\n          return null;\n        } // Ray intersects triangle.\n\n\n        return this.at(QdN / DdN, target);\n      };\n    }(),\n    applyMatrix4: function (matrix4) {\n      this.origin.applyMatrix4(matrix4);\n      this.direction.transformDirection(matrix4);\n      return this;\n    },\n    equals: function (ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Triangle(a, b, c) {\n    this.a = a !== undefined ? a : new Vector3();\n    this.b = b !== undefined ? b : new Vector3();\n    this.c = c !== undefined ? c : new Vector3();\n  }\n\n  Object.assign(Triangle, {\n    getNormal: function () {\n      var v0 = new Vector3();\n      return function getNormal(a, b, c, target) {\n        if (target === undefined) {\n          console.warn('THREE.Triangle: .getNormal() target is now required');\n          target = new Vector3();\n        }\n\n        target.subVectors(c, b);\n        v0.subVectors(a, b);\n        target.cross(v0);\n        var targetLengthSq = target.lengthSq();\n\n        if (targetLengthSq > 0) {\n          return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n        }\n\n        return target.set(0, 0, 0);\n      };\n    }(),\n    // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n    getBarycoord: function () {\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function getBarycoord(point, a, b, c, target) {\n        v0.subVectors(c, a);\n        v1.subVectors(b, a);\n        v2.subVectors(point, a);\n        var dot00 = v0.dot(v0);\n        var dot01 = v0.dot(v1);\n        var dot02 = v0.dot(v2);\n        var dot11 = v1.dot(v1);\n        var dot12 = v1.dot(v2);\n        var denom = dot00 * dot11 - dot01 * dot01;\n\n        if (target === undefined) {\n          console.warn('THREE.Triangle: .getBarycoord() target is now required');\n          target = new Vector3();\n        } // collinear or singular triangle\n\n\n        if (denom === 0) {\n          // arbitrary location outside of triangle?\n          // not sure if this is the best idea, maybe should be returning undefined\n          return target.set(-2, -1, -1);\n        }\n\n        var invDenom = 1 / denom;\n        var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n        return target.set(1 - u - v, v, u);\n      };\n    }(),\n    containsPoint: function () {\n      var v1 = new Vector3();\n      return function containsPoint(point, a, b, c) {\n        Triangle.getBarycoord(point, a, b, c, v1);\n        return v1.x >= 0 && v1.y >= 0 && v1.x + v1.y <= 1;\n      };\n    }(),\n    getUV: function () {\n      var barycoord = new Vector3();\n      return function getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n        this.getBarycoord(point, p1, p2, p3, barycoord);\n        target.set(0, 0);\n        target.addScaledVector(uv1, barycoord.x);\n        target.addScaledVector(uv2, barycoord.y);\n        target.addScaledVector(uv3, barycoord.z);\n        return target;\n      };\n    }()\n  });\n  Object.assign(Triangle.prototype, {\n    set: function (a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    },\n    setFromPointsAndIndices: function (points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    },\n    getArea: function () {\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      return function getArea() {\n        v0.subVectors(this.c, this.b);\n        v1.subVectors(this.a, this.b);\n        return v0.cross(v1).length() * 0.5;\n      };\n    }(),\n    getMidpoint: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getMidpoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    },\n    getNormal: function (target) {\n      return Triangle.getNormal(this.a, this.b, this.c, target);\n    },\n    getPlane: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getPlane() target is now required');\n        target = new Vector3();\n      }\n\n      return target.setFromCoplanarPoints(this.a, this.b, this.c);\n    },\n    getBarycoord: function (point, target) {\n      return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n    },\n    containsPoint: function (point) {\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\n    },\n    getUV: function (point, uv1, uv2, uv3, result) {\n      return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, result);\n    },\n    intersectsBox: function (box) {\n      return box.intersectsTriangle(this);\n    },\n    closestPointToPoint: function () {\n      var vab = new Vector3();\n      var vac = new Vector3();\n      var vbc = new Vector3();\n      var vap = new Vector3();\n      var vbp = new Vector3();\n      var vcp = new Vector3();\n      return function closestPointToPoint(p, target) {\n        if (target === undefined) {\n          console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n          target = new Vector3();\n        }\n\n        var a = this.a,\n            b = this.b,\n            c = this.c;\n        var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n        // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n        // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n        // basically, we're distinguishing which of the voronoi regions of the triangle\n        // the point lies in with the minimum amount of redundant computation.\n\n        vab.subVectors(b, a);\n        vac.subVectors(c, a);\n        vap.subVectors(p, a);\n        var d1 = vab.dot(vap);\n        var d2 = vac.dot(vap);\n\n        if (d1 <= 0 && d2 <= 0) {\n          // vertex region of A; barycentric coords (1, 0, 0)\n          return target.copy(a);\n        }\n\n        vbp.subVectors(p, b);\n        var d3 = vab.dot(vbp);\n        var d4 = vac.dot(vbp);\n\n        if (d3 >= 0 && d4 <= d3) {\n          // vertex region of B; barycentric coords (0, 1, 0)\n          return target.copy(b);\n        }\n\n        var vc = d1 * d4 - d3 * d2;\n\n        if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n          v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n          return target.copy(a).addScaledVector(vab, v);\n        }\n\n        vcp.subVectors(p, c);\n        var d5 = vab.dot(vcp);\n        var d6 = vac.dot(vcp);\n\n        if (d6 >= 0 && d5 <= d6) {\n          // vertex region of C; barycentric coords (0, 0, 1)\n          return target.copy(c);\n        }\n\n        var vb = d5 * d2 - d1 * d6;\n\n        if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n          w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n          return target.copy(a).addScaledVector(vac, w);\n        }\n\n        var va = d3 * d6 - d5 * d4;\n\n        if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n          vbc.subVectors(c, b);\n          w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n          return target.copy(b).addScaledVector(vbc, w); // edge region of BC\n        } // face region\n\n\n        var denom = 1 / (va + vb + vc); // u = va * denom\n\n        v = vb * denom;\n        w = vc * denom;\n        return target.copy(a).addScaledVector(vab, v).addScaledVector(vac, w);\n      };\n    }(),\n    equals: function (triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  depthTest: <bool>,\n   *  depthWrite: <bool>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function MeshBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshBasicMaterial.prototype = Object.create(Material.prototype);\n  MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n  MeshBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author jonobr1 / http://jonobr1.com/\n   */\n\n\n  function Mesh(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Mesh';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new MeshBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n    this.drawMode = TrianglesDrawMode;\n    this.updateMorphTargets();\n  }\n\n  Mesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Mesh,\n    isMesh: true,\n    setDrawMode: function (value) {\n      this.drawMode = value;\n    },\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.drawMode = source.drawMode;\n\n      if (source.morphTargetInfluences !== undefined) {\n        this.morphTargetInfluences = source.morphTargetInfluences.slice();\n      }\n\n      if (source.morphTargetDictionary !== undefined) {\n        this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n      }\n\n      return this;\n    },\n    updateMorphTargets: function () {\n      var geometry = this.geometry;\n      var m, ml, name;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n              name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (m = 0, ml = morphTargets.length; m < ml; m++) {\n            name = morphTargets[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    },\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      var vA = new Vector3();\n      var vB = new Vector3();\n      var vC = new Vector3();\n      var tempA = new Vector3();\n      var tempB = new Vector3();\n      var tempC = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n      var intersectionPoint = new Vector3();\n      var intersectionPointWorld = new Vector3();\n\n      function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n        var intersect;\n\n        if (material.side === BackSide) {\n          intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n        } else {\n          intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n        }\n\n        if (intersect === null) return null;\n        intersectionPointWorld.copy(point);\n        intersectionPointWorld.applyMatrix4(object.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n        if (distance < raycaster.near || distance > raycaster.far) return null;\n        return {\n          distance: distance,\n          point: intersectionPointWorld.clone(),\n          object: object\n        };\n      }\n\n      function checkBufferGeometryIntersection(object, material, raycaster, ray, position, uv, a, b, c) {\n        vA.fromBufferAttribute(position, a);\n        vB.fromBufferAttribute(position, b);\n        vC.fromBufferAttribute(position, c);\n        var intersection = checkIntersection(object, material, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n        if (intersection) {\n          if (uv) {\n            uvA.fromBufferAttribute(uv, a);\n            uvB.fromBufferAttribute(uv, b);\n            uvC.fromBufferAttribute(uv, c);\n            intersection.uv = Triangle.getUV(intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2());\n          }\n\n          var face = new Face3(a, b, c);\n          Triangle.getNormal(vA, vB, vC, face.normal);\n          intersection.face = face;\n        }\n\n        return intersection;\n      }\n\n      return function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var material = this.material;\n        var matrixWorld = this.matrixWorld;\n        if (material === undefined) return; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n        if (geometry.boundingBox !== null) {\n          if (ray.intersectsBox(geometry.boundingBox) === false) return;\n        }\n\n        var intersection;\n\n        if (geometry.isBufferGeometry) {\n          var a, b, c;\n          var index = geometry.index;\n          var position = geometry.attributes.position;\n          var uv = geometry.attributes.uv;\n          var groups = geometry.groups;\n          var drawRange = geometry.drawRange;\n          var i, j, il, jl;\n          var group, groupMaterial;\n          var start, end;\n\n          if (index !== null) {\n            // indexed buffer geometry\n            if (Array.isArray(material)) {\n              for (i = 0, il = groups.length; i < il; i++) {\n                group = groups[i];\n                groupMaterial = material[group.materialIndex];\n                start = Math.max(group.start, drawRange.start);\n                end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n                for (j = start, jl = end; j < jl; j += 3) {\n                  a = index.getX(j);\n                  b = index.getX(j + 1);\n                  c = index.getX(j + 2);\n                  intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, ray, position, uv, a, b, c);\n\n                  if (intersection) {\n                    intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n                    intersects.push(intersection);\n                  }\n                }\n              }\n            } else {\n              start = Math.max(0, drawRange.start);\n              end = Math.min(index.count, drawRange.start + drawRange.count);\n\n              for (i = start, il = end; i < il; i += 3) {\n                a = index.getX(i);\n                b = index.getX(i + 1);\n                c = index.getX(i + 2);\n                intersection = checkBufferGeometryIntersection(this, material, raycaster, ray, position, uv, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else if (position !== undefined) {\n            // non-indexed buffer geometry\n            if (Array.isArray(material)) {\n              for (i = 0, il = groups.length; i < il; i++) {\n                group = groups[i];\n                groupMaterial = material[group.materialIndex];\n                start = Math.max(group.start, drawRange.start);\n                end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n                for (j = start, jl = end; j < jl; j += 3) {\n                  a = j;\n                  b = j + 1;\n                  c = j + 2;\n                  intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, ray, position, uv, a, b, c);\n\n                  if (intersection) {\n                    intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n                    intersects.push(intersection);\n                  }\n                }\n              }\n            } else {\n              start = Math.max(0, drawRange.start);\n              end = Math.min(position.count, drawRange.start + drawRange.count);\n\n              for (i = start, il = end; i < il; i += 3) {\n                a = i;\n                b = i + 1;\n                c = i + 2;\n                intersection = checkBufferGeometryIntersection(this, material, raycaster, ray, position, uv, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          }\n        } else if (geometry.isGeometry) {\n          var fvA, fvB, fvC;\n          var isMultiMaterial = Array.isArray(material);\n          var vertices = geometry.vertices;\n          var faces = geometry.faces;\n          var uvs;\n          var faceVertexUvs = geometry.faceVertexUvs[0];\n          if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n          for (var f = 0, fl = faces.length; f < fl; f++) {\n            var face = faces[f];\n            var faceMaterial = isMultiMaterial ? material[face.materialIndex] : material;\n            if (faceMaterial === undefined) continue;\n            fvA = vertices[face.a];\n            fvB = vertices[face.b];\n            fvC = vertices[face.c];\n\n            if (faceMaterial.morphTargets === true) {\n              var morphTargets = geometry.morphTargets;\n              var morphInfluences = this.morphTargetInfluences;\n              vA.set(0, 0, 0);\n              vB.set(0, 0, 0);\n              vC.set(0, 0, 0);\n\n              for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                var influence = morphInfluences[t];\n                if (influence === 0) continue;\n                var targets = morphTargets[t].vertices;\n                vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n                vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n                vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n              }\n\n              vA.add(fvA);\n              vB.add(fvB);\n              vC.add(fvC);\n              fvA = vA;\n              fvB = vB;\n              fvC = vC;\n            }\n\n            intersection = checkIntersection(this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n            if (intersection) {\n              if (uvs && uvs[f]) {\n                var uvs_f = uvs[f];\n                uvA.copy(uvs_f[0]);\n                uvB.copy(uvs_f[1]);\n                uvC.copy(uvs_f[2]);\n                intersection.uv = Triangle.getUV(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2());\n              }\n\n              intersection.face = face;\n              intersection.faceIndex = f;\n              intersects.push(intersection);\n            }\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLBackground(renderer, state, objects, premultipliedAlpha) {\n    var clearColor = new Color(0x000000);\n    var clearAlpha = 0;\n    var planeMesh;\n    var boxMesh;\n\n    function render(renderList, scene, camera, forceClear) {\n      var background = scene.background;\n\n      if (background === null) {\n        setClear(clearColor, clearAlpha);\n      } else if (background && background.isColor) {\n        setClear(background, 1);\n        forceClear = true;\n      }\n\n      if (renderer.autoClear || forceClear) {\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n\n      if (background && background.isCubeTexture) {\n        if (boxMesh === undefined) {\n          boxMesh = new Mesh(new BoxBufferGeometry(1, 1, 1), new ShaderMaterial({\n            uniforms: UniformsUtils.clone(ShaderLib.cube.uniforms),\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: true,\n            depthWrite: false,\n            fog: false\n          }));\n          boxMesh.geometry.removeAttribute('normal');\n          boxMesh.geometry.removeAttribute('uv');\n\n          boxMesh.onBeforeRender = function (renderer, scene, camera) {\n            this.matrixWorld.copyPosition(camera.matrixWorld);\n          };\n\n          objects.update(boxMesh);\n        }\n\n        boxMesh.material.uniforms.tCube.value = background;\n        renderList.push(boxMesh, boxMesh.geometry, boxMesh.material, 0, null);\n      } else if (background && background.isTexture) {\n        if (planeMesh === undefined) {\n          planeMesh = new Mesh(new PlaneBufferGeometry(2, 2), new ShaderMaterial({\n            uniforms: UniformsUtils.clone(ShaderLib.background.uniforms),\n            vertexShader: ShaderLib.background.vertexShader,\n            fragmentShader: ShaderLib.background.fragmentShader,\n            side: FrontSide,\n            depthTest: true,\n            depthWrite: false,\n            fog: false\n          }));\n          planeMesh.geometry.removeAttribute('normal');\n          objects.update(planeMesh);\n        }\n\n        planeMesh.material.uniforms.t2D.value = background;\n        renderList.push(planeMesh, planeMesh.geometry, planeMesh.material, 0, null);\n      }\n    }\n\n    function setClear(color, alpha) {\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n    }\n\n    return {\n      getClearColor: function () {\n        return clearColor;\n      },\n      setClearColor: function (color, alpha) {\n        clearColor.set(color);\n        clearAlpha = alpha !== undefined ? alpha : 1;\n        setClear(clearColor, clearAlpha);\n      },\n      getClearAlpha: function () {\n        return clearAlpha;\n      },\n      setClearAlpha: function (alpha) {\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      render: render\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLBufferRenderer(gl, extensions, info, capabilities) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      gl.drawArrays(mode, start, count);\n      info.update(count, mode);\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension;\n\n      if (capabilities.isWebGL2) {\n        extension = gl;\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n\n        if (extension === null) {\n          console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE'](mode, start, count, geometry.maxInstancedCount);\n      info.update(count, mode, geometry.maxInstancedCount);\n    } //\n\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLCapabilities(gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n\n    var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n    var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    var maxPrecision = getMaxPrecision(precision);\n\n    if (maxPrecision !== precision) {\n      console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n      precision = maxPrecision;\n    }\n\n    var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n    var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    var maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    var maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n    var maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n    var vertexTextures = maxVertexTextures > 0;\n    var floatFragmentTextures = isWebGL2 || !!extensions.get('OES_texture_float');\n    var floatVertexTextures = vertexTextures && floatFragmentTextures;\n    return {\n      isWebGL2: isWebGL2,\n      getMaxAnisotropy: getMaxAnisotropy,\n      getMaxPrecision: getMaxPrecision,\n      precision: precision,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      maxTextures: maxTextures,\n      maxVertexTextures: maxVertexTextures,\n      maxTextureSize: maxTextureSize,\n      maxCubemapSize: maxCubemapSize,\n      maxAttributes: maxAttributes,\n      maxVertexUniforms: maxVertexUniforms,\n      maxVaryings: maxVaryings,\n      maxFragmentUniforms: maxFragmentUniforms,\n      vertexTextures: vertexTextures,\n      floatFragmentTextures: floatFragmentTextures,\n      floatVertexTextures: floatVertexTextures\n    };\n  }\n  /**\n   * @author tschw\n   */\n\n\n  function WebGLClipping() {\n    var scope = this,\n        globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false,\n        plane = new Plane(),\n        viewNormalMatrix = new Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n    this.numIntersection = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (planes, clipIntersection, clipShadows, camera, cache, fromCache) {\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4,\n            dstArray = cache.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n        for (var i = 0; i !== lGlobal; ++i) {\n          dstArray[i] = globalState[i];\n        }\n\n        cache.clippingState = dstArray;\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n      scope.numIntersection = 0;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0,\n          dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      return dstArray;\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLExtensions(gl) {\n    var extensions = {};\n    return {\n      get: function (name) {\n        if (extensions[name] !== undefined) {\n          return extensions[name];\n        }\n\n        var extension;\n\n        switch (name) {\n          case 'WEBGL_depth_texture':\n            extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n            break;\n\n          case 'EXT_texture_filter_anisotropic':\n            extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n            break;\n\n          case 'WEBGL_compressed_texture_s3tc':\n            extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n            break;\n\n          case 'WEBGL_compressed_texture_pvrtc':\n            extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n            break;\n\n          default:\n            extension = gl.getExtension(name);\n        }\n\n        if (extension === null) {\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n        }\n\n        extensions[name] = extension;\n        return extension;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLGeometries(gl, attributes, info) {\n    var geometries = {};\n    var wireframeAttributes = {};\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n      var buffergeometry = geometries[geometry.id];\n\n      if (buffergeometry.index !== null) {\n        attributes.remove(buffergeometry.index);\n      }\n\n      for (var name in buffergeometry.attributes) {\n        attributes.remove(buffergeometry.attributes[name]);\n      }\n\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id];\n      var attribute = wireframeAttributes[buffergeometry.id];\n\n      if (attribute) {\n        attributes.remove(attribute);\n        delete wireframeAttributes[buffergeometry.id];\n      } //\n\n\n      info.memory.geometries--;\n    }\n\n    function get(object, geometry) {\n      var buffergeometry = geometries[geometry.id];\n      if (buffergeometry) return buffergeometry;\n      geometry.addEventListener('dispose', onGeometryDispose);\n\n      if (geometry.isBufferGeometry) {\n        buffergeometry = geometry;\n      } else if (geometry.isGeometry) {\n        if (geometry._bufferGeometry === undefined) {\n          geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n        }\n\n        buffergeometry = geometry._bufferGeometry;\n      }\n\n      geometries[geometry.id] = buffergeometry;\n      info.memory.geometries++;\n      return buffergeometry;\n    }\n\n    function update(geometry) {\n      var index = geometry.index;\n      var geometryAttributes = geometry.attributes;\n\n      if (index !== null) {\n        attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n      }\n\n      for (var name in geometryAttributes) {\n        attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var name in morphAttributes) {\n        var array = morphAttributes[name];\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          attributes.update(array[i], gl.ARRAY_BUFFER);\n        }\n      }\n    }\n\n    function getWireframeAttribute(geometry) {\n      var attribute = wireframeAttributes[geometry.id];\n      if (attribute) return attribute;\n      var indices = [];\n      var geometryIndex = geometry.index;\n      var geometryAttributes = geometry.attributes; // console.time( 'wireframe' );\n\n      if (geometryIndex !== null) {\n        var array = geometryIndex.array;\n\n        for (var i = 0, l = array.length; i < l; i += 3) {\n          var a = array[i + 0];\n          var b = array[i + 1];\n          var c = array[i + 2];\n          indices.push(a, b, b, c, c, a);\n        }\n      } else {\n        var array = geometryAttributes.position.array;\n\n        for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n          var a = i + 0;\n          var b = i + 1;\n          var c = i + 2;\n          indices.push(a, b, b, c, c, a);\n        }\n      } // console.timeEnd( 'wireframe' );\n\n\n      attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n      attributes.update(attribute, gl.ELEMENT_ARRAY_BUFFER);\n      wireframeAttributes[geometry.id] = attribute;\n      return attribute;\n    }\n\n    return {\n      get: get,\n      update: update,\n      getWireframeAttribute: getWireframeAttribute\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, bytesPerElement;\n\n    function setIndex(value) {\n      type = value.type;\n      bytesPerElement = value.bytesPerElement;\n    }\n\n    function render(start, count) {\n      gl.drawElements(mode, count, type, start * bytesPerElement);\n      info.update(count, mode);\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension;\n\n      if (capabilities.isWebGL2) {\n        extension = gl;\n      } else {\n        var extension = extensions.get('ANGLE_instanced_arrays');\n\n        if (extension === null) {\n          console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE'](mode, count, type, start * bytesPerElement, geometry.maxInstancedCount);\n      info.update(count, mode, geometry.maxInstancedCount);\n    } //\n\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function WebGLInfo(gl) {\n    var memory = {\n      geometries: 0,\n      textures: 0\n    };\n    var render = {\n      frame: 0,\n      calls: 0,\n      triangles: 0,\n      points: 0,\n      lines: 0\n    };\n\n    function update(count, mode, instanceCount) {\n      instanceCount = instanceCount || 1;\n      render.calls++;\n\n      switch (mode) {\n        case gl.TRIANGLES:\n          render.triangles += instanceCount * (count / 3);\n          break;\n\n        case gl.TRIANGLE_STRIP:\n        case gl.TRIANGLE_FAN:\n          render.triangles += instanceCount * (count - 2);\n          break;\n\n        case gl.LINES:\n          render.lines += instanceCount * (count / 2);\n          break;\n\n        case gl.LINE_STRIP:\n          render.lines += instanceCount * (count - 1);\n          break;\n\n        case gl.LINE_LOOP:\n          render.lines += instanceCount * count;\n          break;\n\n        case gl.POINTS:\n          render.points += instanceCount * count;\n          break;\n\n        default:\n          console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n          break;\n      }\n    }\n\n    function reset() {\n      render.frame++;\n      render.calls = 0;\n      render.triangles = 0;\n      render.points = 0;\n      render.lines = 0;\n    }\n\n    return {\n      memory: memory,\n      render: render,\n      programs: null,\n      autoReset: true,\n      reset: reset,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[1]) - Math.abs(a[1]);\n  }\n\n  function WebGLMorphtargets(gl) {\n    var influencesList = {};\n    var morphInfluences = new Float32Array(8);\n\n    function update(object, geometry, material, program) {\n      var objectInfluences = object.morphTargetInfluences;\n      var length = objectInfluences.length;\n      var influences = influencesList[geometry.id];\n\n      if (influences === undefined) {\n        // initialise list\n        influences = [];\n\n        for (var i = 0; i < length; i++) {\n          influences[i] = [i, 0];\n        }\n\n        influencesList[geometry.id] = influences;\n      }\n\n      var morphTargets = material.morphTargets && geometry.morphAttributes.position;\n      var morphNormals = material.morphNormals && geometry.morphAttributes.normal; // Remove current morphAttributes\n\n      for (var i = 0; i < length; i++) {\n        var influence = influences[i];\n\n        if (influence[1] !== 0) {\n          if (morphTargets) geometry.removeAttribute('morphTarget' + i);\n          if (morphNormals) geometry.removeAttribute('morphNormal' + i);\n        }\n      } // Collect influences\n\n\n      for (var i = 0; i < length; i++) {\n        var influence = influences[i];\n        influence[0] = i;\n        influence[1] = objectInfluences[i];\n      }\n\n      influences.sort(absNumericalSort); // Add morphAttributes\n\n      for (var i = 0; i < 8; i++) {\n        var influence = influences[i];\n\n        if (influence) {\n          var index = influence[0];\n          var value = influence[1];\n\n          if (value) {\n            if (morphTargets) geometry.addAttribute('morphTarget' + i, morphTargets[index]);\n            if (morphNormals) geometry.addAttribute('morphNormal' + i, morphNormals[index]);\n            morphInfluences[i] = value;\n            continue;\n          }\n        }\n\n        morphInfluences[i] = 0;\n      }\n\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n    }\n\n    return {\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLObjects(geometries, info) {\n    var updateList = {};\n\n    function update(object) {\n      var frame = info.render.frame;\n      var geometry = object.geometry;\n      var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n      if (updateList[buffergeometry.id] !== frame) {\n        if (geometry.isGeometry) {\n          buffergeometry.updateFromObject(object);\n        }\n\n        geometries.update(buffergeometry);\n        updateList[buffergeometry.id] = frame;\n      }\n\n      return buffergeometry;\n    }\n\n    function dispose() {\n      updateList = {};\n    }\n\n    return {\n      update: update,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  }\n\n  CubeTexture.prototype = Object.create(Texture.prototype);\n  CubeTexture.prototype.constructor = CubeTexture;\n  CubeTexture.prototype.isCubeTexture = true;\n  Object.defineProperty(CubeTexture.prototype, 'images', {\n    get: function () {\n      return this.image;\n    },\n    set: function (value) {\n      this.image = value;\n    }\n  });\n  /**\n   * @author Artur Trzesiok\n   */\n\n  function DataTexture3D(data, width, height, depth) {\n    // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n    Texture.call(this, null);\n    this.image = {\n      data: data,\n      width: width,\n      height: height,\n      depth: depth\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n  }\n\n  DataTexture3D.prototype = Object.create(Texture.prototype);\n  DataTexture3D.prototype.constructor = DataTexture3D;\n  DataTexture3D.prototype.isDataTexture3D = true;\n  /**\n   * @author tschw\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [renderer] )\n   *\n   * \t\tuploads a uniform value(s)\n   *  \tthe 'renderer' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (renderer factorizations):\n   *\n   * .upload( gl, seq, values, renderer )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   *\n   * Methods of the top-level container (renderer factorizations):\n   *\n   * .setValue( gl, name, value )\n   *\n   * \t\tsets uniform with  name 'name' to 'value'\n   *\n   * .set( gl, obj, prop )\n   *\n   * \t\tsets uniform from object and property with same name than uniform\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   */\n\n  var emptyTexture = new Texture();\n  var emptyTexture3d = new DataTexture3D();\n  var emptyCubeTexture = new CubeTexture(); // --- Base for inner nodes (including the root) ---\n\n  function UniformContainer() {\n    this.seq = [];\n    this.map = {};\n  } // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n\n\n  var arrayCacheF32 = [];\n  var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n  var mat4array = new Float32Array(16);\n  var mat3array = new Float32Array(9);\n  var mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n  function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize,\n        r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  }\n\n  function arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n\n    for (var i = 0, l = a.length; i < l; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function copyArray(a, b) {\n    for (var i = 0, l = b.length; i < l; i++) {\n      a[i] = b[i];\n    }\n  } // Texture unit allocation\n\n\n  function allocTexUnits(renderer, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) r[i] = renderer.allocTextureUnit();\n\n    return r;\n  } // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n\n\n  function setValue1f(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1f(this.addr, v);\n    cache[0] = v;\n  }\n\n  function setValue1i(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1i(this.addr, v);\n    cache[0] = v;\n  } // Single float vector (from flat array or THREE.VectorN)\n\n\n  function setValue2fv(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y) {\n        gl.uniform2f(this.addr, v.x, v.y);\n        cache[0] = v.x;\n        cache[1] = v.y;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform2fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValue3fv(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n        gl.uniform3f(this.addr, v.x, v.y, v.z);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n      }\n    } else if (v.r !== undefined) {\n      if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n        gl.uniform3f(this.addr, v.r, v.g, v.b);\n        cache[0] = v.r;\n        cache[1] = v.g;\n        cache[2] = v.b;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform3fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValue4fv(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n        gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n        cache[3] = v.w;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform4fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  } // Single matrix (from flat array or MatrixN)\n\n\n  function setValue2fm(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix2fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat2array.set(elements);\n      gl.uniformMatrix2fv(this.addr, false, mat2array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValue3fm(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix3fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat3array.set(elements);\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValue4fm(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix4fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat4array.set(elements);\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\n      copyArray(cache, elements);\n    }\n  } // Single texture (2D / Cube)\n\n\n  function setValueT1(gl, v, renderer) {\n    var cache = this.cache;\n    var unit = renderer.allocTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    renderer.setTexture2D(v || emptyTexture, unit);\n  }\n\n  function setValueT3D1(gl, v, renderer) {\n    var cache = this.cache;\n    var unit = renderer.allocTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    renderer.setTexture3D(v || emptyTexture3d, unit);\n  }\n\n  function setValueT6(gl, v, renderer) {\n    var cache = this.cache;\n    var unit = renderer.allocTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    renderer.setTextureCube(v || emptyCubeTexture, unit);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValue2iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValue3iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValue4iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4iv(this.addr, v);\n    copyArray(cache, v);\n  } // Helper to pick the right setter for the singular case\n\n\n  function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValue2fv;\n      // _VEC2\n\n      case 0x8b51:\n        return setValue3fv;\n      // _VEC3\n\n      case 0x8b52:\n        return setValue4fv;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValue2fm;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValue3fm;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValue4fm;\n      // _MAT4\n\n      case 0x8b5e:\n      case 0x8d66:\n        return setValueT1;\n      // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\n      case 0x8B5F:\n        return setValueT3D1;\n      // SAMPLER_3D\n\n      case 0x8b60:\n        return setValueT6;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  } // Array of scalars\n\n\n  function setValue1fv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform1fv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValue1iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform1iv(this.addr, v);\n    copyArray(cache, v);\n  } // Array of vectors (flat or from THREE classes)\n\n\n  function setValueV2a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 2);\n    if (arraysEqual(cache, data)) return;\n    gl.uniform2fv(this.addr, data);\n    this.updateCache(data);\n  }\n\n  function setValueV3a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 3);\n    if (arraysEqual(cache, data)) return;\n    gl.uniform3fv(this.addr, data);\n    this.updateCache(data);\n  }\n\n  function setValueV4a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 4);\n    if (arraysEqual(cache, data)) return;\n    gl.uniform4fv(this.addr, data);\n    this.updateCache(data);\n  } // Array of matrices (flat or from THREE clases)\n\n\n  function setValueM2a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 4);\n    if (arraysEqual(cache, data)) return;\n    gl.uniformMatrix2fv(this.addr, false, data);\n    this.updateCache(data);\n  }\n\n  function setValueM3a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 9);\n    if (arraysEqual(cache, data)) return;\n    gl.uniformMatrix3fv(this.addr, false, data);\n    this.updateCache(data);\n  }\n\n  function setValueM4a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 16);\n    if (arraysEqual(cache, data)) return;\n    gl.uniformMatrix4fv(this.addr, false, data);\n    this.updateCache(data);\n  } // Array of textures (2D / Cube)\n\n\n  function setValueT1a(gl, v, renderer) {\n    var cache = this.cache;\n    var n = v.length;\n    var units = allocTexUnits(renderer, n);\n\n    if (arraysEqual(cache, units) === false) {\n      gl.uniform1iv(this.addr, units);\n      copyArray(cache, units);\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n    }\n  }\n\n  function setValueT6a(gl, v, renderer) {\n    var cache = this.cache;\n    var n = v.length;\n    var units = allocTexUnits(renderer, n);\n\n    if (arraysEqual(cache, units) === false) {\n      gl.uniform1iv(this.addr, units);\n      copyArray(cache, units);\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n    }\n  } // Helper to pick the right setter for a pure (bottom-level) array\n\n\n  function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1fv;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2a;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3a;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4a;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2a;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3a;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4a;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1a;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6a;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1iv;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  } // --- Uniform Classes ---\n\n\n  function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  PureArrayUniform.prototype.updateCache = function (data) {\n    var cache = this.cache;\n\n    if (data instanceof Float32Array && cache.length !== data.length) {\n      this.cache = new Float32Array(data.length);\n    }\n\n    copyArray(cache, data);\n  };\n\n  function StructuredUniform(id) {\n    this.id = id;\n    UniformContainer.call(this); // mix-in\n  }\n\n  StructuredUniform.prototype.setValue = function (gl, value, renderer) {\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id], renderer);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g; // extracts\n  // \t- the identifier (member name or array index)\n  //  - followed by an optional right bracket (found when array index)\n  //  - followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n\n  function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  }\n\n  function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    while (true) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex,\n          id = match[1],\n          idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map,\n            next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  } // Root Container\n\n\n  function WebGLUniforms(gl, program, renderer) {\n    UniformContainer.call(this);\n    this.renderer = renderer;\n    var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (var i = 0; i < n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, this.renderer);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, renderer) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, renderer);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var programIdCount = 0;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case LinearToneMapping:\n        toneMappingName = 'Linear';\n        break;\n\n      case ReinhardToneMapping:\n        toneMappingName = 'Reinhard';\n        break;\n\n      case Uncharted2ToneMapping:\n        toneMappingName = 'Uncharted2';\n        break;\n\n      case CineonToneMapping:\n        toneMappingName = 'OptimizedCineon';\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap && !parameters.objectSpaceNormalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function replaceClippingPlaneNums(string, parameters) {\n    return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n    function replace(match, include) {\n      var replace = ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function WebGLProgram(renderer, extensions, code, material, shader, parameters, capabilities) {\n    var gl = renderer.context;\n    var defines = material.defines;\n    var vertexShader = shader.vertexShader;\n    var fragmentShader = shader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case EquirectangularReflectionMapping:\n        case EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case CubeRefractionMapping:\n        case EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = capabilities.isWebGL2 ? '' : generateExtensions(material.extensions, parameters, extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material.isRawShaderMaterial) {\n      prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixVertex.length > 0) {\n        prefixVertex += '\\n';\n      }\n\n      prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixFragment.length > 0) {\n        prefixFragment += '\\n';\n      }\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && (capabilities.isWebGL2 || extensions.get('EXT_frag_depth')) ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n      '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && (capabilities.isWebGL2 || extensions.get('EXT_frag_depth')) ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && (capabilities.isWebGL2 || extensions.get('EXT_shader_texture_lod')) ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcapEncoding ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding) : '', parameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n    fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n    vertexShader = unrollLoops(vertexShader);\n    fragmentShader = unrollLoops(fragmentShader);\n\n    if (capabilities.isWebGL2 && !material.isRawShaderMaterial) {\n      var isGLSL3ShaderMaterial = false;\n      var versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n      if (material.isShaderMaterial && vertexShader.match(versionRegex) !== null && fragmentShader.match(versionRegex) !== null) {\n        isGLSL3ShaderMaterial = true;\n        vertexShader = vertexShader.replace(versionRegex, '');\n        fragmentShader = fragmentShader.replace(versionRegex, '');\n      } // GLSL 3.0 conversion\n\n\n      prefixVertex = ['#version 300 es\\n', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n      prefixFragment = ['#version 300 es\\n', '#define varying in', isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;', isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n    var glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program).trim();\n    var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new WebGLUniforms(gl, program, renderer);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function () {\n          console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.name = shader.name;\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLPrograms(renderer, extensions, capabilities) {\n    var programs = [];\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshDistanceMaterial: 'distanceRGBA',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshToonMaterial: 'phong',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      MeshMatcapMaterial: 'matcap',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points',\n      ShadowMaterial: 'shadow',\n      SpriteMaterial: 'sprite'\n    };\n    var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"];\n\n    function allocateBones(object) {\n      var skeleton = object.skeleton;\n      var bones = skeleton.bones;\n\n      if (capabilities.floatVertexTextures) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //  - leave some extra space for other uniforms\n        //  - limit here is ANGLE's 254 max uniform vectors\n        //    (up to 54 should be safe)\n        var nVertexUniforms = capabilities.maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = Math.min(nVertexMatrices, bones.length);\n\n        if (maxBones < bones.length) {\n          console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n          return 0;\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n      var encoding;\n\n      if (!map) {\n        encoding = LinearEncoding;\n      } else if (map.isTexture) {\n        encoding = map.encoding;\n      } else if (map.isWebGLRenderTarget) {\n        console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n        encoding = map.texture.encoding;\n      } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n      if (encoding === LinearEncoding && gammaOverrideLinear) {\n        encoding = GammaEncoding;\n      }\n\n      return encoding;\n    }\n\n    this.getParameters = function (material, lights, shadows, fog, nClipPlanes, nClipIntersection, object) {\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = object.isSkinnedMesh ? allocateBones(object) : 0;\n      var precision = capabilities.precision;\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var parameters = {\n        shaderID: shaderID,\n        precision: precision,\n        supportsVertexTextures: capabilities.vertexTextures,\n        outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n        matcap: !!material.matcap,\n        matcapEncoding: getTextureEncodingFromMap(material.matcap, renderer.gammaInput),\n        envMap: !!material.envMap,\n        envMapMode: material.envMap && material.envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n        envMapCubeUV: !!material.envMap && (material.envMap.mapping === CubeUVReflectionMapping || material.envMap.mapping === CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        alphaMap: !!material.alphaMap,\n        gradientMap: !!material.gradientMap,\n        combine: material.combine,\n        vertexColors: material.vertexColors,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp: fog && fog.isFogExp2,\n        flatShading: material.flatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n        skinning: material.skinning && maxBones > 0,\n        maxBones: maxBones,\n        useVertexTexture: capabilities.floatVertexTextures,\n        morphTargets: material.morphTargets,\n        morphNormals: material.morphNormals,\n        maxMorphTargets: renderer.maxMorphTargets,\n        maxMorphNormals: renderer.maxMorphNormals,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numRectAreaLights: lights.rectArea.length,\n        numHemiLights: lights.hemi.length,\n        numClippingPlanes: nClipPlanes,\n        numClipIntersection: nClipIntersection,\n        dithering: material.dithering,\n        shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: renderer.toneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        alphaTest: material.alphaTest,\n        doubleSided: material.side === DoubleSide,\n        flipSided: material.side === BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n      };\n      return parameters;\n    };\n\n    this.getProgramCode = function (material, parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(material.fragmentShader);\n        array.push(material.vertexShader);\n      }\n\n      if (material.defines !== undefined) {\n        for (var name in material.defines) {\n          array.push(name);\n          array.push(material.defines[name]);\n        }\n      }\n\n      for (var i = 0; i < parameterNames.length; i++) {\n        array.push(parameters[parameterNames[i]]);\n      }\n\n      array.push(material.onBeforeCompile.toString());\n      array.push(renderer.gammaOutput);\n      return array.join();\n    };\n\n    this.acquireProgram = function (material, shader, parameters, code) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var programInfo = programs[p];\n\n        if (programInfo.code === code) {\n          program = programInfo;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new WebGLProgram(renderer, extensions, code, material, shader, parameters, capabilities);\n        programs.push(program);\n      }\n\n      return program;\n    };\n\n    this.releaseProgram = function (program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var i = programs.indexOf(program);\n        programs[i] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n    this.programs = programs;\n  }\n  /**\n   * @author fordacious / fordacious.github.io\n   */\n\n\n  function WebGLProperties() {\n    var properties = new WeakMap();\n\n    function get(object) {\n      var map = properties.get(object);\n\n      if (map === undefined) {\n        map = {};\n        properties.set(object, map);\n      }\n\n      return map;\n    }\n\n    function remove(object) {\n      properties.delete(object);\n    }\n\n    function update(object, key, value) {\n      properties.get(object)[key] = value;\n    }\n\n    function dispose() {\n      properties = new WeakMap();\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program && b.program && a.program !== b.program) {\n      return a.program.id - b.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function WebGLRenderList() {\n    var renderItems = [];\n    var renderItemsIndex = 0;\n    var opaque = [];\n    var transparent = [];\n\n    function init() {\n      renderItemsIndex = 0;\n      opaque.length = 0;\n      transparent.length = 0;\n    }\n\n    function push(object, geometry, material, z, group) {\n      var renderItem = renderItems[renderItemsIndex];\n\n      if (renderItem === undefined) {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          program: material.program,\n          renderOrder: object.renderOrder,\n          z: z,\n          group: group\n        };\n        renderItems[renderItemsIndex] = renderItem;\n      } else {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.program = material.program;\n        renderItem.renderOrder = object.renderOrder;\n        renderItem.z = z;\n        renderItem.group = group;\n      }\n\n      (material.transparent === true ? transparent : opaque).push(renderItem);\n      renderItemsIndex++;\n    }\n\n    function sort() {\n      if (opaque.length > 1) opaque.sort(painterSortStable);\n      if (transparent.length > 1) transparent.sort(reversePainterSortStable);\n    }\n\n    return {\n      opaque: opaque,\n      transparent: transparent,\n      init: init,\n      push: push,\n      sort: sort\n    };\n  }\n\n  function WebGLRenderLists() {\n    var lists = {};\n\n    function get(scene, camera) {\n      var hash = scene.id + ',' + camera.id;\n      var list = lists[hash];\n\n      if (list === undefined) {\n        // console.log( 'THREE.WebGLRenderLists:', hash );\n        list = new WebGLRenderList();\n        lists[hash] = list;\n      }\n\n      return list;\n    }\n\n    function dispose() {\n      lists = {};\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function UniformsCache() {\n    var lights = {};\n    return {\n      get: function (light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              direction: new Vector3(),\n              color: new Color(),\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              position: new Vector3(),\n              direction: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              coneCos: 0,\n              penumbraCos: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              position: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2(),\n              shadowCameraNear: 1,\n              shadowCameraFar: 1000\n            };\n            break;\n\n          case 'HemisphereLight':\n            uniforms = {\n              direction: new Vector3(),\n              skyColor: new Color(),\n              groundColor: new Color()\n            };\n            break;\n\n          case 'RectAreaLight':\n            uniforms = {\n              color: new Color(),\n              position: new Vector3(),\n              halfWidth: new Vector3(),\n              halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms\n\n            };\n            break;\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  var count = 0;\n\n  function WebGLLights() {\n    var cache = new UniformsCache();\n    var state = {\n      id: count++,\n      hash: {\n        stateID: -1,\n        directionalLength: -1,\n        pointLength: -1,\n        spotLength: -1,\n        rectAreaLength: -1,\n        hemiLength: -1,\n        shadowsLength: -1\n      },\n      ambient: [0, 0, 0],\n      directional: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      rectArea: [],\n      point: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: []\n    };\n    var vector3 = new Vector3();\n    var matrix4 = new Matrix4();\n    var matrix42 = new Matrix4();\n\n    function setup(lights, shadows, camera) {\n      var r = 0,\n          g = 0,\n          b = 0;\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var viewMatrix = camera.matrixWorldInverse;\n\n      for (var i = 0, l = lights.length; i < l; i++) {\n        var light = lights[i];\n        var color = light.color;\n        var intensity = light.intensity;\n        var distance = light.distance;\n        var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light.isAmbientLight) {\n          r += color.r * intensity;\n          g += color.g * intensity;\n          b += color.b * intensity;\n        } else if (light.isDirectionalLight) {\n          var uniforms = cache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          state.directionalShadowMap[directionalLength] = shadowMap;\n          state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          state.directional[directionalLength] = uniforms;\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var uniforms = cache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.distance = distance;\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.coneCos = Math.cos(light.angle);\n          uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          uniforms.decay = light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          state.spotShadowMap[spotLength] = shadowMap;\n          state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n          state.spot[spotLength] = uniforms;\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n          //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n          // (b) intensity is the brightness of the light\n\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n          matrix42.identity();\n          matrix4.copy(light.matrixWorld);\n          matrix4.premultiply(viewMatrix);\n          matrix42.extractRotation(matrix4);\n          uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n          uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n          uniforms.halfWidth.applyMatrix4(matrix42);\n          uniforms.halfHeight.applyMatrix4(matrix42); // TODO (abelnation): RectAreaLight distance?\n          // uniforms.distance = distance;\n\n          state.rectArea[rectAreaLength] = uniforms;\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var uniforms = cache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.distance = light.distance;\n          uniforms.decay = light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n            uniforms.shadowCameraNear = shadow.camera.near;\n            uniforms.shadowCameraFar = shadow.camera.far;\n          }\n\n          state.pointShadowMap[pointLength] = shadowMap;\n          state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n          state.point[pointLength] = uniforms;\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var uniforms = cache.get(light);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.direction.normalize();\n          uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n          uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n          state.hemi[hemiLength] = uniforms;\n          hemiLength++;\n        }\n      }\n\n      state.ambient[0] = r;\n      state.ambient[1] = g;\n      state.ambient[2] = b;\n      state.directional.length = directionalLength;\n      state.spot.length = spotLength;\n      state.rectArea.length = rectAreaLength;\n      state.point.length = pointLength;\n      state.hemi.length = hemiLength;\n      state.hash.stateID = state.id;\n      state.hash.directionalLength = directionalLength;\n      state.hash.pointLength = pointLength;\n      state.hash.spotLength = spotLength;\n      state.hash.rectAreaLength = rectAreaLength;\n      state.hash.hemiLength = hemiLength;\n      state.hash.shadowsLength = shadows.length;\n    }\n\n    return {\n      setup: setup,\n      state: state\n    };\n  }\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function WebGLRenderState() {\n    var lights = new WebGLLights();\n    var lightsArray = [];\n    var shadowsArray = [];\n\n    function init() {\n      lightsArray.length = 0;\n      shadowsArray.length = 0;\n    }\n\n    function pushLight(light) {\n      lightsArray.push(light);\n    }\n\n    function pushShadow(shadowLight) {\n      shadowsArray.push(shadowLight);\n    }\n\n    function setupLights(camera) {\n      lights.setup(lightsArray, shadowsArray, camera);\n    }\n\n    var state = {\n      lightsArray: lightsArray,\n      shadowsArray: shadowsArray,\n      lights: lights\n    };\n    return {\n      init: init,\n      state: state,\n      setupLights: setupLights,\n      pushLight: pushLight,\n      pushShadow: pushShadow\n    };\n  }\n\n  function WebGLRenderStates() {\n    var renderStates = {};\n\n    function get(scene, camera) {\n      var renderState;\n\n      if (renderStates[scene.id] === undefined) {\n        renderState = new WebGLRenderState();\n        renderStates[scene.id] = {};\n        renderStates[scene.id][camera.id] = renderState;\n      } else {\n        if (renderStates[scene.id][camera.id] === undefined) {\n          renderState = new WebGLRenderState();\n          renderStates[scene.id][camera.id] = renderState;\n        } else {\n          renderState = renderStates[scene.id][camera.id];\n        }\n      }\n\n      return renderState;\n    }\n\n    function dispose() {\n      renderStates = {};\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / https://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   * }\n   */\n\n\n  function MeshDepthMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = BasicDepthPacking;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshDepthMaterial.prototype = Object.create(Material.prototype);\n  MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n  MeshDepthMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  referencePosition: <float>,\n   *  nearDistance: <float>,\n   *  farDistance: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>\n   *\n   * }\n   */\n\n\n  function MeshDistanceMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDistanceMaterial';\n    this.referencePosition = new Vector3();\n    this.nearDistance = 1;\n    this.farDistance = 1000;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshDistanceMaterial.prototype = Object.create(Material.prototype);\n  MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n  MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n  MeshDistanceMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.referencePosition.copy(source.referencePosition);\n    this.nearDistance = source.nearDistance;\n    this.farDistance = source.farDistance;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n    var _frustum = new Frustum(),\n        _projScreenMatrix = new Matrix4(),\n        _shadowMapSize = new Vector2(),\n        _maxShadowMapSize = new Vector2(maxTextureSize, maxTextureSize),\n        _lookTarget = new Vector3(),\n        _lightPositionWorld = new Vector3(),\n        _MorphingFlag = 1,\n        _SkinningFlag = 2,\n        _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n        _depthMaterials = new Array(_NumberOfMaterialVariants),\n        _distanceMaterials = new Array(_NumberOfMaterialVariants),\n        _materialCache = {};\n\n    var shadowSide = {\n      0: BackSide,\n      1: FrontSide,\n      2: DoubleSide\n    };\n    var cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    var cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n    var cube2DViewPorts = [new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4()]; // init\n\n    for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n      var useMorphing = (i & _MorphingFlag) !== 0;\n      var useSkinning = (i & _SkinningFlag) !== 0;\n      var depthMaterial = new MeshDepthMaterial({\n        depthPacking: RGBADepthPacking,\n        morphTargets: useMorphing,\n        skinning: useSkinning\n      });\n      _depthMaterials[i] = depthMaterial; //\n\n      var distanceMaterial = new MeshDistanceMaterial({\n        morphTargets: useMorphing,\n        skinning: useSkinning\n      });\n      _distanceMaterials[i] = distanceMaterial;\n    } //\n\n\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = PCFShadowMap;\n\n    this.render = function (lights, scene, camera) {\n      if (scope.enabled === false) return;\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n      if (lights.length === 0) return; // TODO Clean up (needed in case of contextlost)\n\n      var _gl = _renderer.context;\n      var _state = _renderer.state; // Set GL state for depth map.\n\n      _state.disable(_gl.BLEND);\n\n      _state.buffers.color.setClear(1, 1, 1, 1);\n\n      _state.buffers.depth.setTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      var faceCount;\n\n      for (var i = 0, il = lights.length; i < il; i++) {\n        var light = lights[i];\n        var shadow = light.shadow;\n        var isPointLight = light && light.isPointLight;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        var shadowCamera = shadow.camera;\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        _shadowMapSize.min(_maxShadowMapSize);\n\n        if (isPointLight) {\n          var vpWidth = _shadowMapSize.x;\n          var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n          // following orientation:\n          //\n          //  xzXZ\n          //   y Y\n          //\n          // X - Positive x direction\n          // x - Negative x direction\n          // Y - Positive y direction\n          // y - Negative y direction\n          // Z - Positive z direction\n          // z - Negative z direction\n          // positive X\n\n          cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n          cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n          cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n          cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n          cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n          cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n          _shadowMapSize.x *= 4.0;\n          _shadowMapSize.y *= 2.0;\n        }\n\n        if (shadow.map === null) {\n          var pars = {\n            minFilter: NearestFilter,\n            magFilter: NearestFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + \".shadowMap\";\n          shadowCamera.updateProjectionMatrix();\n        }\n\n        if (shadow.isSpotLightShadow) {\n          shadow.update(light);\n        }\n\n        var shadowMap = shadow.map;\n        var shadowMatrix = shadow.matrix;\n\n        _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n        shadowCamera.position.copy(_lightPositionWorld);\n\n        if (isPointLight) {\n          faceCount = 6; // for point lights we set the shadow matrix to be a translation-only matrix\n          // equal to inverse of the light's position\n\n          shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n        } else {\n          faceCount = 1;\n\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n          shadowCamera.updateMatrixWorld(); // compute shadow matrix\n\n          shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n          shadowMatrix.multiply(shadowCamera.projectionMatrix);\n          shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n        }\n\n        _renderer.setRenderTarget(shadowMap);\n\n        _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n        // run a single pass if not\n\n\n        for (var face = 0; face < faceCount; face++) {\n          if (isPointLight) {\n            _lookTarget.copy(shadowCamera.position);\n\n            _lookTarget.add(cubeDirections[face]);\n\n            shadowCamera.up.copy(cubeUps[face]);\n            shadowCamera.lookAt(_lookTarget);\n            shadowCamera.updateMatrixWorld();\n            var vpDimensions = cube2DViewPorts[face];\n\n            _state.viewport(vpDimensions);\n          } // update camera matrices and frustum\n\n\n          _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n          _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n          renderObject(scene, camera, shadowCamera, isPointLight);\n        }\n      }\n\n      scope.needsUpdate = false;\n    };\n\n    function getDepthMaterial(object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar) {\n      var geometry = object.geometry;\n      var result = null;\n      var materialVariants = _depthMaterials;\n      var customMaterial = object.customDepthMaterial;\n\n      if (isPointLight) {\n        materialVariants = _distanceMaterials;\n        customMaterial = object.customDistanceMaterial;\n      }\n\n      if (!customMaterial) {\n        var useMorphing = false;\n\n        if (material.morphTargets) {\n          if (geometry && geometry.isBufferGeometry) {\n            useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n          } else if (geometry && geometry.isGeometry) {\n            useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n          }\n        }\n\n        if (object.isSkinnedMesh && material.skinning === false) {\n          console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n        }\n\n        var useSkinning = object.isSkinnedMesh && material.skinning;\n        var variantIndex = 0;\n        if (useMorphing) variantIndex |= _MorphingFlag;\n        if (useSkinning) variantIndex |= _SkinningFlag;\n        result = materialVariants[variantIndex];\n      } else {\n        result = customMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n      result.side = material.shadowSide != null ? material.shadowSide : shadowSide[material.side];\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.clipIntersection = material.clipIntersection;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (isPointLight && result.isMeshDistanceMaterial) {\n        result.referencePosition.copy(lightPositionWorld);\n        result.nearDistance = shadowCameraNear;\n        result.farDistance = shadowCameraFar;\n      }\n\n      return result;\n    }\n\n    function renderObject(object, camera, shadowCamera, isPointLight) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n        if (object.castShadow && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else if (material.visible) {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        renderObject(children[i], camera, shadowCamera, isPointLight);\n      }\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLState(gl, extensions, utils, capabilities) {\n    function ColorBuffer() {\n      var locked = false;\n      var color = new Vector4();\n      var currentColorMask = null;\n      var currentColorClear = new Vector4(0, 0, 0, 0);\n      return {\n        setMask: function (colorMask) {\n          if (currentColorMask !== colorMask && !locked) {\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n            currentColorMask = colorMask;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (r, g, b, a, premultipliedAlpha) {\n          if (premultipliedAlpha === true) {\n            r *= a;\n            g *= a;\n            b *= a;\n          }\n\n          color.set(r, g, b, a);\n\n          if (currentColorClear.equals(color) === false) {\n            gl.clearColor(r, g, b, a);\n            currentColorClear.copy(color);\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentColorMask = null;\n          currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n        }\n      };\n    }\n\n    function DepthBuffer() {\n      var locked = false;\n      var currentDepthMask = null;\n      var currentDepthFunc = null;\n      var currentDepthClear = null;\n      return {\n        setTest: function (depthTest) {\n          if (depthTest) {\n            enable(gl.DEPTH_TEST);\n          } else {\n            disable(gl.DEPTH_TEST);\n          }\n        },\n        setMask: function (depthMask) {\n          if (currentDepthMask !== depthMask && !locked) {\n            gl.depthMask(depthMask);\n            currentDepthMask = depthMask;\n          }\n        },\n        setFunc: function (depthFunc) {\n          if (currentDepthFunc !== depthFunc) {\n            if (depthFunc) {\n              switch (depthFunc) {\n                case NeverDepth:\n                  gl.depthFunc(gl.NEVER);\n                  break;\n\n                case AlwaysDepth:\n                  gl.depthFunc(gl.ALWAYS);\n                  break;\n\n                case LessDepth:\n                  gl.depthFunc(gl.LESS);\n                  break;\n\n                case LessEqualDepth:\n                  gl.depthFunc(gl.LEQUAL);\n                  break;\n\n                case EqualDepth:\n                  gl.depthFunc(gl.EQUAL);\n                  break;\n\n                case GreaterEqualDepth:\n                  gl.depthFunc(gl.GEQUAL);\n                  break;\n\n                case GreaterDepth:\n                  gl.depthFunc(gl.GREATER);\n                  break;\n\n                case NotEqualDepth:\n                  gl.depthFunc(gl.NOTEQUAL);\n                  break;\n\n                default:\n                  gl.depthFunc(gl.LEQUAL);\n              }\n            } else {\n              gl.depthFunc(gl.LEQUAL);\n            }\n\n            currentDepthFunc = depthFunc;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (depth) {\n          if (currentDepthClear !== depth) {\n            gl.clearDepth(depth);\n            currentDepthClear = depth;\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentDepthMask = null;\n          currentDepthFunc = null;\n          currentDepthClear = null;\n        }\n      };\n    }\n\n    function StencilBuffer() {\n      var locked = false;\n      var currentStencilMask = null;\n      var currentStencilFunc = null;\n      var currentStencilRef = null;\n      var currentStencilFuncMask = null;\n      var currentStencilFail = null;\n      var currentStencilZFail = null;\n      var currentStencilZPass = null;\n      var currentStencilClear = null;\n      return {\n        setTest: function (stencilTest) {\n          if (stencilTest) {\n            enable(gl.STENCIL_TEST);\n          } else {\n            disable(gl.STENCIL_TEST);\n          }\n        },\n        setMask: function (stencilMask) {\n          if (currentStencilMask !== stencilMask && !locked) {\n            gl.stencilMask(stencilMask);\n            currentStencilMask = stencilMask;\n          }\n        },\n        setFunc: function (stencilFunc, stencilRef, stencilMask) {\n          if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n            currentStencilFunc = stencilFunc;\n            currentStencilRef = stencilRef;\n            currentStencilFuncMask = stencilMask;\n          }\n        },\n        setOp: function (stencilFail, stencilZFail, stencilZPass) {\n          if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n            currentStencilFail = stencilFail;\n            currentStencilZFail = stencilZFail;\n            currentStencilZPass = stencilZPass;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (stencil) {\n          if (currentStencilClear !== stencil) {\n            gl.clearStencil(stencil);\n            currentStencilClear = stencil;\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentStencilMask = null;\n          currentStencilFunc = null;\n          currentStencilRef = null;\n          currentStencilFuncMask = null;\n          currentStencilFail = null;\n          currentStencilZFail = null;\n          currentStencilZPass = null;\n          currentStencilClear = null;\n        }\n      };\n    } //\n\n\n    var colorBuffer = new ColorBuffer();\n    var depthBuffer = new DepthBuffer();\n    var stencilBuffer = new StencilBuffer();\n    var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    var newAttributes = new Uint8Array(maxVertexAttributes);\n    var enabledAttributes = new Uint8Array(maxVertexAttributes);\n    var attributeDivisors = new Uint8Array(maxVertexAttributes);\n    var enabledCapabilities = {};\n    var compressedTextureFormats = null;\n    var currentProgram = null;\n    var currentBlendingEnabled = null;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    var lineWidthAvailable = false;\n    var version = 0;\n    var glVersion = gl.getParameter(gl.VERSION);\n\n    if (glVersion.indexOf('WebGL') !== -1) {\n      version = parseFloat(/^WebGL\\ ([0-9])/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 1.0;\n    } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n      version = parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 2.0;\n    }\n\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var currentScissor = new Vector4();\n    var currentViewport = new Vector4();\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n      for (var i = 0; i < count; i++) {\n        gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n    emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n    colorBuffer.setClear(0, 0, 0, 1);\n    depthBuffer.setClear(1);\n    stencilBuffer.setClear(0);\n    enable(gl.DEPTH_TEST);\n    depthBuffer.setFunc(LessEqualDepth);\n    setFlipSided(false);\n    setCullFace(CullFaceBack);\n    enable(gl.CULL_FACE);\n    setBlending(NoBlending); //\n\n    function initAttributes() {\n      for (var i = 0, l = newAttributes.length; i < l; i++) {\n        newAttributes[i] = 0;\n      }\n    }\n\n    function enableAttribute(attribute) {\n      enableAttributeAndDivisor(attribute, 0);\n    }\n\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        var extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n        extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    }\n\n    function disableUnusedAttributes() {\n      for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n        if (enabledAttributes[i] !== newAttributes[i]) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n    }\n\n    function enable(id) {\n      if (enabledCapabilities[id] !== true) {\n        gl.enable(id);\n        enabledCapabilities[id] = true;\n      }\n    }\n\n    function disable(id) {\n      if (enabledCapabilities[id] !== false) {\n        gl.disable(id);\n        enabledCapabilities[id] = false;\n      }\n    }\n\n    function getCompressedTextureFormats() {\n      if (compressedTextureFormats === null) {\n        compressedTextureFormats = [];\n\n        if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1') || extensions.get('WEBGL_compressed_texture_astc')) {\n          var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n          for (var i = 0; i < formats.length; i++) {\n            compressedTextureFormats.push(formats[i]);\n          }\n        }\n      }\n\n      return compressedTextureFormats;\n    }\n\n    function useProgram(program) {\n      if (currentProgram !== program) {\n        gl.useProgram(program);\n        currentProgram = program;\n        return true;\n      }\n\n      return false;\n    }\n\n    function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending === NoBlending) {\n        if (currentBlendingEnabled) {\n          disable(gl.BLEND);\n          currentBlendingEnabled = false;\n        }\n\n        return;\n      }\n\n      if (!currentBlendingEnabled) {\n        enable(gl.BLEND);\n        currentBlendingEnabled = true;\n      }\n\n      if (blending !== CustomBlending) {\n        if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n          if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n            gl.blendEquation(gl.FUNC_ADD);\n            currentBlendEquation = AddEquation;\n            currentBlendEquationAlpha = AddEquation;\n          }\n\n          if (premultipliedAlpha) {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(gl.ONE, gl.ONE);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          } else {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          }\n\n          currentBlendSrc = null;\n          currentBlendDst = null;\n          currentBlendSrcAlpha = null;\n          currentBlendDstAlpha = null;\n          currentBlending = blending;\n          currentPremultipledAlpha = premultipliedAlpha;\n        }\n\n        return;\n      } // custom blending\n\n\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(utils.convert(blendEquation), utils.convert(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(utils.convert(blendSrc), utils.convert(blendDst), utils.convert(blendSrcAlpha), utils.convert(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = null;\n    }\n\n    function setMaterial(material, frontFaceCW) {\n      material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n      var flipSided = material.side === BackSide;\n      if (frontFaceCW) flipSided = !flipSided;\n      setFlipSided(flipSided);\n      material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      depthBuffer.setFunc(material.depthFunc);\n      depthBuffer.setTest(material.depthTest);\n      depthBuffer.setMask(material.depthWrite);\n      colorBuffer.setMask(material.colorWrite);\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    } //\n\n\n    function setFlipSided(flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(gl.CW);\n        } else {\n          gl.frontFace(gl.CCW);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    }\n\n    function setCullFace(cullFace) {\n      if (cullFace !== CullFaceNone) {\n        enable(gl.CULL_FACE);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === CullFaceBack) {\n            gl.cullFace(gl.BACK);\n          } else if (cullFace === CullFaceFront) {\n            gl.cullFace(gl.FRONT);\n          } else {\n            gl.cullFace(gl.FRONT_AND_BACK);\n          }\n        }\n      } else {\n        disable(gl.CULL_FACE);\n      }\n\n      currentCullFace = cullFace;\n    }\n\n    function setLineWidth(width) {\n      if (width !== currentLineWidth) {\n        if (lineWidthAvailable) gl.lineWidth(width);\n        currentLineWidth = width;\n      }\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n      if (polygonOffset) {\n        enable(gl.POLYGON_OFFSET_FILL);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        disable(gl.POLYGON_OFFSET_FILL);\n      }\n    }\n\n    function setScissorTest(scissorTest) {\n      if (scissorTest) {\n        enable(gl.SCISSOR_TEST);\n      } else {\n        disable(gl.SCISSOR_TEST);\n      }\n    } // texture\n\n\n    function activeTexture(webglSlot) {\n      if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    }\n\n    function bindTexture(webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    }\n\n    function compressedTexImage2D() {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage2D() {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage3D() {\n      try {\n        gl.texImage3D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    } //\n\n\n    function scissor(scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    }\n\n    function viewport(viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    } //\n\n\n    function reset() {\n      for (var i = 0; i < enabledAttributes.length; i++) {\n        if (enabledAttributes[i] === 1) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n\n      enabledCapabilities = {};\n      compressedTextureFormats = null;\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      currentProgram = null;\n      currentBlending = null;\n      currentFlipSided = null;\n      currentCullFace = null;\n      colorBuffer.reset();\n      depthBuffer.reset();\n      stencilBuffer.reset();\n    }\n\n    return {\n      buffers: {\n        color: colorBuffer,\n        depth: depthBuffer,\n        stencil: stencilBuffer\n      },\n      initAttributes: initAttributes,\n      enableAttribute: enableAttribute,\n      enableAttributeAndDivisor: enableAttributeAndDivisor,\n      disableUnusedAttributes: disableUnusedAttributes,\n      enable: enable,\n      disable: disable,\n      getCompressedTextureFormats: getCompressedTextureFormats,\n      useProgram: useProgram,\n      setBlending: setBlending,\n      setMaterial: setMaterial,\n      setFlipSided: setFlipSided,\n      setCullFace: setCullFace,\n      setLineWidth: setLineWidth,\n      setPolygonOffset: setPolygonOffset,\n      setScissorTest: setScissorTest,\n      activeTexture: activeTexture,\n      bindTexture: bindTexture,\n      compressedTexImage2D: compressedTexImage2D,\n      texImage2D: texImage2D,\n      texImage3D: texImage3D,\n      scissor: scissor,\n      viewport: viewport,\n      reset: reset\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n    var _videoTextures = {};\n\n    var _canvas; //\n\n\n    function clampToMaxSize(image, maxSize) {\n      if (image.width > maxSize || image.height > maxSize) {\n        if ('data' in image) {\n          console.warn('THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n          return;\n        } // Warning: Scaling through the canvas will only work with images that use\n        // premultiplied alpha.\n\n\n        var scale = maxSize / Math.max(image.width, image.height);\n        var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = Math.floor(image.width * scale);\n        canvas.height = Math.floor(image.height * scale);\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n        console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height);\n        return canvas;\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo(image) {\n      return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n    }\n\n    function makePowerOfTwo(image) {\n      if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap) {\n        if (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        _canvas.width = _Math.floorPowerOfTwo(image.width);\n        _canvas.height = _Math.floorPowerOfTwo(image.height);\n\n        var context = _canvas.getContext('2d');\n\n        context.drawImage(image, 0, 0, _canvas.width, _canvas.height);\n        console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height);\n        return _canvas;\n      }\n\n      return image;\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      if (capabilities.isWebGL2) return false;\n      return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function textureNeedsGenerateMipmaps(texture, isPowerOfTwo) {\n      return texture.generateMipmaps && isPowerOfTwo && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function generateMipmap(target, texture, width, height) {\n      _gl.generateMipmap(target);\n\n      var textureProperties = properties.get(texture); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\n      textureProperties.__maxMipLevel = Math.log(Math.max(width, height)) * Math.LOG2E;\n    }\n\n    function getInternalFormat(glFormat, glType) {\n      if (!capabilities.isWebGL2) return glFormat;\n\n      if (glFormat === _gl.RED) {\n        if (glType === _gl.FLOAT) return _gl.R32F;\n        if (glType === _gl.HALF_FLOAT) return _gl.R16F;\n        if (glType === _gl.UNSIGNED_BYTE) return _gl.R8;\n      }\n\n      if (glFormat === _gl.RGB) {\n        if (glType === _gl.FLOAT) return _gl.RGB32F;\n        if (glType === _gl.HALF_FLOAT) return _gl.RGB16F;\n        if (glType === _gl.UNSIGNED_BYTE) return _gl.RGB8;\n      }\n\n      if (glFormat === _gl.RGBA) {\n        if (glType === _gl.FLOAT) return _gl.RGBA32F;\n        if (glType === _gl.HALF_FLOAT) return _gl.RGBA16F;\n        if (glType === _gl.UNSIGNED_BYTE) return _gl.RGBA8;\n      }\n\n      return glFormat;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter) {\n        return _gl.NEAREST;\n      }\n\n      return _gl.LINEAR;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n\n      if (texture.isVideoTexture) {\n        delete _videoTextures[texture.id];\n      }\n\n      info.memory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n      info.memory.textures--;\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image && textureProperties.__image__webglTextureCube) {\n        // cube texture\n        _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n      } else {\n        // 2D texture\n        if (textureProperties.__webglInit === undefined) return;\n\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      } // remove all webgl properties\n\n\n      properties.remove(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      if (!renderTarget) return;\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget.isWebGLRenderTargetCube) {\n        for (var i = 0; i < 6; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n          if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n      }\n\n      properties.remove(renderTarget.texture);\n      properties.remove(renderTarget);\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n      if (texture.isVideoTexture) updateVideoTexture(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n    }\n\n    function setTexture3D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image.length === 6) {\n        if (texture.version > 0 && textureProperties.__version !== texture.version) {\n          if (!textureProperties.__image__webglTextureCube) {\n            texture.addEventListener('dispose', onTextureDispose);\n            textureProperties.__image__webglTextureCube = _gl.createTexture();\n            info.memory.textures++;\n          }\n\n          state.activeTexture(_gl.TEXTURE0 + slot);\n          state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n          _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n          var isCompressed = texture && texture.isCompressedTexture;\n          var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n          var cubeImage = [];\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed && !isDataTexture) {\n              cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n            } else {\n              cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n            }\n          }\n\n          var image = cubeImage[0],\n              isPowerOfTwoImage = isPowerOfTwo(image),\n              glFormat = utils.convert(texture.format),\n              glType = utils.convert(texture.type),\n              glInternalFormat = getInternalFormat(glFormat, glType);\n          setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed) {\n              if (isDataTexture) {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n              }\n            } else {\n              var mipmap,\n                  mipmaps = cubeImage[i].mipmaps;\n\n              for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n                mipmap = mipmaps[j];\n\n                if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n                  if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                    state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                  } else {\n                    console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n                  }\n                } else {\n                  state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n                }\n              }\n            }\n          }\n\n          if (!isCompressed) {\n            textureProperties.__maxMipLevel = 0;\n          } else {\n            textureProperties.__maxMipLevel = mipmaps.length - 1;\n          }\n\n          if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n            // We assume images for cube map have the same size.\n            generateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n          }\n\n          textureProperties.__version = texture.version;\n          if (texture.onUpdate) texture.onUpdate(texture);\n        } else {\n          state.activeTexture(_gl.TEXTURE0 + slot);\n          state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n        }\n      }\n    }\n\n    function setTextureCubeDynamic(texture, slot) {\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n    }\n\n    function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n      var extension;\n\n      if (isPowerOfTwoImage) {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, utils.convert(texture.wrapS));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, utils.convert(texture.wrapT));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, utils.convert(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, utils.convert(texture.minFilter));\n      } else {\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n        }\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n        }\n      }\n\n      extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension) {\n        if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n        if (texture.type === HalfFloatType && (capabilities.isWebGL2 || extensions.get('OES_texture_half_float_linear')) === null) return;\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      var textureType;\n\n      if (texture.isDataTexture3D) {\n        textureType = _gl.TEXTURE_3D;\n      } else {\n        textureType = _gl.TEXTURE_2D;\n      }\n\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        info.memory.textures++;\n      }\n\n      state.activeTexture(_gl.TEXTURE0 + slot);\n      state.bindTexture(textureType, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n      var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n      if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n        image = makePowerOfTwo(image);\n      }\n\n      var isPowerOfTwoImage = isPowerOfTwo(image),\n          glFormat = utils.convert(texture.format),\n          glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(glFormat, glType);\n      setTextureParameters(textureType, texture, isPowerOfTwoImage);\n      var mipmap,\n          mipmaps = texture.mipmaps;\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        glInternalFormat = _gl.DEPTH_COMPONENT;\n\n        if (texture.type === FloatType) {\n          if (!capabilities.isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n          glInternalFormat = _gl.DEPTH_COMPONENT32F;\n        } else if (capabilities.isWebGL2) {\n          // WebGL 2.0 requires signed internalformat for glTexImage2D\n          glInternalFormat = _gl.DEPTH_COMPONENT16;\n        }\n\n        if (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedShortType;\n            glType = utils.convert(texture.type);\n          }\n        } // Depth stencil textures need the DEPTH_STENCIL internal format\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\n        if (texture.format === DepthStencilFormat) {\n          glInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = utils.convert(texture.type);\n          }\n        }\n\n        state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n          textureProperties.__maxMipLevel = 0;\n        }\n      } else if (texture.isCompressedTexture) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n              state.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n            }\n          } else {\n            state.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else if (texture.isDataTexture3D) {\n        state.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n          textureProperties.__maxMipLevel = 0;\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n        generateMipmap(_gl.TEXTURE_2D, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n      var glFormat = utils.convert(renderTarget.texture.format);\n      var glType = utils.convert(renderTarget.texture.type);\n      var glInternalFormat = getInternalFormat(glFormat, glType);\n      state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget) {\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      } else {\n        // FIXME: We don't support !depth !stencil\n        _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n      }\n\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      if (renderTarget.depthTexture.format === DepthFormat) {\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n      } else {\n        throw new Error('Unknown depthTexture format');\n      }\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var i = 0; i < 6; i++) {\n            _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n          }\n        } else {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n        }\n      }\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      info.memory.textures++;\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget); // Setup framebuffer\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n        }\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) {\n          generateMipmap(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n      } else {\n        state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n        setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) {\n          generateMipmap(_gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(_gl.TEXTURE_2D, null);\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var texture = renderTarget.texture;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget);\n\n      if (textureNeedsGenerateMipmaps(texture, isTargetPowerOfTwo)) {\n        var target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n        generateMipmap(target, texture, renderTarget.width, renderTarget.height);\n        state.bindTexture(target, null);\n      }\n    }\n\n    function updateVideoTexture(texture) {\n      var id = texture.id;\n      var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n      if (_videoTextures[id] !== frame) {\n        _videoTextures[id] = frame;\n        texture.update();\n      }\n    }\n\n    this.setTexture2D = setTexture2D;\n    this.setTexture3D = setTexture3D;\n    this.setTextureCube = setTextureCube;\n    this.setTextureCubeDynamic = setTextureCubeDynamic;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n  }\n  /**\n   * @author thespite / http://www.twitter.com/thespite\n   */\n\n\n  function WebGLUtils(gl, extensions, capabilities) {\n    function convert(p) {\n      var extension;\n      if (p === RepeatWrapping) return gl.REPEAT;\n      if (p === ClampToEdgeWrapping) return gl.CLAMP_TO_EDGE;\n      if (p === MirroredRepeatWrapping) return gl.MIRRORED_REPEAT;\n      if (p === NearestFilter) return gl.NEAREST;\n      if (p === NearestMipMapNearestFilter) return gl.NEAREST_MIPMAP_NEAREST;\n      if (p === NearestMipMapLinearFilter) return gl.NEAREST_MIPMAP_LINEAR;\n      if (p === LinearFilter) return gl.LINEAR;\n      if (p === LinearMipMapNearestFilter) return gl.LINEAR_MIPMAP_NEAREST;\n      if (p === LinearMipMapLinearFilter) return gl.LINEAR_MIPMAP_LINEAR;\n      if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n      if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n      if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n      if (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n      if (p === ByteType) return gl.BYTE;\n      if (p === ShortType) return gl.SHORT;\n      if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n      if (p === IntType) return gl.INT;\n      if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n      if (p === FloatType) return gl.FLOAT;\n\n      if (p === HalfFloatType) {\n        if (capabilities.isWebGL2) return gl.HALF_FLOAT;\n        extension = extensions.get('OES_texture_half_float');\n        if (extension !== null) return extension.HALF_FLOAT_OES;\n      }\n\n      if (p === AlphaFormat) return gl.ALPHA;\n      if (p === RGBFormat) return gl.RGB;\n      if (p === RGBAFormat) return gl.RGBA;\n      if (p === LuminanceFormat) return gl.LUMINANCE;\n      if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n      if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n      if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n      if (p === RedFormat) return gl.RED;\n      if (p === AddEquation) return gl.FUNC_ADD;\n      if (p === SubtractEquation) return gl.FUNC_SUBTRACT;\n      if (p === ReverseSubtractEquation) return gl.FUNC_REVERSE_SUBTRACT;\n      if (p === ZeroFactor) return gl.ZERO;\n      if (p === OneFactor) return gl.ONE;\n      if (p === SrcColorFactor) return gl.SRC_COLOR;\n      if (p === OneMinusSrcColorFactor) return gl.ONE_MINUS_SRC_COLOR;\n      if (p === SrcAlphaFactor) return gl.SRC_ALPHA;\n      if (p === OneMinusSrcAlphaFactor) return gl.ONE_MINUS_SRC_ALPHA;\n      if (p === DstAlphaFactor) return gl.DST_ALPHA;\n      if (p === OneMinusDstAlphaFactor) return gl.ONE_MINUS_DST_ALPHA;\n      if (p === DstColorFactor) return gl.DST_COLOR;\n      if (p === OneMinusDstColorFactor) return gl.ONE_MINUS_DST_COLOR;\n      if (p === SrcAlphaSaturateFactor) return gl.SRC_ALPHA_SATURATE;\n\n      if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        }\n      }\n\n      if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n        if (extension !== null) {\n          if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n          if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n          if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n          if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        }\n      }\n\n      if (p === RGB_ETC1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\n        if (extension !== null) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      }\n\n      if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_astc');\n\n        if (extension !== null) {\n          return p;\n        }\n      }\n\n      if (p === MinEquation || p === MaxEquation) {\n        if (capabilities.isWebGL2) {\n          if (p === MinEquation) return gl.MIN;\n          if (p === MaxEquation) return gl.MAX;\n        }\n\n        extension = extensions.get('EXT_blend_minmax');\n\n        if (extension !== null) {\n          if (p === MinEquation) return extension.MIN_EXT;\n          if (p === MaxEquation) return extension.MAX_EXT;\n        }\n      }\n\n      if (p === UnsignedInt248Type) {\n        if (capabilities.isWebGL2) return gl.UNSIGNED_INT_24_8;\n        extension = extensions.get('WEBGL_depth_texture');\n        if (extension !== null) return extension.UNSIGNED_INT_24_8_WEBGL;\n      }\n\n      return 0;\n    }\n\n    return {\n      convert: convert\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Group() {\n    Object3D.call(this);\n    this.type = 'Group';\n  }\n\n  Group.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Group,\n    isGroup: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  function Camera() {\n    Object3D.call(this);\n    this.type = 'Camera';\n    this.matrixWorldInverse = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.projectionMatrixInverse = new Matrix4();\n  }\n\n  Camera.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Camera,\n    isCamera: true,\n    copy: function (source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\n      this.projectionMatrix.copy(source.projectionMatrix);\n      this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n      return this;\n    },\n    getWorldDirection: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Camera: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      var e = this.matrixWorld.elements;\n      return target.set(-e[8], -e[9], -e[10]).normalize();\n    },\n    updateMatrixWorld: function (force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      this.matrixWorldInverse.getInverse(this.matrixWorld);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author greggman / http://games.greggman.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author tschw\n   */\n\n  function PerspectiveCamera(fov, aspect, near, far) {\n    Camera.call(this);\n    this.type = 'PerspectiveCamera';\n    this.fov = fov !== undefined ? fov : 50;\n    this.zoom = 1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.focus = 10;\n    this.aspect = aspect !== undefined ? aspect : 1;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  PerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: PerspectiveCamera,\n    isPerspectiveCamera: true,\n    copy: function (source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    },\n\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n    setFocalLength: function (focalLength) {\n      // see http://www.bobatkins.com/photography/technical/field_of_view.html\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    },\n\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n    getFocalLength: function () {\n      var vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    },\n    getEffectiveFOV: function () {\n      return _Math.RAD2DEG * 2 * Math.atan(Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n    },\n    getFilmWidth: function () {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    },\n    getFilmHeight: function () {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    },\n\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *   +---+---+---+\n     *   | A | B | C |\n     *   +---+---+---+\n     *   | D | E | F |\n     *   +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *   var w = 1920;\n     *   var h = 1080;\n     *   var fullWidth = w * 3;\n     *   var fullHeight = h * 2;\n     *\n     *   --A--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *   --B--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *   --C--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *   --D--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *   --E--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *   --F--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *   Note there is no reason monitors have to be the same size or in a grid.\n     */\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var near = this.near,\n          top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n          height = 2 * top,\n          width = this.aspect * height,\n          left = -0.5 * width,\n          view = this.view;\n\n      if (this.view !== null && this.view.enabled) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n      if (skew !== 0) left += near * skew / this.getFilmWidth();\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n      this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ArrayCamera(array) {\n    PerspectiveCamera.call(this);\n    this.cameras = array || [];\n  }\n\n  ArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n    constructor: ArrayCamera,\n    isArrayCamera: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebVRManager(renderer) {\n    var scope = this;\n    var device = null;\n    var frameData = null;\n    var poseTarget = null;\n    var controllers = [];\n    var standingMatrix = new Matrix4();\n    var standingMatrixInverse = new Matrix4();\n    var frameOfReferenceType = 'stage';\n\n    if (typeof window !== 'undefined' && 'VRFrameData' in window) {\n      frameData = new window.VRFrameData();\n      window.addEventListener('vrdisplaypresentchange', onVRDisplayPresentChange, false);\n    }\n\n    var matrixWorldInverse = new Matrix4();\n    var tempQuaternion = new Quaternion();\n    var tempPosition = new Vector3();\n    var cameraL = new PerspectiveCamera();\n    cameraL.bounds = new Vector4(0.0, 0.0, 0.5, 1.0);\n    cameraL.layers.enable(1);\n    var cameraR = new PerspectiveCamera();\n    cameraR.bounds = new Vector4(0.5, 0.0, 0.5, 1.0);\n    cameraR.layers.enable(2);\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    function isPresenting() {\n      return device !== null && device.isPresenting === true;\n    }\n\n    var currentSize, currentPixelRatio;\n\n    function onVRDisplayPresentChange() {\n      if (isPresenting()) {\n        var eyeParameters = device.getEyeParameters('left');\n        var renderWidth = eyeParameters.renderWidth;\n        var renderHeight = eyeParameters.renderHeight;\n        currentPixelRatio = renderer.getPixelRatio();\n        currentSize = renderer.getSize();\n        renderer.setDrawingBufferSize(renderWidth * 2, renderHeight, 1);\n        animation.start();\n      } else {\n        if (scope.enabled) {\n          renderer.setDrawingBufferSize(currentSize.width, currentSize.height, currentPixelRatio);\n        }\n\n        animation.stop();\n      }\n    } //\n\n\n    var triggers = [];\n\n    function findGamepad(id) {\n      var gamepads = navigator.getGamepads && navigator.getGamepads();\n\n      for (var i = 0, j = 0, l = gamepads.length; i < l; i++) {\n        var gamepad = gamepads[i];\n\n        if (gamepad && (gamepad.id === 'Daydream Controller' || gamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' || gamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith('Oculus Touch') || gamepad.id.startsWith('Spatial Controller'))) {\n          if (j === id) return gamepad;\n          j++;\n        }\n      }\n    }\n\n    function updateControllers() {\n      for (var i = 0; i < controllers.length; i++) {\n        var controller = controllers[i];\n        var gamepad = findGamepad(i);\n\n        if (gamepad !== undefined && gamepad.pose !== undefined) {\n          if (gamepad.pose === null) return; //  Pose\n\n          var pose = gamepad.pose;\n          if (pose.hasPosition === false) controller.position.set(0.2, -0.6, -0.05);\n          if (pose.position !== null) controller.position.fromArray(pose.position);\n          if (pose.orientation !== null) controller.quaternion.fromArray(pose.orientation);\n          controller.matrix.compose(controller.position, controller.quaternion, controller.scale);\n          controller.matrix.premultiply(standingMatrix);\n          controller.matrix.decompose(controller.position, controller.quaternion, controller.scale);\n          controller.matrixWorldNeedsUpdate = true;\n          controller.visible = true; //  Trigger\n\n          var buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n          if (triggers[i] !== gamepad.buttons[buttonId].pressed) {\n            triggers[i] = gamepad.buttons[buttonId].pressed;\n\n            if (triggers[i] === true) {\n              controller.dispatchEvent({\n                type: 'selectstart'\n              });\n            } else {\n              controller.dispatchEvent({\n                type: 'selectend'\n              });\n              controller.dispatchEvent({\n                type: 'select'\n              });\n            }\n          }\n        } else {\n          controller.visible = false;\n        }\n      }\n    } //\n\n\n    this.enabled = false;\n\n    this.getController = function (id) {\n      var controller = controllers[id];\n\n      if (controller === undefined) {\n        controller = new Group();\n        controller.matrixAutoUpdate = false;\n        controller.visible = false;\n        controllers[id] = controller;\n      }\n\n      return controller;\n    };\n\n    this.getDevice = function () {\n      return device;\n    };\n\n    this.setDevice = function (value) {\n      if (value !== undefined) device = value;\n      animation.setContext(value);\n    };\n\n    this.setFrameOfReferenceType = function (value) {\n      frameOfReferenceType = value;\n    };\n\n    this.setPoseTarget = function (object) {\n      if (object !== undefined) poseTarget = object;\n    };\n\n    this.getCamera = function (camera) {\n      var userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n      if (device === null) {\n        camera.position.set(0, userHeight, 0);\n        return camera;\n      }\n\n      device.depthNear = camera.near;\n      device.depthFar = camera.far;\n      device.getFrameData(frameData); //\n\n      if (frameOfReferenceType === 'stage') {\n        var stageParameters = device.stageParameters;\n\n        if (stageParameters) {\n          standingMatrix.fromArray(stageParameters.sittingToStandingTransform);\n        } else {\n          standingMatrix.makeTranslation(0, userHeight, 0);\n        }\n      }\n\n      var pose = frameData.pose;\n      var poseObject = poseTarget !== null ? poseTarget : camera; // We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\n      poseObject.matrix.copy(standingMatrix);\n      poseObject.matrix.decompose(poseObject.position, poseObject.quaternion, poseObject.scale);\n\n      if (pose.orientation !== null) {\n        tempQuaternion.fromArray(pose.orientation);\n        poseObject.quaternion.multiply(tempQuaternion);\n      }\n\n      if (pose.position !== null) {\n        tempQuaternion.setFromRotationMatrix(standingMatrix);\n        tempPosition.fromArray(pose.position);\n        tempPosition.applyQuaternion(tempQuaternion);\n        poseObject.position.add(tempPosition);\n      }\n\n      poseObject.updateMatrixWorld();\n      if (device.isPresenting === false) return camera; //\n\n      cameraL.near = camera.near;\n      cameraR.near = camera.near;\n      cameraL.far = camera.far;\n      cameraR.far = camera.far;\n      cameraVR.matrixWorld.copy(camera.matrixWorld);\n      cameraVR.matrixWorldInverse.copy(camera.matrixWorldInverse);\n      cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);\n      cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix); // TODO (mrdoob) Double check this code\n\n      standingMatrixInverse.getInverse(standingMatrix);\n\n      if (frameOfReferenceType === 'stage') {\n        cameraL.matrixWorldInverse.multiply(standingMatrixInverse);\n        cameraR.matrixWorldInverse.multiply(standingMatrixInverse);\n      }\n\n      var parent = poseObject.parent;\n\n      if (parent !== null) {\n        matrixWorldInverse.getInverse(parent.matrixWorld);\n        cameraL.matrixWorldInverse.multiply(matrixWorldInverse);\n        cameraR.matrixWorldInverse.multiply(matrixWorldInverse);\n      } // envMap and Mirror needs camera.matrixWorld\n\n\n      cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);\n      cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);\n      cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);\n      cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix); // HACK (mrdoob)\n      // https://github.com/w3c/webvr/issues/203\n\n      cameraVR.projectionMatrix.copy(cameraL.projectionMatrix); //\n\n      var layers = device.getLayers();\n\n      if (layers.length) {\n        var layer = layers[0];\n\n        if (layer.leftBounds !== null && layer.leftBounds.length === 4) {\n          cameraL.bounds.fromArray(layer.leftBounds);\n        }\n\n        if (layer.rightBounds !== null && layer.rightBounds.length === 4) {\n          cameraR.bounds.fromArray(layer.rightBounds);\n        }\n      }\n\n      updateControllers();\n      return cameraVR;\n    };\n\n    this.getStandingMatrix = function () {\n      return standingMatrix;\n    };\n\n    this.isPresenting = isPresenting; // Animation Loop\n\n    var animation = new WebGLAnimation();\n\n    this.setAnimationLoop = function (callback) {\n      animation.setAnimationLoop(callback);\n    };\n\n    this.submitFrame = function () {\n      if (isPresenting()) device.submitFrame();\n    };\n\n    this.dispose = function () {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('vrdisplaypresentchange', onVRDisplayPresentChange);\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebXRManager(renderer) {\n    var gl = renderer.context;\n    var device = null;\n    var session = null;\n    var frameOfReference = null;\n    var frameOfReferenceType = 'stage';\n    var pose = null;\n    var controllers = [];\n    var inputSources = [];\n\n    function isPresenting() {\n      return session !== null && frameOfReference !== null;\n    } //\n\n\n    var cameraL = new PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new Vector4();\n    var cameraR = new PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new Vector4();\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    this.enabled = false;\n\n    this.getController = function (id) {\n      var controller = controllers[id];\n\n      if (controller === undefined) {\n        controller = new Group();\n        controller.matrixAutoUpdate = false;\n        controller.visible = false;\n        controllers[id] = controller;\n      }\n\n      return controller;\n    };\n\n    this.getDevice = function () {\n      return device;\n    };\n\n    this.setDevice = function (value) {\n      if (value !== undefined) device = value;\n      if (value instanceof XRDevice) gl.setCompatibleXRDevice(value);\n    }; //\n\n\n    function onSessionEvent(event) {\n      var controller = controllers[inputSources.indexOf(event.inputSource)];\n      if (controller) controller.dispatchEvent({\n        type: event.type\n      });\n    }\n\n    function onSessionEnd() {\n      renderer.setFramebuffer(null);\n      animation.stop();\n    }\n\n    this.setFrameOfReferenceType = function (value) {\n      frameOfReferenceType = value;\n    };\n\n    this.setSession = function (value) {\n      session = value;\n\n      if (session !== null) {\n        session.addEventListener('select', onSessionEvent);\n        session.addEventListener('selectstart', onSessionEvent);\n        session.addEventListener('selectend', onSessionEvent);\n        session.addEventListener('end', onSessionEnd);\n        session.baseLayer = new XRWebGLLayer(session, gl);\n        session.requestFrameOfReference(frameOfReferenceType).then(function (value) {\n          frameOfReference = value;\n          renderer.setFramebuffer(session.baseLayer.framebuffer);\n          animation.setContext(session);\n          animation.start();\n        }); //\n\n        inputSources = session.getInputSources();\n        session.addEventListener('inputsourceschange', function () {\n          inputSources = session.getInputSources();\n          console.log(inputSources);\n        });\n      }\n    };\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n    }\n\n    this.getCamera = function (camera) {\n      if (isPresenting()) {\n        var parent = camera.parent;\n        var cameras = cameraVR.cameras; // apply camera.parent to cameraVR\n\n        updateCamera(cameraVR, parent);\n\n        for (var i = 0; i < cameras.length; i++) {\n          updateCamera(cameras[i], parent);\n        } // update camera and its children\n\n\n        camera.matrixWorld.copy(cameraVR.matrixWorld);\n        var children = camera.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateMatrixWorld(true);\n        }\n\n        return cameraVR;\n      }\n\n      return camera;\n    };\n\n    this.isPresenting = isPresenting; // Animation Loop\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getDevicePose(frameOfReference);\n\n      if (pose !== null) {\n        var layer = session.baseLayer;\n        var views = frame.views;\n\n        for (var i = 0; i < views.length; i++) {\n          var view = views[i];\n          var viewport = layer.getViewport(view);\n          var viewMatrix = pose.getViewMatrix(view);\n          var camera = cameraVR.cameras[i];\n          camera.matrix.fromArray(viewMatrix).getInverse(camera.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix); // HACK (mrdoob)\n            // https://github.com/w3c/webvr/issues/203\n\n            cameraVR.projectionMatrix.copy(camera.projectionMatrix);\n          }\n        }\n      } //\n\n\n      for (var i = 0; i < controllers.length; i++) {\n        var controller = controllers[i];\n        var inputSource = inputSources[i];\n\n        if (inputSource) {\n          var inputPose = frame.getInputPose(inputSource, frameOfReference);\n\n          if (inputPose !== null) {\n            if ('targetRay' in inputPose) {\n              controller.matrix.elements = inputPose.targetRay.transformMatrix;\n            } else if ('pointerMatrix' in inputPose) {\n              // DEPRECATED\n              controller.matrix.elements = inputPose.pointerMatrix;\n            }\n\n            controller.matrix.decompose(controller.position, controller.rotation, controller.scale);\n            controller.visible = true;\n            continue;\n          }\n        }\n\n        controller.visible = false;\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {}; // DEPRECATED\n\n\n    this.getStandingMatrix = function () {\n      console.warn('THREE.WebXRManager: getStandingMatrix() is no longer needed.');\n      return new THREE.Matrix4();\n    };\n\n    this.submitFrame = function () {};\n  }\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   * @author tschw\n   */\n\n\n  function WebGLRenderer(parameters) {\n    console.log('THREE.WebGLRenderer', REVISION);\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n    var currentRenderList = null;\n    var currentRenderState = null; // public properties\n\n    this.domElement = _canvas;\n    this.context = null; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.gammaInput = false;\n    this.gammaOutput = false; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = LinearToneMapping;\n    this.toneMappingExposure = 1.0;\n    this.toneMappingWhitePoint = 1.0; // morphs\n\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4; // internal properties\n\n    var _this = this,\n        _isContextLost = false,\n        // internal state cache\n    _framebuffer = null,\n        _currentRenderTarget = null,\n        _currentFramebuffer = null,\n        _currentMaterialId = -1,\n        // geometry and program caching\n    _currentGeometryProgram = {\n      geometry: null,\n      program: null,\n      wireframe: false\n    },\n        _currentCamera = null,\n        _currentArrayCamera = null,\n        _currentViewport = new Vector4(),\n        _currentScissor = new Vector4(),\n        _currentScissorTest = null,\n        //\n    _usedTextureUnits = 0,\n        //\n    _width = _canvas.width,\n        _height = _canvas.height,\n        _pixelRatio = 1,\n        _viewport = new Vector4(0, 0, _width, _height),\n        _scissor = new Vector4(0, 0, _width, _height),\n        _scissorTest = false,\n        // frustum\n    _frustum = new Frustum(),\n        // clipping\n    _clipping = new WebGLClipping(),\n        _clippingEnabled = false,\n        _localClippingEnabled = false,\n        // camera matrices cache\n    _projScreenMatrix = new Matrix4(),\n        _vector3 = new Vector3();\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    } // initialize\n\n\n    var _gl;\n\n    try {\n      var contextAttributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer,\n        powerPreference: _powerPreference\n      }; // event listeners must be registered before WebGL context is created, see #12753\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n      _gl = _context || _canvas.getContext('webgl', contextAttributes) || _canvas.getContext('experimental-webgl', contextAttributes);\n\n      if (_gl === null) {\n        if (_canvas.getContext('webgl') !== null) {\n          throw new Error('Error creating WebGL context with your selected attributes.');\n        } else {\n          throw new Error('Error creating WebGL context.');\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error.message);\n    }\n\n    var extensions, capabilities, state, info;\n    var properties, textures, attributes, geometries, objects;\n    var programCache, renderLists, renderStates;\n    var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n    var utils;\n\n    function initGLContext() {\n      extensions = new WebGLExtensions(_gl);\n      capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\n      if (!capabilities.isWebGL2) {\n        extensions.get('WEBGL_depth_texture');\n        extensions.get('OES_texture_float');\n        extensions.get('OES_texture_half_float');\n        extensions.get('OES_texture_half_float_linear');\n        extensions.get('OES_standard_derivatives');\n        extensions.get('OES_element_index_uint');\n        extensions.get('ANGLE_instanced_arrays');\n      }\n\n      extensions.get('OES_texture_float_linear');\n      utils = new WebGLUtils(_gl, extensions, capabilities);\n      state = new WebGLState(_gl, extensions, utils, capabilities);\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n      info = new WebGLInfo(_gl);\n      properties = new WebGLProperties();\n      textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n      attributes = new WebGLAttributes(_gl);\n      geometries = new WebGLGeometries(_gl, attributes, info);\n      objects = new WebGLObjects(geometries, info);\n      morphtargets = new WebGLMorphtargets(_gl);\n      programCache = new WebGLPrograms(_this, extensions, capabilities);\n      renderLists = new WebGLRenderLists();\n      renderStates = new WebGLRenderStates();\n      background = new WebGLBackground(_this, state, objects, _premultipliedAlpha);\n      bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n      indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n      info.programs = programCache.programs;\n      _this.context = _gl;\n      _this.capabilities = capabilities;\n      _this.extensions = extensions;\n      _this.properties = properties;\n      _this.renderLists = renderLists;\n      _this.state = state;\n      _this.info = info;\n    }\n\n    initGLContext(); // vr\n\n    var vr = null;\n\n    if (typeof navigator !== 'undefined') {\n      vr = 'xr' in navigator ? new WebXRManager(_this) : new WebVRManager(_this);\n    }\n\n    this.vr = vr; // shadow map\n\n    var shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n    this.shadowMap = shadowMap; // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.loseContext();\n    };\n\n    this.forceContextRestore = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.restoreContext();\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) return;\n      _pixelRatio = value;\n      this.setSize(_width, _height, false);\n    };\n\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      if (vr.isPresenting()) {\n        console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n        return;\n      }\n\n      _width = width;\n      _height = height;\n      _canvas.width = width * _pixelRatio;\n      _canvas.height = height * _pixelRatio;\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getDrawingBufferSize = function () {\n      return {\n        width: _width * _pixelRatio,\n        height: _height * _pixelRatio\n      };\n    };\n\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\n      _width = width;\n      _height = height;\n      _pixelRatio = pixelRatio;\n      _canvas.width = width * pixelRatio;\n      _canvas.height = height * pixelRatio;\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getCurrentViewport = function () {\n      return _currentViewport;\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      _viewport.set(x, _height - y - height, width, height);\n\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      _scissor.set(x, _height - y - height, width, height);\n\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    }; // Clearing\n\n\n    this.getClearColor = function () {\n      return background.getClearColor();\n    };\n\n    this.setClearColor = function () {\n      background.setClearColor.apply(background, arguments);\n    };\n\n    this.getClearAlpha = function () {\n      return background.getClearAlpha();\n    };\n\n    this.setClearAlpha = function () {\n      background.setClearAlpha.apply(background, arguments);\n    };\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n      if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n      if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n      if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    }; //\n\n\n    this.dispose = function () {\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n      renderLists.dispose();\n      renderStates.dispose();\n      properties.dispose();\n      objects.dispose();\n      vr.dispose();\n      animation.stop();\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      console.log('THREE.WebGLRenderer: Context Lost.');\n      _isContextLost = true;\n    }\n\n    function onContextRestore()\n    /* event */\n    {\n      console.log('THREE.WebGLRenderer: Context Restored.');\n      _isContextLost = false;\n      initGLContext();\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReference(material);\n      properties.remove(material);\n    }\n\n    function releaseMaterialProgramReference(material) {\n      var programInfo = properties.get(material).program;\n      material.program = undefined;\n\n      if (programInfo !== undefined) {\n        programCache.releaseProgram(programInfo);\n      }\n    } // Buffer rendering\n\n\n    function renderObjectImmediate(object, program) {\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program);\n      });\n    }\n\n    this.renderBufferImmediate = function (object, program) {\n      state.initAttributes();\n      var buffers = properties.get(object);\n      if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n      if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n      if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n      if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n      var programAttributes = program.getAttributes();\n\n      if (object.hasPositions) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.position);\n\n        _gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasNormals) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.normal);\n\n        _gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasUvs) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.uv);\n\n        _gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\n      }\n\n      if (object.hasColors) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n        state.enableAttribute(programAttributes.color);\n\n        _gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n      }\n\n      state.disableUnusedAttributes();\n\n      _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n      object.count = 0;\n    };\n\n    this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n      var frontFaceCW = object.isMesh && object.normalMatrix.determinant() < 0;\n      state.setMaterial(material, frontFaceCW);\n      var program = setProgram(camera, fog, material, object);\n      var updateBuffers = false;\n\n      if (_currentGeometryProgram.geometry !== geometry.id || _currentGeometryProgram.program !== program.id || _currentGeometryProgram.wireframe !== (material.wireframe === true)) {\n        _currentGeometryProgram.geometry = geometry.id;\n        _currentGeometryProgram.program = program.id;\n        _currentGeometryProgram.wireframe = material.wireframe === true;\n        updateBuffers = true;\n      }\n\n      if (object.morphTargetInfluences) {\n        morphtargets.update(object, geometry, material, program);\n        updateBuffers = true;\n      } //\n\n\n      var index = geometry.index;\n      var position = geometry.attributes.position;\n      var rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        index = geometries.getWireframeAttribute(geometry);\n        rangeFactor = 2;\n      }\n\n      var attribute;\n      var renderer = bufferRenderer;\n\n      if (index !== null) {\n        attribute = attributes.get(index);\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(attribute);\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(material, program, geometry);\n\n        if (index !== null) {\n          _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, attribute.buffer);\n        }\n      } //\n\n\n      var dataCount = Infinity;\n\n      if (index !== null) {\n        dataCount = index.count;\n      } else if (position !== undefined) {\n        dataCount = position.count;\n      }\n\n      var rangeStart = geometry.drawRange.start * rangeFactor;\n      var rangeCount = geometry.drawRange.count * rangeFactor;\n      var groupStart = group !== null ? group.start * rangeFactor : 0;\n      var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n      var drawStart = Math.max(rangeStart, groupStart);\n      var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1);\n      if (drawCount === 0) return; //\n\n      if (object.isMesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(_gl.LINES);\n        } else {\n          switch (object.drawMode) {\n            case TrianglesDrawMode:\n              renderer.setMode(_gl.TRIANGLES);\n              break;\n\n            case TriangleStripDrawMode:\n              renderer.setMode(_gl.TRIANGLE_STRIP);\n              break;\n\n            case TriangleFanDrawMode:\n              renderer.setMode(_gl.TRIANGLE_FAN);\n              break;\n          }\n        }\n      } else if (object.isLine) {\n        var lineWidth = material.linewidth;\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object.isLineSegments) {\n          renderer.setMode(_gl.LINES);\n        } else if (object.isLineLoop) {\n          renderer.setMode(_gl.LINE_LOOP);\n        } else {\n          renderer.setMode(_gl.LINE_STRIP);\n        }\n      } else if (object.isPoints) {\n        renderer.setMode(_gl.POINTS);\n      } else if (object.isSprite) {\n        renderer.setMode(_gl.TRIANGLES);\n      }\n\n      if (geometry && geometry.isInstancedBufferGeometry) {\n        if (geometry.maxInstancedCount > 0) {\n          renderer.renderInstances(geometry, drawStart, drawCount);\n        }\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    };\n\n    function setupVertexAttributes(material, program, geometry) {\n      if (geometry && geometry.isInstancedBufferGeometry & !capabilities.isWebGL2) {\n        if (extensions.get('ANGLE_instanced_arrays') === null) {\n          console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      state.initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute !== undefined) {\n            var normalized = geometryAttribute.normalized;\n            var size = geometryAttribute.itemSize;\n            var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n            if (attribute === undefined) continue;\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            var bytesPerElement = attribute.bytesPerElement;\n\n            if (geometryAttribute.isInterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data && data.isInstancedInterleavedBuffer) {\n                state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n            } else {\n              if (geometryAttribute.isInstancedBufferAttribute) {\n                state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n            }\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var value = materialDefaultAttributeValues[name];\n\n            if (value !== undefined) {\n              switch (value.length) {\n                case 2:\n                  _gl.vertexAttrib2fv(programAttribute, value);\n\n                  break;\n\n                case 3:\n                  _gl.vertexAttrib3fv(programAttribute, value);\n\n                  break;\n\n                case 4:\n                  _gl.vertexAttrib4fv(programAttribute, value);\n\n                  break;\n\n                default:\n                  _gl.vertexAttrib1fv(programAttribute, value);\n\n              }\n            }\n          }\n        }\n      }\n\n      state.disableUnusedAttributes();\n    } // Compile\n\n\n    this.compile = function (scene, camera) {\n      currentRenderState = renderStates.get(scene, camera);\n      currentRenderState.init();\n      scene.traverse(function (object) {\n        if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        }\n      });\n      currentRenderState.setupLights(camera);\n      scene.traverse(function (object) {\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            for (var i = 0; i < object.material.length; i++) {\n              initMaterial(object.material[i], scene.fog, object);\n            }\n          } else {\n            initMaterial(object.material, scene.fog, object);\n          }\n        }\n      });\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time) {\n      if (vr.isPresenting()) return;\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n    if (typeof window !== 'undefined') animation.setContext(window);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n      vr.setAnimationLoop(callback);\n      animation.start();\n    }; // Rendering\n\n\n    this.render = function (scene, camera, renderTarget, forceClear) {\n      if (!(camera && camera.isCamera)) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      }\n\n      if (_isContextLost) return; // reset caching for this frame\n\n      _currentGeometryProgram.geometry = null;\n      _currentGeometryProgram.program = null;\n      _currentGeometryProgram.wireframe = false;\n      _currentMaterialId = -1;\n      _currentCamera = null; // update scene graph\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      if (vr.enabled) {\n        camera = vr.getCamera(camera);\n      } //\n\n\n      currentRenderState = renderStates.get(scene, camera);\n      currentRenderState.init();\n      scene.onBeforeRender(_this, scene, camera, renderTarget);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix);\n\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      currentRenderList = renderLists.get(scene, camera);\n      currentRenderList.init();\n      projectObject(scene, camera, _this.sortObjects);\n\n      if (_this.sortObjects === true) {\n        currentRenderList.sort();\n      } //\n\n\n      if (_clippingEnabled) _clipping.beginShadows();\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      shadowMap.render(shadowsArray, scene, camera);\n      currentRenderState.setupLights(camera);\n      if (_clippingEnabled) _clipping.endShadows(); //\n\n      if (this.info.autoReset) this.info.reset();\n\n      if (renderTarget === undefined) {\n        renderTarget = null;\n      }\n\n      this.setRenderTarget(renderTarget); //\n\n      background.render(currentRenderList, scene, camera, forceClear); // render scene\n\n      var opaqueObjects = currentRenderList.opaque;\n      var transparentObjects = currentRenderList.transparent;\n\n      if (scene.overrideMaterial) {\n        var overrideMaterial = scene.overrideMaterial;\n        if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera, overrideMaterial);\n        if (transparentObjects.length) renderObjects(transparentObjects, scene, camera, overrideMaterial);\n      } else {\n        // opaque pass (front-to-back order)\n        if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera); // transparent pass (back-to-front order)\n\n        if (transparentObjects.length) renderObjects(transparentObjects, scene, camera);\n      } // Generate mipmap if we're using any kind of mipmap filtering\n\n\n      if (renderTarget) {\n        textures.updateRenderTargetMipmap(renderTarget);\n      } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n      state.buffers.depth.setTest(true);\n      state.buffers.depth.setMask(true);\n      state.buffers.color.setMask(true);\n      state.setPolygonOffset(false);\n      scene.onAfterRender(_this, scene, camera);\n\n      if (vr.enabled) {\n        vr.submitFrame();\n      } // _gl.finish();\n\n\n      currentRenderList = null;\n      currentRenderState = null;\n    };\n    /*\n    // TODO Duplicated code (Frustum)\n    \tvar _sphere = new Sphere();\n    \tfunction isObjectViewable( object ) {\n    \t\tvar geometry = object.geometry;\n    \t\tif ( geometry.boundingSphere === null )\n    \t\tgeometry.computeBoundingSphere();\n    \t\t_sphere.copy( geometry.boundingSphere ).\n    \tapplyMatrix4( object.matrixWorld );\n    \t\treturn isSphereViewable( _sphere );\n    \t}\n    \tfunction isSpriteViewable( sprite ) {\n    \t\t_sphere.center.set( 0, 0, 0 );\n    \t_sphere.radius = 0.7071067811865476;\n    \t_sphere.applyMatrix4( sprite.matrixWorld );\n    \t\treturn isSphereViewable( _sphere );\n    \t}\n    \tfunction isSphereViewable( sphere ) {\n    \t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n    \t\tvar numPlanes = _clipping.numPlanes;\n    \t\tif ( numPlanes === 0 ) return true;\n    \t\tvar planes = _this.clippingPlanes,\n    \t\t\tcenter = sphere.center,\n    \t\tnegRad = - sphere.radius,\n    \t\ti = 0;\n    \t\tdo {\n    \t\t\t// out when deeper than radius in the negative halfspace\n    \t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n    \t\t} while ( ++ i !== numPlanes );\n    \t\treturn true;\n    \t}\n    */\n\n\n    function projectObject(object, camera, sortObjects) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible) {\n        if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        } else if (object.isSprite) {\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n            currentRenderList.push(object, geometry, material, _vector3.z, null);\n          }\n        } else if (object.isImmediateRenderObject) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          currentRenderList.push(object, null, object.material, _vector3.z, null);\n        } else if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.isSkinnedMesh) {\n            object.skeleton.update();\n          }\n\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (Array.isArray(material)) {\n              var groups = geometry.groups;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = material[group.materialIndex];\n\n                if (groupMaterial && groupMaterial.visible) {\n                  currentRenderList.push(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else if (material.visible) {\n              currentRenderList.push(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i], camera, sortObjects);\n      }\n    }\n\n    function renderObjects(renderList, scene, camera, overrideMaterial) {\n      for (var i = 0, l = renderList.length; i < l; i++) {\n        var renderItem = renderList[i];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n\n        if (camera.isArrayCamera) {\n          _currentArrayCamera = camera;\n          var cameras = camera.cameras;\n\n          for (var j = 0, jl = cameras.length; j < jl; j++) {\n            var camera2 = cameras[j];\n\n            if (object.layers.test(camera2.layers)) {\n              if ('viewport' in camera2) {\n                // XR\n                state.viewport(_currentViewport.copy(camera2.viewport));\n              } else {\n                var bounds = camera2.bounds;\n                var x = bounds.x * _width;\n                var y = bounds.y * _height;\n                var width = bounds.z * _width;\n                var height = bounds.w * _height;\n                state.viewport(_currentViewport.set(x, y, width, height).multiplyScalar(_pixelRatio));\n              }\n\n              currentRenderState.setupLights(camera2);\n              renderObject(object, scene, camera2, geometry, material, group);\n            }\n          }\n        } else {\n          _currentArrayCamera = null;\n          renderObject(object, scene, camera, geometry, material, group);\n        }\n      }\n    }\n\n    function renderObject(object, scene, camera, geometry, material, group) {\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\n      currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object.isImmediateRenderObject) {\n        state.setMaterial(material);\n        var program = setProgram(camera, scene.fog, material, object);\n        _currentGeometryProgram.geometry = null;\n        _currentGeometryProgram.program = null;\n        _currentGeometryProgram.wireframe = false;\n        renderObjectImmediate(object, program);\n      } else {\n        _this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n      }\n\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\n      currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n    }\n\n    function initMaterial(material, fog, object) {\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      var lightsHash = materialProperties.lightsHash;\n      var lightsStateHash = lights.state.hash;\n      var parameters = programCache.getParameters(material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object);\n      var code = programCache.getProgramCode(material, parameters);\n      var program = materialProperties.program;\n      var programChange = true;\n\n      if (program === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n      } else if (program.code !== code) {\n        // changed glsl or parameters\n        releaseMaterialProgramReference(material);\n      } else if (lightsHash.stateID !== lightsStateHash.stateID || lightsHash.directionalLength !== lightsStateHash.directionalLength || lightsHash.pointLength !== lightsStateHash.pointLength || lightsHash.spotLength !== lightsStateHash.spotLength || lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength || lightsHash.hemiLength !== lightsStateHash.hemiLength || lightsHash.shadowsLength !== lightsStateHash.shadowsLength) {\n        lightsHash.stateID = lightsStateHash.stateID;\n        lightsHash.directionalLength = lightsStateHash.directionalLength;\n        lightsHash.pointLength = lightsStateHash.pointLength;\n        lightsHash.spotLength = lightsStateHash.spotLength;\n        lightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n        lightsHash.hemiLength = lightsStateHash.hemiLength;\n        lightsHash.shadowsLength = lightsStateHash.shadowsLength;\n        programChange = false;\n      } else if (parameters.shaderID !== undefined) {\n        // same glsl and uniform list\n        return;\n      } else {\n        // only rebuild uniform list\n        programChange = false;\n      }\n\n      if (programChange) {\n        if (parameters.shaderID) {\n          var shader = ShaderLib[parameters.shaderID];\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: UniformsUtils.clone(shader.uniforms),\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader\n          };\n        } else {\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: material.uniforms,\n            vertexShader: material.vertexShader,\n            fragmentShader: material.fragmentShader\n          };\n        }\n\n        material.onBeforeCompile(materialProperties.shader, _this); // Computing code again as onBeforeCompile may have changed the shaders\n\n        code = programCache.getProgramCode(material, parameters);\n        program = programCache.acquireProgram(material, materialProperties.shader, parameters, code);\n        materialProperties.program = program;\n        material.program = program;\n      }\n\n      var programAttributes = program.getAttributes();\n\n      if (material.morphTargets) {\n        material.numSupportedMorphTargets = 0;\n\n        for (var i = 0; i < _this.maxMorphTargets; i++) {\n          if (programAttributes['morphTarget' + i] >= 0) {\n            material.numSupportedMorphTargets++;\n          }\n        }\n      }\n\n      if (material.morphNormals) {\n        material.numSupportedMorphNormals = 0;\n\n        for (var i = 0; i < _this.maxMorphNormals; i++) {\n          if (programAttributes['morphNormal' + i] >= 0) {\n            material.numSupportedMorphNormals++;\n          }\n        }\n      }\n\n      var uniforms = materialProperties.shader.uniforms;\n\n      if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n        materialProperties.numClippingPlanes = _clipping.numPlanes;\n        materialProperties.numIntersection = _clipping.numIntersection;\n        uniforms.clippingPlanes = _clipping.uniform;\n      }\n\n      materialProperties.fog = fog; // store the light setup it was created for\n\n      if (lightsHash === undefined) {\n        materialProperties.lightsHash = lightsHash = {};\n      }\n\n      lightsHash.stateID = lightsStateHash.stateID;\n      lightsHash.directionalLength = lightsStateHash.directionalLength;\n      lightsHash.pointLength = lightsStateHash.pointLength;\n      lightsHash.spotLength = lightsStateHash.spotLength;\n      lightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n      lightsHash.hemiLength = lightsStateHash.hemiLength;\n      lightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n      if (material.lights) {\n        // wire up the material to this renderer's lighting state\n        uniforms.ambientLightColor.value = lights.state.ambient;\n        uniforms.directionalLights.value = lights.state.directional;\n        uniforms.spotLights.value = lights.state.spot;\n        uniforms.rectAreaLights.value = lights.state.rectArea;\n        uniforms.pointLights.value = lights.state.point;\n        uniforms.hemisphereLights.value = lights.state.hemi;\n        uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n        uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n        uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n        uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n      }\n\n      var progUniforms = materialProperties.program.getUniforms(),\n          uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.uniformsList = uniformsList;\n    }\n\n    function setProgram(camera, fog, material, object) {\n      _usedTextureUnits = 0;\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var lightsHash = materialProperties.lightsHash;\n      var lightsStateHash = lights.state.hash;\n\n      if (_clippingEnabled) {\n        if (_localClippingEnabled || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          _clipping.setState(material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache);\n        }\n      }\n\n      if (material.needsUpdate === false) {\n        if (materialProperties.program === undefined) {\n          material.needsUpdate = true;\n        } else if (material.fog && materialProperties.fog !== fog) {\n          material.needsUpdate = true;\n        } else if (material.lights && (lightsHash.stateID !== lightsStateHash.stateID || lightsHash.directionalLength !== lightsStateHash.directionalLength || lightsHash.pointLength !== lightsStateHash.pointLength || lightsHash.spotLength !== lightsStateHash.spotLength || lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength || lightsHash.hemiLength !== lightsStateHash.hemiLength || lightsHash.shadowsLength !== lightsStateHash.shadowsLength)) {\n          material.needsUpdate = true;\n        } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection)) {\n          material.needsUpdate = true;\n        }\n      }\n\n      if (material.needsUpdate) {\n        initMaterial(material, fog, object);\n        material.needsUpdate = false;\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var program = materialProperties.program,\n          p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.shader.uniforms;\n\n      if (state.useProgram(program.program)) {\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || _currentCamera !== camera) {\n        p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        }\n\n        if (_currentCamera !== camera) {\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning) {\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n        }\n      } // skinning uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone texture must go before other textures\n      // not sure why, but otherwise weird things happen\n\n\n      if (material.skinning) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          var bones = skeleton.bones;\n\n          if (capabilities.floatVertexTextures) {\n            if (skeleton.boneTexture === undefined) {\n              // layout (1 matrix = 4 pixels)\n              //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n              //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n              //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n              //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n              //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n              var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n              size = _Math.ceilPowerOfTwo(size);\n              size = Math.max(size, 4);\n              var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n              boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n              var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n              boneTexture.needsUpdate = true;\n              skeleton.boneMatrices = boneMatrices;\n              skeleton.boneTexture = boneTexture;\n              skeleton.boneTextureSize = size;\n            }\n\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture);\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (refreshMaterial) {\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n        p_uniforms.setValue(_gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint);\n\n        if (material.lights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          refreshUniformsFog(m_uniforms, fog);\n        }\n\n        if (material.isMeshBasicMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n        } else if (material.isMeshLambertMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsLambert(m_uniforms, material);\n        } else if (material.isMeshPhongMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n\n          if (material.isMeshToonMaterial) {\n            refreshUniformsToon(m_uniforms, material);\n          } else {\n            refreshUniformsPhong(m_uniforms, material);\n          }\n        } else if (material.isMeshStandardMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n\n          if (material.isMeshPhysicalMaterial) {\n            refreshUniformsPhysical(m_uniforms, material);\n          } else {\n            refreshUniformsStandard(m_uniforms, material);\n          }\n        } else if (material.isMeshMatcapMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsMatcap(m_uniforms, material);\n        } else if (material.isMeshDepthMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsDepth(m_uniforms, material);\n        } else if (material.isMeshDistanceMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsDistance(m_uniforms, material);\n        } else if (material.isMeshNormalMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsNormal(m_uniforms, material);\n        } else if (material.isLineBasicMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n\n          if (material.isLineDashedMaterial) {\n            refreshUniformsDash(m_uniforms, material);\n          }\n        } else if (material.isPointsMaterial) {\n          refreshUniformsPoints(m_uniforms, material);\n        } else if (material.isSpriteMaterial) {\n          refreshUniformsSprites(m_uniforms, material);\n        } else if (material.isShadowMaterial) {\n          m_uniforms.color.value = material.color;\n          m_uniforms.opacity.value = material.opacity;\n        } // RectAreaLight Texture\n        // TODO (mrdoob): Find a nicer implementation\n\n\n        if (m_uniforms.ltc_1 !== undefined) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n        if (m_uniforms.ltc_2 !== undefined) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n      }\n\n      if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n        material.uniformsNeedUpdate = false;\n      }\n\n      if (material.isSpriteMaterial) {\n        p_uniforms.setValue(_gl, 'center', object.center);\n      } // common matrices\n\n\n      p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n      p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n      return program;\n    } // Uniforms (refresh uniforms objects)\n\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n\n      if (material.color) {\n        uniforms.diffuse.value = material.color;\n      }\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.specularMap) {\n        uniforms.specularMap.value = material.specularMap;\n      }\n\n      if (material.envMap) {\n        uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n        //  WebGLRenderTargetCube will be flipped for backwards compatibility\n        //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n        // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n        uniforms.flipEnvMap.value = !(material.envMap && material.envMap.isCubeTexture) ? 1 : -1;\n        uniforms.reflectivity.value = material.reflectivity;\n        uniforms.refractionRatio.value = material.refractionRatio;\n        uniforms.maxMipLevel.value = properties.get(material.envMap).__maxMipLevel;\n      }\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. normal map\n      // 4. bump map\n      // 5. alpha map\n      // 6. emissive map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * _pixelRatio;\n      uniforms.scale.value = _height * 0.5;\n      uniforms.map.value = material.map;\n\n      if (material.map !== null) {\n        if (material.map.matrixAutoUpdate === true) {\n          material.map.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(material.map.matrix);\n      }\n    }\n\n    function refreshUniformsSprites(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n      uniforms.rotation.value = material.rotation;\n      uniforms.map.value = material.map;\n\n      if (material.map !== null) {\n        if (material.map.matrixAutoUpdate === true) {\n          material.map.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(material.map.matrix);\n      }\n    }\n\n    function refreshUniformsFog(uniforms, fog) {\n      uniforms.fogColor.value = fog.color;\n\n      if (fog.isFog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog.isFogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value = material.specular;\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsToon(uniforms, material) {\n      refreshUniformsPhong(uniforms, material);\n\n      if (material.gradientMap) {\n        uniforms.gradientMap.value = material.gradientMap;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      if (material.envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material) {\n      refreshUniformsStandard(uniforms, material);\n      uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n      uniforms.clearCoat.value = material.clearCoat;\n      uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n    }\n\n    function refreshUniformsMatcap(uniforms, material) {\n      if (material.matcap) {\n        uniforms.matcap.value = material.matcap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDepth(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDistance(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      uniforms.referencePosition.value.copy(material.referencePosition);\n      uniforms.nearDistance.value = material.nearDistance;\n      uniforms.farDistance.value = material.farDistance;\n    }\n\n    function refreshUniformsNormal(uniforms, material) {\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.rectAreaLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    } // Textures\n\n\n    function allocTextureUnit() {\n      var textureUnit = _usedTextureUnits;\n\n      if (textureUnit >= capabilities.maxTextures) {\n        console.warn('THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n      }\n\n      _usedTextureUnits += 1;\n      return textureUnit;\n    }\n\n    this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D;\n\n    this.setTexture2D = function () {\n      var warned = false; // backwards compatibility: peel texture.texture\n\n      return function setTexture2D(texture, slot) {\n        if (texture && texture.isWebGLRenderTarget) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTexture3D = function () {\n      // backwards compatibility: peel texture.texture\n      return function setTexture3D(texture, slot) {\n        textures.setTexture3D(texture, slot);\n      };\n    }();\n\n    this.setTexture = function () {\n      var warned = false;\n      return function setTexture(texture, slot) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n          warned = true;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTextureCube = function () {\n      var warned = false;\n      return function setTextureCube(texture, slot) {\n        // backwards compatibility: peel texture.texture\n        if (texture && texture.isWebGLRenderTargetCube) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n        // TODO: unify these code paths\n\n\n        if (texture && texture.isCubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n          // CompressedTexture can have Array in image :/\n          // this function alone should take care of cube textures\n          textures.setTextureCube(texture, slot);\n        } else {\n          // assumed: texture property of THREE.WebGLRenderTargetCube\n          textures.setTextureCubeDynamic(texture, slot);\n        }\n      };\n    }(); //\n\n\n    this.setFramebuffer = function (value) {\n      _framebuffer = value;\n    };\n\n    this.getRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget) {\n      _currentRenderTarget = renderTarget;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var framebuffer = _framebuffer;\n      var isCube = false;\n\n      if (renderTarget) {\n        var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n        if (renderTarget.isWebGLRenderTargetCube) {\n          framebuffer = __webglFramebuffer[renderTarget.activeCubeFace];\n          isCube = true;\n        } else {\n          framebuffer = __webglFramebuffer;\n        }\n\n        _currentViewport.copy(renderTarget.viewport);\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n      } else {\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n        _currentScissorTest = _scissorTest;\n      }\n\n      if (_currentFramebuffer !== framebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        _currentFramebuffer = framebuffer;\n      }\n\n      state.viewport(_currentViewport);\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n      }\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (framebuffer) {\n        var restore = false;\n\n        if (framebuffer !== _currentFramebuffer) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n          restore = true;\n        }\n\n        try {\n          var texture = renderTarget.texture;\n          var textureFormat = texture.format;\n          var textureType = texture.type;\n\n          if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // IE11, Edge and Chrome Mac < 52 (#9513)\n          !(textureType === FloatType && (capabilities.isWebGL2 || extensions.get('OES_texture_float') || extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n          !(textureType === HalfFloatType && (capabilities.isWebGL2 ? extensions.get('EXT_color_buffer_float') : extensions.get('EXT_color_buffer_half_float')))) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          if (restore) {\n            _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n          }\n        }\n      }\n    };\n\n    this.copyFramebufferToTexture = function (position, texture, level) {\n      var width = texture.image.width;\n      var height = texture.image.height;\n      var glFormat = utils.convert(texture.format);\n      this.setTexture2D(texture, 0);\n\n      _gl.copyTexImage2D(_gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0);\n    };\n\n    this.copyTextureToTexture = function (position, srcTexture, dstTexture, level) {\n      var width = srcTexture.image.width;\n      var height = srcTexture.image.height;\n      var glFormat = utils.convert(dstTexture.format);\n      var glType = utils.convert(dstTexture.type);\n      this.setTexture2D(dstTexture, 0);\n\n      if (srcTexture.isDataTexture) {\n        _gl.texSubImage2D(_gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n      } else {\n        _gl.texSubImage2D(_gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image);\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function FogExp2(color, density) {\n    this.name = '';\n    this.color = new Color(color);\n    this.density = density !== undefined ? density : 0.00025;\n  }\n\n  FogExp2.prototype.isFogExp2 = true;\n\n  FogExp2.prototype.clone = function () {\n    return new FogExp2(this.color, this.density);\n  };\n\n  FogExp2.prototype.toJSON = function ()\n  /* meta */\n  {\n    return {\n      type: 'FogExp2',\n      color: this.color.getHex(),\n      density: this.density\n    };\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Fog(color, near, far) {\n    this.name = '';\n    this.color = new Color(color);\n    this.near = near !== undefined ? near : 1;\n    this.far = far !== undefined ? far : 1000;\n  }\n\n  Fog.prototype.isFog = true;\n\n  Fog.prototype.clone = function () {\n    return new Fog(this.color, this.near, this.far);\n  };\n\n  Fog.prototype.toJSON = function ()\n  /* meta */\n  {\n    return {\n      type: 'Fog',\n      color: this.color.getHex(),\n      near: this.near,\n      far: this.far\n    };\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Scene() {\n    Object3D.call(this);\n    this.type = 'Scene';\n    this.background = null;\n    this.fog = null;\n    this.overrideMaterial = null;\n    this.autoUpdate = true; // checked by the renderer\n  }\n\n  Scene.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Scene,\n    copy: function (source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      if (source.background !== null) this.background = source.background.clone();\n      if (source.fog !== null) this.fog = source.fog.clone();\n      if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n      this.autoUpdate = source.autoUpdate;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      if (this.background !== null) data.object.background = this.background.toJSON(meta);\n      if (this.fog !== null) data.object.fog = this.fog.toJSON();\n      return data;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBuffer(array, stride) {\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n    set: function (value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    isInterleavedBuffer: true,\n    onUploadCallback: function () {},\n    setArray: function (array) {\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.count = array !== undefined ? array.length / this.stride : 0;\n      this.array = array;\n      return this;\n    },\n    setDynamic: function (value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function (source) {\n      this.array = new source.array.constructor(source.array);\n      this.count = source.count;\n      this.stride = source.stride;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    onUpload: function (callback) {\n      this.onUploadCallback = callback;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n\n  Object.defineProperties(InterleavedBufferAttribute.prototype, {\n    count: {\n      get: function () {\n        return this.data.count;\n      }\n    },\n    array: {\n      get: function () {\n        return this.data.array;\n      }\n    }\n  });\n  Object.assign(InterleavedBufferAttribute.prototype, {\n    isInterleavedBufferAttribute: true,\n    setX: function (index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    },\n    setY: function (index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    },\n    setZ: function (index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    },\n    setW: function (index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    },\n    getX: function (index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    },\n    getY: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    },\n    getZ: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    },\n    getW: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    },\n    setXY: function (index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  map: new THREE.Texture( <Image> ),\n   *  rotation: <float>,\n   *  sizeAttenuation: <bool>\n   * }\n   */\n\n  function SpriteMaterial(parameters) {\n    Material.call(this);\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.rotation = 0;\n    this.sizeAttenuation = true;\n    this.lights = false;\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  SpriteMaterial.prototype = Object.create(Material.prototype);\n  SpriteMaterial.prototype.constructor = SpriteMaterial;\n  SpriteMaterial.prototype.isSpriteMaterial = true;\n\n  SpriteMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.rotation = source.rotation;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  };\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  var geometry;\n\n  function Sprite(material) {\n    Object3D.call(this);\n    this.type = 'Sprite';\n\n    if (geometry === undefined) {\n      geometry = new BufferGeometry();\n      var float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n      var interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n      geometry.setIndex([0, 1, 2, 0, 2, 3]);\n      geometry.addAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n      geometry.addAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n    }\n\n    this.geometry = geometry;\n    this.material = material !== undefined ? material : new SpriteMaterial();\n    this.center = new Vector2(0.5, 0.5);\n  }\n\n  Sprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Sprite,\n    isSprite: true,\n    raycast: function () {\n      var intersectPoint = new Vector3();\n      var worldScale = new Vector3();\n      var mvPosition = new Vector3();\n      var alignedPosition = new Vector2();\n      var rotatedPosition = new Vector2();\n      var viewWorldMatrix = new Matrix4();\n      var vA = new Vector3();\n      var vB = new Vector3();\n      var vC = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n        // compute position in camera space\n        alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n        if (sin !== undefined) {\n          rotatedPosition.x = cos * alignedPosition.x - sin * alignedPosition.y;\n          rotatedPosition.y = sin * alignedPosition.x + cos * alignedPosition.y;\n        } else {\n          rotatedPosition.copy(alignedPosition);\n        }\n\n        vertexPosition.copy(mvPosition);\n        vertexPosition.x += rotatedPosition.x;\n        vertexPosition.y += rotatedPosition.y; // transform to world space\n\n        vertexPosition.applyMatrix4(viewWorldMatrix);\n      }\n\n      return function raycast(raycaster, intersects) {\n        worldScale.setFromMatrixScale(this.matrixWorld);\n        viewWorldMatrix.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld);\n        mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n        var rotation = this.material.rotation;\n        var sin, cos;\n\n        if (rotation !== 0) {\n          cos = Math.cos(rotation);\n          sin = Math.sin(rotation);\n        }\n\n        var center = this.center;\n        transformVertex(vA.set(-0.5, -0.5, 0), mvPosition, center, worldScale, sin, cos);\n        transformVertex(vB.set(0.5, -0.5, 0), mvPosition, center, worldScale, sin, cos);\n        transformVertex(vC.set(0.5, 0.5, 0), mvPosition, center, worldScale, sin, cos);\n        uvA.set(0, 0);\n        uvB.set(1, 0);\n        uvC.set(1, 1); // check first triangle\n\n        var intersect = raycaster.ray.intersectTriangle(vA, vB, vC, false, intersectPoint);\n\n        if (intersect === null) {\n          // check second triangle\n          transformVertex(vB.set(-0.5, 0.5, 0), mvPosition, center, worldScale, sin, cos);\n          uvB.set(0, 1);\n          intersect = raycaster.ray.intersectTriangle(vA, vC, vB, false, intersectPoint);\n\n          if (intersect === null) {\n            return;\n          }\n        }\n\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          point: intersectPoint.clone(),\n          uv: Triangle.getUV(intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2()),\n          face: null,\n          object: this\n        });\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.material).copy(this);\n    },\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      if (source.center !== undefined) this.center.copy(source.center);\n      return this;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LOD() {\n    Object3D.call(this);\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      }\n    });\n  }\n\n  LOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: LOD,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source, false);\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      return this;\n    },\n    addLevel: function (object, distance) {\n      if (distance === undefined) distance = 0;\n      distance = Math.abs(distance);\n      var levels = this.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n    },\n    getObjectForDistance: function (distance) {\n      var levels = this.levels;\n\n      for (var i = 1, l = levels.length; i < l; i++) {\n        if (distance < levels[i].distance) {\n          break;\n        }\n      }\n\n      return levels[i - 1].object;\n    },\n    raycast: function () {\n      var matrixPosition = new Vector3();\n      return function raycast(raycaster, intersects) {\n        matrixPosition.setFromMatrixPosition(this.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      };\n    }(),\n    update: function () {\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function update(camera) {\n        var levels = this.levels;\n\n        if (levels.length > 1) {\n          v1.setFromMatrixPosition(camera.matrixWorld);\n          v2.setFromMatrixPosition(this.matrixWorld);\n          var distance = v1.distanceTo(v2);\n          levels[0].object.visible = true;\n\n          for (var i = 1, l = levels.length; i < l; i++) {\n            if (distance >= levels[i].distance) {\n              levels[i - 1].object.visible = false;\n              levels[i].object.visible = true;\n            } else {\n              break;\n            }\n          }\n\n          for (; i < l; i++) {\n            levels[i].object.visible = false;\n          }\n        }\n      };\n    }(),\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author michael guerrero / http://realitymeltdown.com\n   * @author ikerr / http://verold.com\n   */\n\n  function Skeleton(bones, boneInverses) {\n    // copy the bone array\n    bones = bones || [];\n    this.bones = bones.slice(0);\n    this.boneMatrices = new Float32Array(this.bones.length * 16); // use the supplied bone inverses or calculate the inverses\n\n    if (boneInverses === undefined) {\n      this.calculateInverses();\n    } else {\n      if (this.bones.length === boneInverses.length) {\n        this.boneInverses = boneInverses.slice(0);\n      } else {\n        console.warn('THREE.Skeleton boneInverses is the wrong length.');\n        this.boneInverses = [];\n\n        for (var i = 0, il = this.bones.length; i < il; i++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n\n  Object.assign(Skeleton.prototype, {\n    calculateInverses: function () {\n      this.boneInverses = [];\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var inverse = new Matrix4();\n\n        if (this.bones[i]) {\n          inverse.getInverse(this.bones[i].matrixWorld);\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    },\n    pose: function () {\n      var bone, i, il; // recover the bind-time world matrices\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          bone.matrixWorld.getInverse(this.boneInverses[i]);\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          if (bone.parent && bone.parent.isBone) {\n            bone.matrix.getInverse(bone.parent.matrixWorld);\n            bone.matrix.multiply(bone.matrixWorld);\n          } else {\n            bone.matrix.copy(bone.matrixWorld);\n          }\n\n          bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n        }\n      }\n    },\n    update: function () {\n      var offsetMatrix = new Matrix4();\n      var identityMatrix = new Matrix4();\n      return function update() {\n        var bones = this.bones;\n        var boneInverses = this.boneInverses;\n        var boneMatrices = this.boneMatrices;\n        var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n        for (var i = 0, il = bones.length; i < il; i++) {\n          // compute the offset between the current and the original transform\n          var matrix = bones[i] ? bones[i].matrixWorld : identityMatrix;\n          offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n          offsetMatrix.toArray(boneMatrices, i * 16);\n        }\n\n        if (boneTexture !== undefined) {\n          boneTexture.needsUpdate = true;\n        }\n      };\n    }(),\n    clone: function () {\n      return new Skeleton(this.bones, this.boneInverses);\n    },\n    getBoneByName: function (name) {\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone.name === name) {\n          return bone;\n        }\n      }\n\n      return undefined;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function Bone() {\n    Object3D.call(this);\n    this.type = 'Bone';\n  }\n\n  Bone.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Bone,\n    isBone: true\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function SkinnedMesh(geometry, material) {\n    Mesh.call(this, geometry, material);\n    this.type = 'SkinnedMesh';\n    this.bindMode = 'attached';\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n    var bones = this.initBones();\n    var skeleton = new Skeleton(bones);\n    this.bind(skeleton, this.matrixWorld);\n    this.normalizeSkinWeights();\n  }\n\n  SkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: SkinnedMesh,\n    isSkinnedMesh: true,\n    initBones: function () {\n      var bones = [],\n          bone,\n          gbone;\n      var i, il;\n\n      if (this.geometry && this.geometry.bones !== undefined) {\n        // first, create array of 'Bone' objects from geometry data\n        for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n          gbone = this.geometry.bones[i]; // create new 'Bone' object\n\n          bone = new Bone();\n          bones.push(bone); // apply values\n\n          bone.name = gbone.name;\n          bone.position.fromArray(gbone.pos);\n          bone.quaternion.fromArray(gbone.rotq);\n          if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n        } // second, create bone hierarchy\n\n\n        for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n          gbone = this.geometry.bones[i];\n\n          if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n            // subsequent bones in the hierarchy\n            bones[gbone.parent].add(bones[i]);\n          } else {\n            // topmost bone, immediate child of the skinned mesh\n            this.add(bones[i]);\n          }\n        }\n      } // now the bones are part of the scene graph and children of the skinned mesh.\n      // let's update the corresponding matrices\n\n\n      this.updateMatrixWorld(true);\n      return bones;\n    },\n    bind: function (skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.getInverse(bindMatrix);\n    },\n    pose: function () {\n      this.skeleton.pose();\n    },\n    normalizeSkinWeights: function () {\n      var scale, i;\n\n      if (this.geometry && this.geometry.isGeometry) {\n        for (i = 0; i < this.geometry.skinWeights.length; i++) {\n          var sw = this.geometry.skinWeights[i];\n          scale = 1.0 / sw.manhattanLength();\n\n          if (scale !== Infinity) {\n            sw.multiplyScalar(scale);\n          } else {\n            sw.set(1, 0, 0, 0); // do something reasonable\n          }\n        }\n      } else if (this.geometry && this.geometry.isBufferGeometry) {\n        var vec = new Vector4();\n        var skinWeight = this.geometry.attributes.skinWeight;\n\n        for (i = 0; i < skinWeight.count; i++) {\n          vec.x = skinWeight.getX(i);\n          vec.y = skinWeight.getY(i);\n          vec.z = skinWeight.getZ(i);\n          vec.w = skinWeight.getW(i);\n          scale = 1.0 / vec.manhattanLength();\n\n          if (scale !== Infinity) {\n            vec.multiplyScalar(scale);\n          } else {\n            vec.set(1, 0, 0, 0); // do something reasonable\n          }\n\n          skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n        }\n      }\n    },\n    updateMatrixWorld: function (force) {\n      Mesh.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.bindMode === 'attached') {\n        this.bindMatrixInverse.getInverse(this.matrixWorld);\n      } else if (this.bindMode === 'detached') {\n        this.bindMatrixInverse.getInverse(this.bindMatrix);\n      } else {\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *  linecap: \"round\",\n   *  linejoin: \"round\"\n   * }\n   */\n\n  function LineBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  LineBasicMaterial.prototype = Object.create(Material.prototype);\n  LineBasicMaterial.prototype.constructor = LineBasicMaterial;\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n  LineBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Line(geometry, material, mode) {\n    if (mode === 1) {\n      console.error('THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.');\n    }\n\n    Object3D.call(this);\n    this.type = 'Line';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new LineBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Line.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Line,\n    isLine: true,\n    computeLineDistances: function () {\n      var start = new Vector3();\n      var end = new Vector3();\n      return function computeLineDistances() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          // we assume non-indexed geometry\n          if (geometry.index === null) {\n            var positionAttribute = geometry.attributes.position;\n            var lineDistances = [0];\n\n            for (var i = 1, l = positionAttribute.count; i < l; i++) {\n              start.fromBufferAttribute(positionAttribute, i - 1);\n              end.fromBufferAttribute(positionAttribute, i);\n              lineDistances[i] = lineDistances[i - 1];\n              lineDistances[i] += start.distanceTo(end);\n            }\n\n            geometry.addAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n          } else {\n            console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var lineDistances = geometry.lineDistances;\n          lineDistances[0] = 0;\n\n          for (var i = 1, l = vertices.length; i < l; i++) {\n            lineDistances[i] = lineDistances[i - 1];\n            lineDistances[i] += vertices[i - 1].distanceTo(vertices[i]);\n          }\n        }\n\n        return this;\n      };\n    }(),\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      return function raycast(raycaster, intersects) {\n        var precision = raycaster.linePrecision;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        sphere.radius += precision;\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var localPrecision = precision / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localPrecisionSq = localPrecision * localPrecision;\n        var vStart = new Vector3();\n        var vEnd = new Vector3();\n        var interSegment = new Vector3();\n        var interRay = new Vector3();\n        var step = this && this.isLineSegments ? 2 : 1;\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, l = indices.length - 1; i < l; i += step) {\n              var a = indices[i];\n              var b = indices[i + 1];\n              vStart.fromArray(positions, a * 3);\n              vEnd.fromArray(positions, b * 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > localPrecisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n              vStart.fromArray(positions, 3 * i);\n              vEnd.fromArray(positions, 3 * i + 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > localPrecisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var nbVertices = vertices.length;\n\n          for (var i = 0; i < nbVertices - 1; i += step) {\n            var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n            if (distSq > localPrecisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LineSegments(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineSegments';\n  }\n\n  LineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineSegments,\n    isLineSegments: true,\n    computeLineDistances: function () {\n      var start = new Vector3();\n      var end = new Vector3();\n      return function computeLineDistances() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          // we assume non-indexed geometry\n          if (geometry.index === null) {\n            var positionAttribute = geometry.attributes.position;\n            var lineDistances = [];\n\n            for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n              start.fromBufferAttribute(positionAttribute, i);\n              end.fromBufferAttribute(positionAttribute, i + 1);\n              lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n              lineDistances[i + 1] = lineDistances[i] + start.distanceTo(end);\n            }\n\n            geometry.addAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n          } else {\n            console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var lineDistances = geometry.lineDistances;\n\n          for (var i = 0, l = vertices.length; i < l; i += 2) {\n            start.copy(vertices[i]);\n            end.copy(vertices[i + 1]);\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n            lineDistances[i + 1] = lineDistances[i] + start.distanceTo(end);\n          }\n        }\n\n        return this;\n      };\n    }()\n  });\n  /**\n   * @author mgreter / http://github.com/mgreter\n   */\n\n  function LineLoop(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineLoop';\n  }\n\n  LineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineLoop,\n    isLineLoop: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  size: <float>,\n   *  sizeAttenuation: <bool>\n   *\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function PointsMaterial(parameters) {\n    Material.call(this);\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  PointsMaterial.prototype = Object.create(Material.prototype);\n  PointsMaterial.prototype.constructor = PointsMaterial;\n  PointsMaterial.prototype.isPointsMaterial = true;\n\n  PointsMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Points(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Points';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new PointsMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Points.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Points,\n    isPoints: true,\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      return function raycast(raycaster, intersects) {\n        var object = this;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld;\n        var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        sphere.radius += threshold;\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localThresholdSq = localThreshold * localThreshold;\n        var position = new Vector3();\n        var intersectPoint = new Vector3();\n\n        function testPoint(point, index) {\n          var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n          if (rayPointDistanceSq < localThresholdSq) {\n            ray.closestPointToPoint(point, intersectPoint);\n            intersectPoint.applyMatrix4(matrixWorld);\n            var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n            if (distance < raycaster.near || distance > raycaster.far) return;\n            intersects.push({\n              distance: distance,\n              distanceToRay: Math.sqrt(rayPointDistanceSq),\n              point: intersectPoint.clone(),\n              index: index,\n              face: null,\n              object: object\n            });\n          }\n        }\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, il = indices.length; i < il; i++) {\n              var a = indices[i];\n              position.fromArray(positions, a * 3);\n              testPoint(position, a);\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3; i < l; i++) {\n              position.fromArray(positions, i * 3);\n              testPoint(position, i);\n            }\n          }\n        } else {\n          var vertices = geometry.vertices;\n\n          for (var i = 0, l = vertices.length; i < l; i++) {\n            testPoint(vertices[i], i);\n          }\n        }\n      };\n    }(),\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.generateMipmaps = false;\n  }\n\n  VideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n    constructor: VideoTexture,\n    isVideoTexture: true,\n    update: function () {\n      var video = this.image;\n\n      if (video.readyState >= video.HAVE_CURRENT_DATA) {\n        this.needsUpdate = true;\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n\n  CompressedTexture.prototype = Object.create(Texture.prototype);\n  CompressedTexture.prototype.constructor = CompressedTexture;\n  CompressedTexture.prototype.isCompressedTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  }\n\n  CanvasTexture.prototype = Object.create(Texture.prototype);\n  CanvasTexture.prototype.constructor = CanvasTexture;\n  CanvasTexture.prototype.isCanvasTexture = true;\n  /**\n   * @author Matt DesLauriers / @mattdesl\n   * @author atix / arthursilber.de\n   */\n\n  function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n\n    if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n    if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  }\n\n  DepthTexture.prototype = Object.create(Texture.prototype);\n  DepthTexture.prototype.constructor = DepthTexture;\n  DepthTexture.prototype.isDepthTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  function WireframeGeometry(geometry) {\n    BufferGeometry.call(this);\n    this.type = 'WireframeGeometry'; // buffer\n\n    var vertices = []; // helper variables\n\n    var i, j, l, o, ol;\n    var edge = [0, 0],\n        edges = {},\n        e,\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c'];\n    var vertex; // different logic for Geometry and BufferGeometry\n\n    if (geometry && geometry.isGeometry) {\n      // create a data structure that contains all edges without duplicates\n      var faces = geometry.faces;\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (j = 0; j < 3; j++) {\n          edge1 = face[keys[j]];\n          edge2 = face[keys[(j + 1) % 3]];\n          edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n          edge[1] = Math.max(edge1, edge2);\n          key = edge[0] + ',' + edge[1];\n\n          if (edges[key] === undefined) {\n            edges[key] = {\n              index1: edge[0],\n              index2: edge[1]\n            };\n          }\n        }\n      } // generate vertices\n\n\n      for (key in edges) {\n        e = edges[key];\n        vertex = geometry.vertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = geometry.vertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } else if (geometry && geometry.isBufferGeometry) {\n      var position, indices, groups;\n      var group, start, count;\n      var index1, index2;\n      vertex = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n        position = geometry.attributes.position;\n        indices = geometry.index;\n        groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        } // create a data structure that contains all eges without duplicates\n\n\n        for (o = 0, ol = groups.length; o < ol; ++o) {\n          group = groups[o];\n          start = group.start;\n          count = group.count;\n\n          for (i = start, l = start + count; i < l; i += 3) {\n            for (j = 0; j < 3; j++) {\n              edge1 = indices.getX(i + j);\n              edge2 = indices.getX(i + (j + 1) % 3);\n              edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n              edge[1] = Math.max(edge1, edge2);\n              key = edge[0] + ',' + edge[1];\n\n              if (edges[key] === undefined) {\n                edges[key] = {\n                  index1: edge[0],\n                  index2: edge[1]\n                };\n              }\n            }\n          }\n        } // generate vertices\n\n\n        for (key in edges) {\n          e = edges[key];\n          vertex.fromBufferAttribute(position, e.index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          vertex.fromBufferAttribute(position, e.index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      } else {\n        // non-indexed BufferGeometry\n        position = geometry.attributes.position;\n\n        for (i = 0, l = position.count / 3; i < l; i++) {\n          for (j = 0; j < 3; j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n            index1 = 3 * i + j;\n            vertex.fromBufferAttribute(position, index1);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n            index2 = 3 * i + (j + 1) % 3;\n            vertex.fromBufferAttribute(position, index2);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n          }\n        }\n      }\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  WireframeGeometry.prototype = Object.create(BufferGeometry.prototype);\n  WireframeGeometry.prototype.constructor = WireframeGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Parametric Surfaces Geometry\n   * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n   */\n  // ParametricGeometry\n\n  function ParametricGeometry(func, slices, stacks) {\n    Geometry.call(this);\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n    this.mergeVertices();\n  }\n\n  ParametricGeometry.prototype = Object.create(Geometry.prototype);\n  ParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry\n\n  function ParametricBufferGeometry(func, slices, stacks) {\n    BufferGeometry.call(this);\n    this.type = 'ParametricBufferGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    }; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var EPS = 0.00001;\n    var normal = new Vector3();\n    var p0 = new Vector3(),\n        p1 = new Vector3();\n    var pu = new Vector3(),\n        pv = new Vector3();\n    var i, j;\n\n    if (func.length < 3) {\n      console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n    } // generate vertices, normals and uvs\n\n\n    var sliceCount = slices + 1;\n\n    for (i = 0; i <= stacks; i++) {\n      var v = i / stacks;\n\n      for (j = 0; j <= slices; j++) {\n        var u = j / slices; // vertex\n\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z); // normal\n        // approximate tangent vectors via finite differences\n\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        } // cross product of tangent vectors returns surface normal\n\n\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, v);\n      }\n    } // generate indices\n\n\n    for (i = 0; i < stacks; i++) {\n      for (j = 0; j < slices; j++) {\n        var a = i * sliceCount + j;\n        var b = i * sliceCount + j + 1;\n        var c = (i + 1) * sliceCount + j + 1;\n        var d = (i + 1) * sliceCount + j; // faces one and two\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  ParametricBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n  /**\n   * @author clockworkgeek / https://github.com/clockworkgeek\n   * @author timothypratley / https://github.com/timothypratley\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PolyhedronGeometry\n\n  function PolyhedronGeometry(vertices, indices, radius, detail) {\n    Geometry.call(this);\n    this.type = 'PolyhedronGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n    this.mergeVertices();\n  }\n\n  PolyhedronGeometry.prototype = Object.create(Geometry.prototype);\n  PolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry\n\n  function PolyhedronBufferGeometry(vertices, indices, radius, detail) {\n    BufferGeometry.call(this);\n    this.type = 'PolyhedronBufferGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    radius = radius || 1;\n    detail = detail || 0; // default buffer data\n\n    var vertexBuffer = [];\n    var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n    subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n    appplyRadius(radius); // finally, create the uv data\n\n    generateUVs(); // build non-indexed geometry\n\n    this.addAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n    if (detail === 0) {\n      this.computeVertexNormals(); // flat normals\n    } else {\n      this.normalizeNormals(); // smooth normals\n    } // helper functions\n\n\n    function subdivide(detail) {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n      for (var i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n\n    function subdivideFace(a, b, c, detail) {\n      var cols = Math.pow(2, detail); // we use this multidimensional array as a data structure for creating the subdivision\n\n      var v = [];\n      var i, j; // construct all of the vertices for this subdivision\n\n      for (i = 0; i <= cols; i++) {\n        v[i] = [];\n        var aj = a.clone().lerp(c, i / cols);\n        var bj = b.clone().lerp(c, i / cols);\n        var rows = cols - i;\n\n        for (j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      } // construct all of the faces\n\n\n      for (i = 0; i < cols; i++) {\n        for (j = 0; j < 2 * (cols - i) - 1; j++) {\n          var k = Math.floor(j / 2);\n\n          if (j % 2 === 0) {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k]);\n            pushVertex(v[i][k]);\n          } else {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k + 1]);\n            pushVertex(v[i + 1][k]);\n          }\n        }\n      }\n    }\n\n    function appplyRadius(radius) {\n      var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n\n    function generateUVs() {\n      var vertex = new Vector3();\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        var v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n\n      correctUVs();\n      correctSeam();\n    }\n\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n      for (var i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n        var x0 = uvBuffer[i + 0];\n        var x1 = uvBuffer[i + 2];\n        var x2 = uvBuffer[i + 4];\n        var max = Math.max(x0, x1, x2);\n        var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[i + 0] += 1;\n          if (x1 < 0.2) uvBuffer[i + 2] += 1;\n          if (x2 < 0.2) uvBuffer[i + 4] += 1;\n        }\n      }\n    }\n\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    function getVertexByIndex(index, vertex) {\n      var stride = index * 3;\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n\n    function correctUVs() {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3();\n      var centroid = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        var azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    } // Angle above the XZ plane.\n\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    }\n  }\n\n  PolyhedronBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TetrahedronGeometry\n\n  function TetrahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  TetrahedronGeometry.prototype = Object.create(Geometry.prototype);\n  TetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry\n\n  function TetrahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'TetrahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  TetrahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // OctahedronGeometry\n\n  function OctahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  OctahedronGeometry.prototype = Object.create(Geometry.prototype);\n  OctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry\n\n  function OctahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'OctahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  OctahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // IcosahedronGeometry\n\n  function IcosahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  IcosahedronGeometry.prototype = Object.create(Geometry.prototype);\n  IcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry\n\n  function IcosahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'IcosahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  IcosahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n  /**\n   * @author Abe Pazos / https://hamoid.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // DodecahedronGeometry\n\n  function DodecahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  DodecahedronGeometry.prototype = Object.create(Geometry.prototype);\n  DodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry\n\n  function DodecahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var r = 1 / t;\n    var vertices = [// (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'DodecahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  DodecahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n  /**\n   * @author oosmoxiecode / https://github.com/oosmoxiecode\n   * @author WestLangley / https://github.com/WestLangley\n   * @author zz85 / https://github.com/zz85\n   * @author miningold / https://github.com/miningold\n   * @author jonobr1 / https://github.com/jonobr1\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   */\n  // TubeGeometry\n\n  function TubeGeometry(path, tubularSegments, radius, radialSegments, closed, taper) {\n    Geometry.call(this);\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    if (taper !== undefined) console.warn('THREE.TubeGeometry: taper has been removed.');\n    var bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed); // expose internals\n\n    this.tangents = bufferGeometry.tangents;\n    this.normals = bufferGeometry.normals;\n    this.binormals = bufferGeometry.binormals; // create geometry\n\n    this.fromBufferGeometry(bufferGeometry);\n    this.mergeVertices();\n  }\n\n  TubeGeometry.prototype = Object.create(Geometry.prototype);\n  TubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry\n\n  function TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed) {\n    BufferGeometry.call(this);\n    this.type = 'TubeBufferGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    tubularSegments = tubularSegments || 64;\n    radius = radius || 1;\n    radialSegments = radialSegments || 8;\n    closed = closed || false;\n    var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals; // helper variables\n\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var uv = new Vector2();\n    var P = new Vector3();\n    var i, j; // buffer\n\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var indices = []; // create buffer data\n\n    generateBufferData(); // build geometry\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n    function generateBufferData() {\n      for (i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      } // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n      generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs(); // finally create faces\n\n      generateIndices();\n    }\n\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n      P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n      var N = frames.normals[i];\n      var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n      for (j = 0; j <= radialSegments; j++) {\n        var v = j / radialSegments * Math.PI * 2;\n        var sin = Math.sin(v);\n        var cos = -Math.cos(v); // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z); // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n\n    function generateIndices() {\n      for (j = 1; j <= tubularSegments; j++) {\n        for (i = 1; i <= radialSegments; i++) {\n          var a = (radialSegments + 1) * (j - 1) + (i - 1);\n          var b = (radialSegments + 1) * j + (i - 1);\n          var c = (radialSegments + 1) * j + i;\n          var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n\n    function generateUVs() {\n      for (i = 0; i <= tubularSegments; i++) {\n        for (j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n\n  TubeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * based on http://www.blackpawn.com/texts/pqtorus/\n   */\n  // TorusKnotGeometry\n\n  function TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n    Geometry.call(this);\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n    this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n    this.mergeVertices();\n  }\n\n  TorusKnotGeometry.prototype = Object.create(Geometry.prototype);\n  TorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry\n\n  function TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n    BufferGeometry.call(this);\n    this.type = 'TorusKnotBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    radius = radius || 1;\n    tube = tube || 0.4;\n    tubularSegments = Math.floor(tubularSegments) || 64;\n    radialSegments = Math.floor(radialSegments) || 8;\n    p = p || 2;\n    q = q || 3; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, j;\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var P1 = new Vector3();\n    var P2 = new Vector3();\n    var B = new Vector3();\n    var T = new Vector3();\n    var N = new Vector3(); // generate vertices, normals and uvs\n\n    for (i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n      var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        var v = j / radialSegments * Math.PI * 2;\n        var cx = -tube * Math.cos(v);\n        var cy = tube * Math.sin(v); // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        // indices\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      var cu = Math.cos(u);\n      var su = Math.sin(u);\n      var quOverP = q / p * u;\n      var cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n\n  TorusKnotBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TorusGeometry\n\n  function TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    Geometry.call(this);\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n    this.mergeVertices();\n  }\n\n  TorusGeometry.prototype = Object.create(Geometry.prototype);\n  TorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry\n\n  function TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    BufferGeometry.call(this);\n    this.type = 'TorusBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radius = radius || 1;\n    tube = tube || 0.4;\n    radialSegments = Math.floor(radialSegments) || 8;\n    tubularSegments = Math.floor(tubularSegments) || 6;\n    arc = arc || Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var center = new Vector3();\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= radialSegments; j++) {\n      for (i = 0; i <= tubularSegments; i++) {\n        var u = i / tubularSegments * arc;\n        var v = j / radialSegments * Math.PI * 2; // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= radialSegments; j++) {\n      for (i = 1; i <= tubularSegments; i++) {\n        // indices\n        var a = (tubularSegments + 1) * j + i - 1;\n        var b = (tubularSegments + 1) * (j - 1) + i - 1;\n        var c = (tubularSegments + 1) * (j - 1) + i;\n        var d = (tubularSegments + 1) * j + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  TorusBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   * Port from https://github.com/mapbox/earcut (v2.1.2)\n   */\n\n  var Earcut = {\n    triangulate: function (data, holeIndices, dim) {\n      dim = dim || 2;\n      var hasHoles = holeIndices && holeIndices.length,\n          outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n          outerNode = linkedList(data, 0, outerLen, dim, true),\n          triangles = [];\n      if (!outerNode) return triangles;\n      var minX, minY, maxX, maxY, x, y, invSize;\n      if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n      if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n          x = data[i];\n          y = data[i + 1];\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n        } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n      }\n\n      earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n      return triangles;\n    }\n  }; // create a circular doubly linked list from polygon points in the specified winding order\n\n  function linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n      for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n      for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n      removeNode(last);\n      last = last.next;\n    }\n\n    return last;\n  } // eliminate colinear or duplicate points\n\n\n  function filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n    var p = start,\n        again;\n\n    do {\n      again = false;\n\n      if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n        removeNode(p);\n        p = end = p.prev;\n        if (p === p.next) break;\n        again = true;\n      } else {\n        p = p.next;\n      }\n    } while (again || p !== end);\n\n    return end;\n  } // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n  function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return; // interlink polygon nodes in z-order\n\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n    var stop = ear,\n        prev,\n        next; // iterate through ears, slicing them one by one\n\n    while (ear.prev !== ear.next) {\n      prev = ear.prev;\n      next = ear.next;\n\n      if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n        // cut off the triangle\n        triangles.push(prev.i / dim);\n        triangles.push(ear.i / dim);\n        triangles.push(next.i / dim);\n        removeNode(ear); // skipping the next vertice leads to less sliver triangles\n\n        ear = next.next;\n        stop = next.next;\n        continue;\n      }\n\n      ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n      if (ear === stop) {\n        // try filtering points and slicing again\n        if (!pass) {\n          earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n        } else if (pass === 1) {\n          ear = cureLocalIntersections(ear, triangles, dim);\n          earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n        } else if (pass === 2) {\n          splitEarcut(ear, triangles, dim, minX, minY, invSize);\n        }\n\n        break;\n      }\n    }\n  } // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n  function isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n      if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n        return false;\n      }\n\n      p = p.next;\n    }\n\n    return true;\n  }\n\n  function isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // triangle bbox; min & max are calculated like this for speed\n\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize); // first look for points inside the triangle in increasing z-order\n\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.nextZ;\n    } // then look for points in decreasing z-order\n\n\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.prevZ;\n    }\n\n    return true;\n  } // go through all polygon nodes and cure small local self-intersections\n\n\n  function cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n\n    do {\n      var a = p.prev,\n          b = p.next.next;\n\n      if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n        triangles.push(a.i / dim);\n        triangles.push(p.i / dim);\n        triangles.push(b.i / dim); // remove two nodes involved\n\n        removeNode(p);\n        removeNode(p.next);\n        p = start = b;\n      }\n\n      p = p.next;\n    } while (p !== start);\n\n    return p;\n  } // try splitting polygon into two and triangulate them independently\n\n\n  function splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n\n    do {\n      var b = a.next.next;\n\n      while (b !== a.prev) {\n        if (a.i !== b.i && isValidDiagonal(a, b)) {\n          // split the polygon in two by the diagonal\n          var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n          a = filterPoints(a, a.next);\n          c = filterPoints(c, c.next); // run earcut on each half\n\n          earcutLinked(a, triangles, dim, minX, minY, invSize);\n          earcutLinked(c, triangles, dim, minX, minY, invSize);\n          return;\n        }\n\n        b = b.next;\n      }\n\n      a = a.next;\n    } while (a !== start);\n  } // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n  function eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n      start = holeIndices[i] * dim;\n      end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      list = linkedList(data, start, end, dim, false);\n      if (list === list.next) list.steiner = true;\n      queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX); // process holes from left to right\n\n    for (i = 0; i < queue.length; i++) {\n      eliminateHole(queue[i], outerNode);\n      outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n  }\n\n  function compareX(a, b) {\n    return a.x - b.x;\n  } // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n  function eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n\n    if (outerNode) {\n      var b = splitPolygon(outerNode, hole);\n      filterPoints(b, b.next);\n    }\n  } // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n  function findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n\n    do {\n      if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n        var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n        if (x <= hx && x > qx) {\n          qx = x;\n\n          if (x === hx) {\n            if (hy === p.y) return p;\n            if (hy === p.next.y) return p.next;\n          }\n\n          m = p.x < p.next.x ? p : p.next;\n        }\n      }\n\n      p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n    p = m.next;\n\n    while (p !== stop) {\n      if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n        tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n        if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n          m = p;\n          tanMin = tan;\n        }\n      }\n\n      p = p.next;\n    }\n\n    return m;\n  } // interlink polygon nodes in z-order\n\n\n  function indexCurve(start, minX, minY, invSize) {\n    var p = start;\n\n    do {\n      if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n      p.prevZ = p.prev;\n      p.nextZ = p.next;\n      p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n  } // Simon Tatham's linked list merge sort algorithm\n  // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n  function sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n      p = list;\n      list = null;\n      tail = null;\n      numMerges = 0;\n\n      while (p) {\n        numMerges++;\n        q = p;\n        pSize = 0;\n\n        for (i = 0; i < inSize; i++) {\n          pSize++;\n          q = q.nextZ;\n          if (!q) break;\n        }\n\n        qSize = inSize;\n\n        while (pSize > 0 || qSize > 0 && q) {\n          if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n            e = p;\n            p = p.nextZ;\n            pSize--;\n          } else {\n            e = q;\n            q = q.nextZ;\n            qSize--;\n          }\n\n          if (tail) tail.nextZ = e;else list = e;\n          e.prevZ = tail;\n          tail = e;\n        }\n\n        p = q;\n      }\n\n      tail.nextZ = null;\n      inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n  } // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n  function zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n    return x | y << 1;\n  } // find the leftmost node of a polygon ring\n\n\n  function getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n\n    do {\n      if (p.x < leftmost.x) leftmost = p;\n      p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n  } // check if a point lies within a convex triangle\n\n\n  function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n  } // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n  function isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n  } // signed area of a triangle\n\n\n  function area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  } // check if two points are equal\n\n\n  function equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n  } // check if two segments intersect\n\n\n  function intersects(p1, q1, p2, q2) {\n    if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n  } // check if a polygon diagonal intersects any polygon segments\n\n\n  function intersectsPolygon(a, b) {\n    var p = a;\n\n    do {\n      if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) {\n        return true;\n      }\n\n      p = p.next;\n    } while (p !== a);\n\n    return false;\n  } // check if a polygon diagonal is locally inside the polygon\n\n\n  function locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n  } // check if the middle point of a polygon diagonal is inside the polygon\n\n\n  function middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n\n    do {\n      if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {\n        inside = !inside;\n      }\n\n      p = p.next;\n    } while (p !== a);\n\n    return inside;\n  } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n  // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n  function splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n  } // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n  function insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n      p.prev = p;\n      p.next = p;\n    } else {\n      p.next = last.next;\n      p.prev = last;\n      last.next.prev = p;\n      last.next = p;\n    }\n\n    return p;\n  }\n\n  function removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n  }\n\n  function Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i; // vertex coordinates\n\n    this.x = x;\n    this.y = y; // previous and next vertice nodes in a polygon ring\n\n    this.prev = null;\n    this.next = null; // z-order curve value\n\n    this.z = null; // previous and next nodes in z-order\n\n    this.prevZ = null;\n    this.nextZ = null; // indicates whether this is a steiner point\n\n    this.steiner = false;\n  }\n\n  function signedArea(data, start, end, dim) {\n    var sum = 0;\n\n    for (var i = start, j = end - dim; i < end; i += dim) {\n      sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n      j = i;\n    }\n\n    return sum;\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n\n  var ShapeUtils = {\n    // calculate area of the contour polygon\n    area: function (contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    },\n    isClockWise: function (pts) {\n      return ShapeUtils.area(pts) < 0;\n    },\n    triangulateShape: function (contour, holes) {\n      var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n      var holeIndices = []; // array of hole indices\n\n      var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n      removeDupEndPts(contour);\n      addContour(vertices, contour); //\n\n      var holeIndex = contour.length;\n      holes.forEach(removeDupEndPts);\n\n      for (var i = 0; i < holes.length; i++) {\n        holeIndices.push(holeIndex);\n        holeIndex += holes[i].length;\n        addContour(vertices, holes[i]);\n      } //\n\n\n      var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n      for (var i = 0; i < triangles.length; i += 3) {\n        faces.push(triangles.slice(i, i + 3));\n      }\n\n      return faces;\n    }\n  };\n\n  function removeDupEndPts(points) {\n    var l = points.length;\n\n    if (l > 2 && points[l - 1].equals(points[0])) {\n      points.pop();\n    }\n  }\n\n  function addContour(vertices, contour) {\n    for (var i = 0; i < contour.length; i++) {\n      vertices.push(contour[i].x);\n      vertices.push(contour[i].y);\n    }\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Creates extruded geometry from a path shape.\n   *\n   * parameters = {\n   *\n   *  curveSegments: <int>, // number of points on the curves\n   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n   *  depth: <float>, // Depth to extrude the shape\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into the original shape bevel goes\n   *  bevelSize: <float>, // how far from shape outline is bevel\n   *  bevelSegments: <int>, // number of bevel layers\n   *\n   *  extrudePath: <THREE.Curve> // curve to extrude shape along\n   *\n   *  UVGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   */\n  // ExtrudeGeometry\n\n\n  function ExtrudeGeometry(shapes, options) {\n    Geometry.call(this);\n    this.type = 'ExtrudeGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes, options));\n    this.mergeVertices();\n  }\n\n  ExtrudeGeometry.prototype = Object.create(Geometry.prototype);\n  ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n  ExtrudeGeometry.prototype.toJSON = function () {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    var options = this.parameters.options;\n    return toJSON(shapes, options, data);\n  }; // ExtrudeBufferGeometry\n\n\n  function ExtrudeBufferGeometry(shapes, options) {\n    BufferGeometry.call(this);\n    this.type = 'ExtrudeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n    var scope = this;\n    var verticesArray = [];\n    var uvArray = [];\n\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      addShape(shape);\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n    this.computeVertexNormals(); // functions\n\n    function addShape(shape) {\n      var placeholder = []; // options\n\n      var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n      var steps = options.steps !== undefined ? options.steps : 1;\n      var depth = options.depth !== undefined ? options.depth : 100;\n      var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n      var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n      var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n      var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n      var extrudePath = options.extrudePath;\n      var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n      if (options.amount !== undefined) {\n        console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n        depth = options.amount;\n      } //\n\n\n      var extrudePts,\n          extrudeByPath = false;\n      var splineTube, binormal, normal, position2;\n\n      if (extrudePath) {\n        extrudePts = extrudePath.getSpacedPoints(steps);\n        extrudeByPath = true;\n        bevelEnabled = false; // bevels not supported for path extrusion\n        // SETUP TNB variables\n        // TODO1 - have a .isClosed in spline?\n\n        splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n        binormal = new Vector3();\n        normal = new Vector3();\n        position2 = new Vector3();\n      } // Safeguards if bevels are not enabled\n\n\n      if (!bevelEnabled) {\n        bevelSegments = 0;\n        bevelThickness = 0;\n        bevelSize = 0;\n      } // Variables initialization\n\n\n      var ahole, h, hl; // looping of holes\n\n      var shapePoints = shape.extractPoints(curveSegments);\n      var vertices = shapePoints.shape;\n      var holes = shapePoints.holes;\n      var reverse = !ShapeUtils.isClockWise(vertices);\n\n      if (reverse) {\n        vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n\n          if (ShapeUtils.isClockWise(ahole)) {\n            holes[h] = ahole.reverse();\n          }\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(vertices, holes);\n      /* Vertices */\n\n      var contour = vertices; // vertices has all points but contour has only points of circumference\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        vertices = vertices.concat(ahole);\n      }\n\n      function scalePt2(pt, vec, size) {\n        if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n        return vec.clone().multiplyScalar(size).add(pt);\n      }\n\n      var b,\n          bs,\n          t,\n          z,\n          vert,\n          vlen = vertices.length,\n          face,\n          flen = faces.length; // Find directions for point movement\n\n      function getBevelVec(inPt, inPrev, inNext) {\n        // computes for inPt the corresponding point inPt' on a new contour\n        //   shifted by 1 unit (length of normalized vector) to the left\n        // if we walk along contour clockwise, this new contour is outside the old one\n        //\n        // inPt' is the intersection of the two lines parallel to the two\n        //  adjacent edges of inPt at a distance of 1 unit on the left side.\n        var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n        // good reading for geometry algorithms (here: line-line intersection)\n        // http://geomalgorithms.com/a05-_intersect-1.html\n\n        var v_prev_x = inPt.x - inPrev.x,\n            v_prev_y = inPt.y - inPrev.y;\n        var v_next_x = inNext.x - inPt.x,\n            v_next_y = inNext.y - inPt.y;\n        var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n        var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n        if (Math.abs(collinear0) > Number.EPSILON) {\n          // not collinear\n          // length of vectors for normalizing\n          var v_prev_len = Math.sqrt(v_prev_lensq);\n          var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n          var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n          var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n          var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n          var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n          var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n          v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n          v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n          //  but prevent crazy spikes\n\n          var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n          if (v_trans_lensq <= 2) {\n            return new Vector2(v_trans_x, v_trans_y);\n          } else {\n            shrink_by = Math.sqrt(v_trans_lensq / 2);\n          }\n        } else {\n          // handle special case of collinear edges\n          var direction_eq = false; // assumes: opposite\n\n          if (v_prev_x > Number.EPSILON) {\n            if (v_next_x > Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (v_prev_x < -Number.EPSILON) {\n              if (v_next_x < -Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                direction_eq = true;\n              }\n            }\n          }\n\n          if (direction_eq) {\n            // console.log(\"Warning: lines are a straight sequence\");\n            v_trans_x = -v_prev_y;\n            v_trans_y = v_prev_x;\n            shrink_by = Math.sqrt(v_prev_lensq);\n          } else {\n            // console.log(\"Warning: lines are a straight spike\");\n            v_trans_x = v_prev_x;\n            v_trans_y = v_prev_y;\n            shrink_by = Math.sqrt(v_prev_lensq / 2);\n          }\n        }\n\n        return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n      }\n\n      var contourMovements = [];\n\n      for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0; //  (j)---(i)---(k)\n        // console.log('i,j,k', i, j , k)\n\n        contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n      }\n\n      var holesMovements = [],\n          oneHoleMovements,\n          verticesMovements = contourMovements.concat();\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = [];\n\n        for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n          if (j === il) j = 0;\n          if (k === il) k = 0; //  (j)---(i)---(k)\n\n          oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n        }\n\n        holesMovements.push(oneHoleMovements);\n        verticesMovements = verticesMovements.concat(oneHoleMovements);\n      } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n      for (b = 0; b < bevelSegments; b++) {\n        //for ( b = bevelSegments; b > 0; b -- ) {\n        t = b / bevelSegments;\n        z = bevelThickness * Math.cos(t * Math.PI / 2);\n        bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n        for (i = 0, il = contour.length; i < il; i++) {\n          vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        } // expand holes\n\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (i = 0, il = ahole.length; i < il; i++) {\n            vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n            v(vert.x, vert.y, -z);\n          }\n        }\n      }\n\n      bs = bevelSize; // Back facing vertices\n\n      for (i = 0; i < vlen; i++) {\n        vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, 0);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n          normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[0]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      } // Add stepped vertices...\n      // Including front facing vertices\n\n\n      var s;\n\n      for (s = 1; s <= steps; s++) {\n        for (i = 0; i < vlen; i++) {\n          vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, depth / steps * s);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n            normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n            binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n            position2.copy(extrudePts[s]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        }\n      } // Add bevel segments planes\n      //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n      for (b = bevelSegments - 1; b >= 0; b--) {\n        t = b / bevelSegments;\n        z = bevelThickness * Math.cos(t * Math.PI / 2);\n        bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n        for (i = 0, il = contour.length; i < il; i++) {\n          vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, depth + z);\n        } // expand holes\n\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (i = 0, il = ahole.length; i < il; i++) {\n            vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n            if (!extrudeByPath) {\n              v(vert.x, vert.y, depth + z);\n            } else {\n              v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n            }\n          }\n        }\n      }\n      /* Faces */\n      // Top and bottom faces\n\n\n      buildLidFaces(); // Sides faces\n\n      buildSideFaces(); /////  Internal functions\n\n      function buildLidFaces() {\n        var start = verticesArray.length / 3;\n\n        if (bevelEnabled) {\n          var layer = 0; // steps + 1\n\n          var offset = vlen * layer; // Bottom faces\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[2] + offset, face[1] + offset, face[0] + offset);\n          }\n\n          layer = steps + bevelSegments * 2;\n          offset = vlen * layer; // Top faces\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[0] + offset, face[1] + offset, face[2] + offset);\n          }\n        } else {\n          // Bottom faces\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[2], face[1], face[0]);\n          } // Top faces\n\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n          }\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 0);\n      } // Create faces for the z-sides of the shape\n\n\n      function buildSideFaces() {\n        var start = verticesArray.length / 3;\n        var layeroffset = 0;\n        sidewalls(contour, layeroffset);\n        layeroffset += contour.length;\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          sidewalls(ahole, layeroffset); //, true\n\n          layeroffset += ahole.length;\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 1);\n      }\n\n      function sidewalls(contour, layeroffset) {\n        var j, k;\n        i = contour.length;\n\n        while (--i >= 0) {\n          j = i;\n          k = i - 1;\n          if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n          var s = 0,\n              sl = steps + bevelSegments * 2;\n\n          for (s = 0; s < sl; s++) {\n            var slen1 = vlen * s;\n            var slen2 = vlen * (s + 1);\n            var a = layeroffset + j + slen1,\n                b = layeroffset + k + slen1,\n                c = layeroffset + k + slen2,\n                d = layeroffset + j + slen2;\n            f4(a, b, c, d);\n          }\n        }\n      }\n\n      function v(x, y, z) {\n        placeholder.push(x);\n        placeholder.push(y);\n        placeholder.push(z);\n      }\n\n      function f3(a, b, c) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(c);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n      }\n\n      function f4(a, b, c, d) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(d);\n        addVertex(b);\n        addVertex(c);\n        addVertex(d);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[3]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n        addUV(uvs[3]);\n      }\n\n      function addVertex(index) {\n        verticesArray.push(placeholder[index * 3 + 0]);\n        verticesArray.push(placeholder[index * 3 + 1]);\n        verticesArray.push(placeholder[index * 3 + 2]);\n      }\n\n      function addUV(vector2) {\n        uvArray.push(vector2.x);\n        uvArray.push(vector2.y);\n      }\n    }\n  }\n\n  ExtrudeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n  ExtrudeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    var options = this.parameters.options;\n    return toJSON(shapes, options, data);\n  }; //\n\n\n  var WorldUVGenerator = {\n    generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n    },\n    generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var a_z = vertices[indexA * 3 + 2];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var b_z = vertices[indexB * 3 + 2];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      var c_z = vertices[indexC * 3 + 2];\n      var d_x = vertices[indexD * 3];\n      var d_y = vertices[indexD * 3 + 1];\n      var d_z = vertices[indexD * 3 + 2];\n\n      if (Math.abs(a_y - b_y) < 0.01) {\n        return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n      } else {\n        return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n      }\n    }\n  };\n\n  function toJSON(shapes, options, data) {\n    //\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    } //\n\n\n    if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n    return data;\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Text = 3D Text\n   *\n   * parameters = {\n   *  font: <THREE.Font>, // font\n   *\n   *  size: <float>, // size of the text\n   *  height: <float>, // thickness to extrude text\n   *  curveSegments: <int>, // number of points on the curves\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into text bevel goes\n   *  bevelSize: <float> // how far from text outline is bevel\n   * }\n   */\n  // TextGeometry\n\n\n  function TextGeometry(text, parameters) {\n    Geometry.call(this);\n    this.type = 'TextGeometry';\n    this.parameters = {\n      text: text,\n      parameters: parameters\n    };\n    this.fromBufferGeometry(new TextBufferGeometry(text, parameters));\n    this.mergeVertices();\n  }\n\n  TextGeometry.prototype = Object.create(Geometry.prototype);\n  TextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry\n\n  function TextBufferGeometry(text, parameters) {\n    parameters = parameters || {};\n    var font = parameters.font;\n\n    if (!(font && font.isFont)) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      return new Geometry();\n    }\n\n    var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n    parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    ExtrudeBufferGeometry.call(this, shapes, parameters);\n    this.type = 'TextBufferGeometry';\n  }\n\n  TextBufferGeometry.prototype = Object.create(ExtrudeBufferGeometry.prototype);\n  TextBufferGeometry.prototype.constructor = TextBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // SphereGeometry\n\n  function SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  SphereGeometry.prototype = Object.create(Geometry.prototype);\n  SphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry\n\n  function SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'SphereBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 1;\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n    phiStart = phiStart !== undefined ? phiStart : 0;\n    phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n    var thetaEnd = thetaStart + thetaLength;\n    var ix, iy;\n    var index = 0;\n    var grid = [];\n    var vertex = new Vector3();\n    var normal = new Vector3(); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy <= heightSegments; iy++) {\n      var verticesRow = [];\n      var v = iy / heightSegments;\n\n      for (ix = 0; ix <= widthSegments; ix++) {\n        var u = ix / widthSegments; // vertex\n\n        vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.set(vertex.x, vertex.y, vertex.z).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, 1 - v);\n        verticesRow.push(index++);\n      }\n\n      grid.push(verticesRow);\n    } // indices\n\n\n    for (iy = 0; iy < heightSegments; iy++) {\n      for (ix = 0; ix < widthSegments; ix++) {\n        var a = grid[iy][ix + 1];\n        var b = grid[iy][ix];\n        var c = grid[iy + 1][ix];\n        var d = grid[iy + 1][ix + 1];\n        if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n        if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  SphereBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n  /**\n   * @author Kaleb Murphy\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // RingGeometry\n\n  function RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  RingGeometry.prototype = Object.create(Geometry.prototype);\n  RingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry\n\n  function RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'RingBufferGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    innerRadius = innerRadius || 0.5;\n    outerRadius = outerRadius || 1;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n    phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // some helper variables\n\n    var segment;\n    var radius = innerRadius;\n    var radiusStep = (outerRadius - innerRadius) / phiSegments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= phiSegments; j++) {\n      for (i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n        segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // increase the radius for next row of vertices\n\n\n      radius += radiusStep;\n    } // indices\n\n\n    for (j = 0; j < phiSegments; j++) {\n      var thetaSegmentLevel = j * (thetaSegments + 1);\n\n      for (i = 0; i < thetaSegments; i++) {\n        segment = i + thetaSegmentLevel;\n        var a = segment;\n        var b = segment + thetaSegments + 1;\n        var c = segment + thetaSegments + 2;\n        var d = segment + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  RingBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  RingBufferGeometry.prototype.constructor = RingBufferGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author bhouston / http://clara.io\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // LatheGeometry\n\n  function LatheGeometry(points, segments, phiStart, phiLength) {\n    Geometry.call(this);\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n    this.mergeVertices();\n  }\n\n  LatheGeometry.prototype = Object.create(Geometry.prototype);\n  LatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry\n\n  function LatheBufferGeometry(points, segments, phiStart, phiLength) {\n    BufferGeometry.call(this);\n    this.type = 'LatheBufferGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments) || 12;\n    phiStart = phiStart || 0;\n    phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = _Math.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var uvs = []; // helper variables\n\n    var base;\n    var inverseSegments = 1.0 / segments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var i, j; // generate vertices and uvs\n\n    for (i = 0; i <= segments; i++) {\n      var phi = phiStart + i * inverseSegments * phiLength;\n      var sin = Math.sin(phi);\n      var cos = Math.cos(phi);\n\n      for (j = 0; j <= points.length - 1; j++) {\n        // vertex\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.push(uv.x, uv.y);\n      }\n    } // indices\n\n\n    for (i = 0; i < segments; i++) {\n      for (j = 0; j < points.length - 1; j++) {\n        base = j + i * points.length;\n        var a = base;\n        var b = base + points.length;\n        var c = base + points.length + 1;\n        var d = base + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n    this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n\n    if (phiLength === Math.PI * 2) {\n      var normals = this.attributes.normal.array;\n      var n1 = new Vector3();\n      var n2 = new Vector3();\n      var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n      base = segments * points.length * 3;\n\n      for (i = 0, j = 0; i < points.length; i++, j += 3) {\n        // select the normal of the vertex in the first line\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2]; // average normals\n\n        n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      }\n    }\n  }\n\n  LatheBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n  /**\n   * @author jonobr1 / http://jonobr1.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // ShapeGeometry\n\n  function ShapeGeometry(shapes, curveSegments) {\n    Geometry.call(this);\n    this.type = 'ShapeGeometry';\n\n    if (typeof curveSegments === 'object') {\n      console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n      curveSegments = curveSegments.curveSegments;\n    }\n\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n    this.mergeVertices();\n  }\n\n  ShapeGeometry.prototype = Object.create(Geometry.prototype);\n  ShapeGeometry.prototype.constructor = ShapeGeometry;\n\n  ShapeGeometry.prototype.toJSON = function () {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON$1(shapes, data);\n  }; // ShapeBufferGeometry\n\n\n  function ShapeBufferGeometry(shapes, curveSegments) {\n    BufferGeometry.call(this);\n    this.type = 'ShapeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    curveSegments = curveSegments || 12; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var groupStart = 0;\n    var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (var i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n        this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n    function addShape(shape) {\n      var i, l, shapeHole;\n      var indexOffset = vertices.length / 3;\n      var points = shape.extractPoints(curveSegments);\n      var shapeVertices = points.shape;\n      var shapeHoles = points.holes; // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse(); // also check if holes are in the opposite direction\n\n        for (i = 0, l = shapeHoles.length; i < l; i++) {\n          shapeHole = shapeHoles[i];\n\n          if (ShapeUtils.isClockWise(shapeHole) === true) {\n            shapeHoles[i] = shapeHole.reverse();\n          }\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n        shapeVertices = shapeVertices.concat(shapeHole);\n      } // vertices, normals, uvs\n\n\n      for (i = 0, l = shapeVertices.length; i < l; i++) {\n        var vertex = shapeVertices[i];\n        vertices.push(vertex.x, vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(vertex.x, vertex.y); // world uvs\n      } // incides\n\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var a = face[0] + indexOffset;\n        var b = face[1] + indexOffset;\n        var c = face[2] + indexOffset;\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n  }\n\n  ShapeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n  ShapeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON$1(shapes, data);\n  }; //\n\n\n  function toJSON$1(shapes, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    return data;\n  }\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function EdgesGeometry(geometry, thresholdAngle) {\n    BufferGeometry.call(this);\n    this.type = 'EdgesGeometry';\n    this.parameters = {\n      thresholdAngle: thresholdAngle\n    };\n    thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1; // buffer\n\n    var vertices = []; // helper variables\n\n    var thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n    var edge = [0, 0],\n        edges = {},\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c']; // prepare source geometry\n\n    var geometry2;\n\n    if (geometry.isBufferGeometry) {\n      geometry2 = new Geometry();\n      geometry2.fromBufferGeometry(geometry);\n    } else {\n      geometry2 = geometry.clone();\n    }\n\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n    var sourceVertices = geometry2.vertices;\n    var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge1 = face[keys[j]];\n        edge2 = face[keys[(j + 1) % 3]];\n        edge[0] = Math.min(edge1, edge2);\n        edge[1] = Math.max(edge1, edge2);\n        key = edge[0] + ',' + edge[1];\n\n        if (edges[key] === undefined) {\n          edges[key] = {\n            index1: edge[0],\n            index2: edge[1],\n            face1: i,\n            face2: undefined\n          };\n        } else {\n          edges[key].face2 = i;\n        }\n      }\n    } // generate vertices\n\n\n    for (key in edges) {\n      var e = edges[key]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n      if (e.face2 === undefined || faces[e.face1].normal.dot(faces[e.face2].normal) <= thresholdDot) {\n        var vertex = sourceVertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = sourceVertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  EdgesGeometry.prototype = Object.create(BufferGeometry.prototype);\n  EdgesGeometry.prototype.constructor = EdgesGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // CylinderGeometry\n\n  function CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CylinderGeometry.prototype = Object.create(Geometry.prototype);\n  CylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry\n\n  function CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CylinderBufferGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    var scope = this;\n    radiusTop = radiusTop !== undefined ? radiusTop : 1;\n    radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n    height = height || 1;\n    radialSegments = Math.floor(radialSegments) || 8;\n    heightSegments = Math.floor(heightSegments) || 1;\n    openEnded = openEnded !== undefined ? openEnded : false;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var index = 0;\n    var indexArray = [];\n    var halfHeight = height / 2;\n    var groupStart = 0; // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function generateTorso() {\n      var x, y;\n      var normal = new Vector3();\n      var vertex = new Vector3();\n      var groupCount = 0; // this will be used to calculate the normal\n\n      var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n      for (y = 0; y <= heightSegments; y++) {\n        var indexRow = [];\n        var v = y / heightSegments; // calculate the radius of the current row\n\n        var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (x = 0; x <= radialSegments; x++) {\n          var u = x / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var sinTheta = Math.sin(theta);\n          var cosTheta = Math.cos(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u, 1 - v); // save index of vertex in respective row\n\n          indexRow.push(index++);\n        } // now save vertices of the row in our index array\n\n\n        indexArray.push(indexRow);\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        for (y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n          var a = indexArray[y][x];\n          var b = indexArray[y + 1][x];\n          var c = indexArray[y + 1][x + 1];\n          var d = indexArray[y][x + 1]; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // update group counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      var x, centerIndexStart, centerIndexEnd;\n      var uv = new Vector2();\n      var vertex = new Vector3();\n      var groupCount = 0;\n      var radius = top === true ? radiusTop : radiusBottom;\n      var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n      centerIndexStart = index; // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (x = 1; x <= radialSegments; x++) {\n        // vertex\n        vertices.push(0, halfHeight * sign, 0); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uvs.push(0.5, 0.5); // increase index\n\n        index++;\n      } // save the index of the last center vertex\n\n\n      centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y); // increase index\n\n        index++;\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        var c = centerIndexStart + x;\n        var i = centerIndexEnd + x;\n\n        if (top === true) {\n          // face top\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n          indices.push(i + 1, i, c);\n        }\n\n        groupCount += 3;\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  }\n\n  CylinderBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n  // ConeGeometry\n\n  function ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeGeometry.prototype = Object.create(CylinderGeometry.prototype);\n  ConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry\n\n  function ConeBufferGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeBufferGeometry.prototype = Object.create(CylinderBufferGeometry.prototype);\n  ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author hughes\n   */\n  // CircleGeometry\n\n  function CircleGeometry(radius, segments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CircleGeometry.prototype = Object.create(Geometry.prototype);\n  CircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry\n\n  function CircleBufferGeometry(radius, segments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CircleBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 1;\n    segments = segments !== undefined ? Math.max(3, segments) : 8;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, s;\n    var vertex = new Vector3();\n    var uv = new Vector2(); // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n\n    for (s = 0, i = 3; s <= segments; s++, i += 3) {\n      var segment = thetaStart + s / segments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // indices\n\n\n    for (i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  CircleBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n  var Geometries =\n  /*#__PURE__*/\n  Object.freeze({\n    WireframeGeometry: WireframeGeometry,\n    ParametricGeometry: ParametricGeometry,\n    ParametricBufferGeometry: ParametricBufferGeometry,\n    TetrahedronGeometry: TetrahedronGeometry,\n    TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n    OctahedronGeometry: OctahedronGeometry,\n    OctahedronBufferGeometry: OctahedronBufferGeometry,\n    IcosahedronGeometry: IcosahedronGeometry,\n    IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n    DodecahedronGeometry: DodecahedronGeometry,\n    DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n    PolyhedronGeometry: PolyhedronGeometry,\n    PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n    TubeGeometry: TubeGeometry,\n    TubeBufferGeometry: TubeBufferGeometry,\n    TorusKnotGeometry: TorusKnotGeometry,\n    TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n    TorusGeometry: TorusGeometry,\n    TorusBufferGeometry: TorusBufferGeometry,\n    TextGeometry: TextGeometry,\n    TextBufferGeometry: TextBufferGeometry,\n    SphereGeometry: SphereGeometry,\n    SphereBufferGeometry: SphereBufferGeometry,\n    RingGeometry: RingGeometry,\n    RingBufferGeometry: RingBufferGeometry,\n    PlaneGeometry: PlaneGeometry,\n    PlaneBufferGeometry: PlaneBufferGeometry,\n    LatheGeometry: LatheGeometry,\n    LatheBufferGeometry: LatheBufferGeometry,\n    ShapeGeometry: ShapeGeometry,\n    ShapeBufferGeometry: ShapeBufferGeometry,\n    ExtrudeGeometry: ExtrudeGeometry,\n    ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n    EdgesGeometry: EdgesGeometry,\n    ConeGeometry: ConeGeometry,\n    ConeBufferGeometry: ConeBufferGeometry,\n    CylinderGeometry: CylinderGeometry,\n    CylinderBufferGeometry: CylinderBufferGeometry,\n    CircleGeometry: CircleGeometry,\n    CircleBufferGeometry: CircleBufferGeometry,\n    BoxGeometry: BoxGeometry,\n    BoxBufferGeometry: BoxBufferGeometry\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * parameters = {\n   *  color: <THREE.Color>\n   * }\n   */\n\n  function ShadowMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShadowMaterial';\n    this.color = new Color(0x000000);\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  ShadowMaterial.prototype = Object.create(Material.prototype);\n  ShadowMaterial.prototype.constructor = ShadowMaterial;\n  ShadowMaterial.prototype.isShadowMaterial = true;\n\n  ShadowMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function RawShaderMaterial(parameters) {\n    ShaderMaterial.call(this, parameters);\n    this.type = 'RawShaderMaterial';\n  }\n\n  RawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\n  RawShaderMaterial.prototype.constructor = RawShaderMaterial;\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  roughness: <float>,\n   *  metalness: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  roughnessMap: new THREE.Texture( <Image> ),\n   *\n   *  metalnessMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  envMapIntensity: <float>\n   *\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function MeshStandardMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.type = 'MeshStandardMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.roughness = 0.5;\n    this.metalness = 0.5;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshStandardMaterial.prototype = Object.create(Material.prototype);\n  MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n  MeshStandardMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  reflectivity: <float>\n   * }\n   */\n\n\n  function MeshPhysicalMaterial(parameters) {\n    MeshStandardMaterial.call(this);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n\n    this.clearCoat = 0.0;\n    this.clearCoatRoughness = 0.0;\n    this.setValues(parameters);\n  }\n\n  MeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n  MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n  MeshPhysicalMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.reflectivity = source.reflectivity;\n    this.clearCoat = source.clearCoat;\n    this.clearCoatRoughness = source.clearCoatRoughness;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  specular: <hex>,\n   *  shininess: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshPhongMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshPhongMaterial.prototype = Object.create(Material.prototype);\n  MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n  MeshPhongMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author takahirox / http://github.com/takahirox\n   *\n   * parameters = {\n   *  gradientMap: new THREE.Texture( <Image> )\n   * }\n   */\n\n\n  function MeshToonMaterial(parameters) {\n    MeshPhongMaterial.call(this);\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.gradientMap = null;\n    this.setValues(parameters);\n  }\n\n  MeshToonMaterial.prototype = Object.create(MeshPhongMaterial.prototype);\n  MeshToonMaterial.prototype.constructor = MeshToonMaterial;\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n  MeshToonMaterial.prototype.copy = function (source) {\n    MeshPhongMaterial.prototype.copy.call(this, source);\n    this.gradientMap = source.gradientMap;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  opacity: <float>,\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshNormalMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshNormalMaterial.prototype = Object.create(Material.prototype);\n  MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n  MeshNormalMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshLambertMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshLambertMaterial.prototype = Object.create(Material.prototype);\n  MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n  MeshLambertMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  matcap: new THREE.Texture( <Image> ),\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshMatcapMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.type = 'MeshMatcapMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n    this.map = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.lights = false;\n    this.setValues(parameters); // a matcap is required\n\n    if (this.matcap === null) {\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var context = canvas.getContext('2d');\n      context.fillStyle = '#fff';\n      context.fillRect(0, 0, 1, 1);\n      this.matcap = new THREE.CanvasTexture(canvas);\n    }\n  }\n\n  MeshMatcapMaterial.prototype = Object.create(Material.prototype);\n  MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n  MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n  MeshMatcapMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.color.copy(source.color);\n    this.matcap = source.matcap;\n    this.map = source.map;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *\n   *  scale: <float>,\n   *  dashSize: <float>,\n   *  gapSize: <float>\n   * }\n   */\n\n\n  function LineDashedMaterial(parameters) {\n    LineBasicMaterial.call(this);\n    this.type = 'LineDashedMaterial';\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.setValues(parameters);\n  }\n\n  LineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\n  LineDashedMaterial.prototype.constructor = LineDashedMaterial;\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n  LineDashedMaterial.prototype.copy = function (source) {\n    LineBasicMaterial.prototype.copy.call(this, source);\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  };\n\n  var Materials =\n  /*#__PURE__*/\n  Object.freeze({\n    ShadowMaterial: ShadowMaterial,\n    SpriteMaterial: SpriteMaterial,\n    RawShaderMaterial: RawShaderMaterial,\n    ShaderMaterial: ShaderMaterial,\n    PointsMaterial: PointsMaterial,\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\n    MeshStandardMaterial: MeshStandardMaterial,\n    MeshPhongMaterial: MeshPhongMaterial,\n    MeshToonMaterial: MeshToonMaterial,\n    MeshNormalMaterial: MeshNormalMaterial,\n    MeshLambertMaterial: MeshLambertMaterial,\n    MeshDepthMaterial: MeshDepthMaterial,\n    MeshDistanceMaterial: MeshDistanceMaterial,\n    MeshBasicMaterial: MeshBasicMaterial,\n    MeshMatcapMaterial: MeshMatcapMaterial,\n    LineDashedMaterial: LineDashedMaterial,\n    LineBasicMaterial: LineBasicMaterial,\n    Material: Material\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var Cache = {\n    enabled: false,\n    files: {},\n    add: function (key, file) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n      this.files[key] = file;\n    },\n    get: function (key) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n      return this.files[key];\n    },\n    remove: function (key) {\n      delete this.files[key];\n    },\n    clear: function () {\n      this.files = {};\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LoadingManager(onLoad, onProgress, onError) {\n    var scope = this;\n    var isLoading = false;\n    var itemsLoaded = 0;\n    var itemsTotal = 0;\n    var urlModifier = undefined; // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n\n      return url;\n    };\n\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n      return this;\n    };\n  }\n\n  var DefaultLoadingManager = new LoadingManager();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var loading = {};\n\n  function FileLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(FileLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      } // Check if request is duplicate\n\n\n      if (loading[url] !== undefined) {\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        return;\n      } // Check for data: URI\n\n\n      var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n      var dataUriRegexResult = url.match(dataUriRegex); // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n      if (dataUriRegexResult) {\n        var mimeType = dataUriRegexResult[1];\n        var isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) data = window.atob(data);\n\n        try {\n          var response;\n          var responseType = (this.responseType || '').toLowerCase();\n\n          switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n              var view = new Uint8Array(data.length);\n\n              for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n              }\n\n              if (responseType === 'blob') {\n                response = new Blob([view.buffer], {\n                  type: mimeType\n                });\n              } else {\n                response = view.buffer;\n              }\n\n              break;\n\n            case 'document':\n              var parser = new DOMParser();\n              response = parser.parseFromString(data, mimeType);\n              break;\n\n            case 'json':\n              response = JSON.parse(data);\n              break;\n\n            default:\n              // 'text' or other\n              response = data;\n              break;\n          } // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n          window.setTimeout(function () {\n            if (onLoad) onLoad(response);\n            scope.manager.itemEnd(url);\n          }, 0);\n        } catch (error) {\n          // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n          window.setTimeout(function () {\n            if (onError) onError(error);\n            scope.manager.itemEnd(url);\n            scope.manager.itemError(url);\n          }, 0);\n        }\n      } else {\n        // Initialise array for duplicate requests\n        loading[url] = [];\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.addEventListener('load', function (event) {\n          var response = this.response;\n          Cache.add(url, response);\n          var callbacks = loading[url];\n          delete loading[url];\n\n          if (this.status === 200 || this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            if (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.');\n\n            for (var i = 0, il = callbacks.length; i < il; i++) {\n              var callback = callbacks[i];\n              if (callback.onLoad) callback.onLoad(response);\n            }\n\n            scope.manager.itemEnd(url);\n          } else {\n            for (var i = 0, il = callbacks.length; i < il; i++) {\n              var callback = callbacks[i];\n              if (callback.onError) callback.onError(event);\n            }\n\n            scope.manager.itemEnd(url);\n            scope.manager.itemError(url);\n          }\n        }, false);\n        request.addEventListener('progress', function (event) {\n          var callbacks = loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onProgress) callback.onProgress(event);\n          }\n        }, false);\n        request.addEventListener('error', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }, false);\n        request.addEventListener('abort', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }, false);\n        if (this.responseType !== undefined) request.responseType = this.responseType;\n        if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n        if (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n        for (var header in this.requestHeader) {\n          request.setRequestHeader(header, this.requestHeader[header]);\n        }\n\n        request.send(null);\n      }\n\n      scope.manager.itemStart(url);\n      return request;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    },\n    setResponseType: function (value) {\n      this.responseType = value;\n      return this;\n    },\n    setWithCredentials: function (value) {\n      this.withCredentials = value;\n      return this;\n    },\n    setMimeType: function (value) {\n      this.mimeType = value;\n      return this;\n    },\n    setRequestHeader: function (value) {\n      this.requestHeader = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   */\n\n  function CompressedTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  }\n\n  Object.assign(CompressedTextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new CompressedTexture();\n      texture.image = images;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        var loaded = 0;\n\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var i = 0; i < texDatas.mipmapCount; i++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }, onProgress, onError);\n      }\n\n      return texture;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author Nikos M. / https://github.com/foo123/\n   *\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   */\n\n  function DataTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  }\n\n  Object.assign(DataTextureLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new DataTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        var texData = scope._parser(buffer);\n\n        if (!texData) return;\n\n        if (undefined !== texData.image) {\n          texture.image = texData.image;\n        } else if (undefined !== texData.data) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n        texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n        texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n        texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n        if (undefined !== texData.format) {\n          texture.format = texData.format;\n        }\n\n        if (undefined !== texData.type) {\n          texture.type = texData.type;\n        }\n\n        if (undefined !== texData.mipmaps) {\n          texture.mipmaps = texData.mipmaps;\n        }\n\n        if (1 === texData.mipmapCount) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture, texData);\n      }, onProgress, onError);\n      return texture;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ImageLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(ImageLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n      function onImageLoad() {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        Cache.add(url, this);\n        if (onLoad) onLoad(this);\n        scope.manager.itemEnd(url);\n      }\n\n      function onImageError(event) {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        if (onError) onError(event);\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      }\n\n      image.addEventListener('load', onImageLoad, false);\n      image.addEventListener('error', onImageError, false);\n\n      if (url.substr(0, 5) !== 'data:') {\n        if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n      }\n\n      scope.manager.itemStart(url);\n      image.src = url;\n      return image;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CubeTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(CubeTextureLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function (urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function TextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(TextureLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function (url, onLoad, onProgress, onError) {\n      var texture = new Texture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      loader.load(url, function (image) {\n        texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n        var isJPEG = url.search(/\\.jpe?g$/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? RGBFormat : RGBAFormat;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Extensible curve object\n   *\n   * Some common of curve methods:\n   * .getPoint( t, optionalTarget ), .getTangent( t )\n   * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following curves inherit from THREE.Curve:\n   *\n   * -- 2D curves --\n   * THREE.ArcCurve\n   * THREE.CubicBezierCurve\n   * THREE.EllipseCurve\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.SplineCurve\n   *\n   * -- 3D curves --\n   * THREE.CatmullRomCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath.\n   *\n   **/\n\n  /**************************************************************\n   *\tAbstract Curve base class\n   **************************************************************/\n\n  function Curve() {\n    this.type = 'Curve';\n    this.arcLengthDivisions = 200;\n  }\n\n  Object.assign(Curve.prototype, {\n    // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n    getPoint: function ()\n    /* t, optionalTarget */\n    {\n      console.warn('THREE.Curve: .getPoint() not implemented.');\n      return null;\n    },\n    // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n    getPointAt: function (u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t, optionalTarget);\n    },\n    // Get sequence of points using getPoint( t )\n    getPoints: function (divisions) {\n      if (divisions === undefined) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    },\n    // Get sequence of points using getPointAt( u )\n    getSpacedPoints: function (divisions) {\n      if (divisions === undefined) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    },\n    // Get total curve arc length\n    getLength: function () {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    },\n    // Get list of cumulative segment lengths\n    getLengths: function (divisions) {\n      if (divisions === undefined) divisions = this.arcLengthDivisions;\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var p,\n          sum = 0;\n      cache.push(0);\n\n      for (p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n    },\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.getLengths();\n    },\n    // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n    getUtoTmapping: function (u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0,\n          il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high;\n\n      if (arcLengths[i] === targetArcLength) {\n        return i / (il - 1);\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    },\n    // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n    getTangent: function (t) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) t1 = 0;\n      if (t2 > 1) t2 = 1;\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var vec = pt2.clone().sub(pt1);\n      return vec.normalize();\n    },\n    getTangentAt: function (u) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t);\n    },\n    computeFrenetFrames: function (segments, closed) {\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n      var normal = new Vector3();\n      var tangents = [];\n      var normals = [];\n      var binormals = [];\n      var vec = new Vector3();\n      var mat = new Matrix4();\n      var i, u, theta; // compute the tangent vectors for each segment on the curve\n\n      for (i = 0; i <= segments; i++) {\n        u = i / segments;\n        tangents[i] = this.getTangentAt(u);\n        tangents[i].normalize();\n      } // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the minimum tangent xyz component\n\n\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      var min = Number.MAX_VALUE;\n      var tx = Math.abs(tangents[0].x);\n      var ty = Math.abs(tangents[0].y);\n      var tz = Math.abs(tangents[0].z);\n\n      if (tx <= min) {\n        min = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= min) {\n        min = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= min) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n      for (i = 1; i <= segments; i++) {\n        normals[i] = normals[i - 1].clone();\n        binormals[i] = binormals[i - 1].clone();\n        vec.crossVectors(tangents[i - 1], tangents[i]);\n\n        if (vec.length() > Number.EPSILON) {\n          vec.normalize();\n          theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n          normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n        }\n\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n      if (closed === true) {\n        theta = Math.acos(_Math.clamp(normals[0].dot(normals[segments]), -1, 1));\n        theta /= segments;\n\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n          theta = -theta;\n        }\n\n        for (i = 1; i <= segments; i++) {\n          // twist a little...\n          normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n          binormals[i].crossVectors(tangents[i], normals[i]);\n        }\n      }\n\n      return {\n        tangents: tangents,\n        normals: normals,\n        binormals: binormals\n      };\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.arcLengthDivisions = source.arcLengthDivisions;\n      return this;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Curve',\n          generator: 'Curve.toJSON'\n        }\n      };\n      data.arcLengthDivisions = this.arcLengthDivisions;\n      data.type = this.type;\n      return data;\n    },\n    fromJSON: function (json) {\n      this.arcLengthDivisions = json.arcLengthDivisions;\n      return this;\n    }\n  });\n\n  function EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    Curve.call(this);\n    this.type = 'EllipseCurve';\n    this.aX = aX || 0;\n    this.aY = aY || 0;\n    this.xRadius = xRadius || 1;\n    this.yRadius = yRadius || 1;\n    this.aStartAngle = aStartAngle || 0;\n    this.aEndAngle = aEndAngle || 2 * Math.PI;\n    this.aClockwise = aClockwise || false;\n    this.aRotation = aRotation || 0;\n  }\n\n  EllipseCurve.prototype = Object.create(Curve.prototype);\n  EllipseCurve.prototype.constructor = EllipseCurve;\n  EllipseCurve.prototype.isEllipseCurve = true;\n\n  EllipseCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var twoPi = Math.PI * 2;\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\n    var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n    while (deltaAngle < 0) deltaAngle += twoPi;\n\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    var angle = this.aStartAngle + t * deltaAngle;\n    var x = this.aX + this.xRadius * Math.cos(angle);\n    var y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      var cos = Math.cos(this.aRotation);\n      var sin = Math.sin(this.aRotation);\n      var tx = x - this.aX;\n      var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return point.set(x, y);\n  };\n\n  EllipseCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.aX = source.aX;\n    this.aY = source.aY;\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n    this.aClockwise = source.aClockwise;\n    this.aRotation = source.aRotation;\n    return this;\n  };\n\n  EllipseCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.aX = this.aX;\n    data.aY = this.aY;\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n    data.aClockwise = this.aClockwise;\n    data.aRotation = this.aRotation;\n    return data;\n  };\n\n  EllipseCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.aX = json.aX;\n    this.aY = json.aY;\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n    this.aClockwise = json.aClockwise;\n    this.aRotation = json.aRotation;\n    return this;\n  };\n\n  function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    this.type = 'ArcCurve';\n  }\n\n  ArcCurve.prototype = Object.create(EllipseCurve.prototype);\n  ArcCurve.prototype.constructor = ArcCurve;\n  ArcCurve.prototype.isArcCurve = true;\n  /**\n   * @author zz85 https://github.com/zz85\n   *\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  /*\n  Based on an optimized c++ solution in\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n   - http://ideone.com/NoEbVM\n  \tThis CubicPoly class could be used for reusing some variables and calculations,\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\n  which can be placed in CurveUtils.\n  */\n\n  function CubicPoly() {\n    var c0 = 0,\n        c1 = 0,\n        c2 = 0,\n        c3 = 0;\n    /*\n     * Compute coefficients for a cubic polynomial\n     *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *   p(0) = x0, p(1) = x1\n     *  and\n     *   p'(0) = t0, p'(1) = t1.\n     */\n\n    function init(x0, x1, t0, t1) {\n      c0 = x0;\n      c1 = t0;\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    }\n\n    return {\n      initCatmullRom: function (x0, x1, x2, x3, tension) {\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n      },\n      initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n        // compute tangents when parameterized in [t1,t2]\n        var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n        var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n        t1 *= dt1;\n        t2 *= dt1;\n        init(x1, x2, t1, t2);\n      },\n      calc: function (t) {\n        var t2 = t * t;\n        var t3 = t2 * t;\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\n      }\n    };\n  } //\n\n\n  var tmp = new Vector3();\n  var px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n\n  function CatmullRomCurve3(points, closed, curveType, tension) {\n    Curve.call(this);\n    this.type = 'CatmullRomCurve3';\n    this.points = points || [];\n    this.closed = closed || false;\n    this.curveType = curveType || 'centripetal';\n    this.tension = tension || 0.5;\n  }\n\n  CatmullRomCurve3.prototype = Object.create(Curve.prototype);\n  CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n  CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n  CatmullRomCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var points = this.points;\n    var l = points.length;\n    var p = (l - (this.closed ? 0 : 1)) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3; // 4 points\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.curveType === 'catmullrom') {\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n    }\n\n    point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return point;\n  };\n\n  CatmullRomCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    this.closed = source.closed;\n    this.curveType = source.curveType;\n    this.tension = source.tension;\n    return this;\n  };\n\n  CatmullRomCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    data.closed = this.closed;\n    data.curveType = this.curveType;\n    data.tension = this.tension;\n    return data;\n  };\n\n  CatmullRomCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector3().fromArray(point));\n    }\n\n    this.closed = json.closed;\n    this.curveType = json.curveType;\n    this.tension = json.tension;\n    return this;\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Bezier Curves formulas obtained from\n   * http://en.wikipedia.org/wiki/Bézier_curve\n   */\n\n\n  function CatmullRom(t, p0, p1, p2, p3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  } //\n\n\n  function QuadraticBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  }\n\n  function QuadraticBezierP1(t, p) {\n    return 2 * (1 - t) * t * p;\n  }\n\n  function QuadraticBezierP2(t, p) {\n    return t * t * p;\n  }\n\n  function QuadraticBezier(t, p0, p1, p2) {\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n  } //\n\n\n  function CubicBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  }\n\n  function CubicBezierP1(t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  }\n\n  function CubicBezierP2(t, p) {\n    return 3 * (1 - t) * t * t * p;\n  }\n\n  function CubicBezierP3(t, p) {\n    return t * t * t * p;\n  }\n\n  function CubicBezier(t, p0, p1, p2, p3) {\n    return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n  }\n\n  function CubicBezierCurve(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.type = 'CubicBezierCurve';\n    this.v0 = v0 || new Vector2();\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n    this.v3 = v3 || new Vector2();\n  }\n\n  CubicBezierCurve.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve.prototype.constructor = CubicBezierCurve;\n  CubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n  CubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n    return point;\n  };\n\n  CubicBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function CubicBezierCurve3(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.type = 'CubicBezierCurve3';\n    this.v0 = v0 || new Vector3();\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n    this.v3 = v3 || new Vector3();\n  }\n\n  CubicBezierCurve3.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n  CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n  CubicBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n    return point;\n  };\n\n  CubicBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function LineCurve(v1, v2) {\n    Curve.call(this);\n    this.type = 'LineCurve';\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n  }\n\n  LineCurve.prototype = Object.create(Curve.prototype);\n  LineCurve.prototype.constructor = LineCurve;\n  LineCurve.prototype.isLineCurve = true;\n\n  LineCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve.prototype.getTangent = function ()\n  /* t */\n  {\n    var tangent = this.v2.clone().sub(this.v1);\n    return tangent.normalize();\n  };\n\n  LineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function LineCurve3(v1, v2) {\n    Curve.call(this);\n    this.type = 'LineCurve3';\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n  }\n\n  LineCurve3.prototype = Object.create(Curve.prototype);\n  LineCurve3.prototype.constructor = LineCurve3;\n  LineCurve3.prototype.isLineCurve3 = true;\n\n  LineCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve3.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve(v0, v1, v2) {\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve';\n    this.v0 = v0 || new Vector2();\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n  }\n\n  QuadraticBezierCurve.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n  QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n  QuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n    return point;\n  };\n\n  QuadraticBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve3(v0, v1, v2) {\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve3';\n    this.v0 = v0 || new Vector3();\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n  }\n\n  QuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n  QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n  QuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n    return point;\n  };\n\n  QuadraticBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function SplineCurve(points\n  /* array of Vector2 */\n  ) {\n    Curve.call(this);\n    this.type = 'SplineCurve';\n    this.points = points || [];\n  }\n\n  SplineCurve.prototype = Object.create(Curve.prototype);\n  SplineCurve.prototype.constructor = SplineCurve;\n  SplineCurve.prototype.isSplineCurve = true;\n\n  SplineCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var points = this.points;\n    var p = (points.length - 1) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n    var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    var p1 = points[intPoint];\n    var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n    return point;\n  };\n\n  SplineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    return this;\n  };\n\n  SplineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    return data;\n  };\n\n  SplineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n\n    return this;\n  };\n\n  var Curves =\n  /*#__PURE__*/\n  Object.freeze({\n    ArcCurve: ArcCurve,\n    CatmullRomCurve3: CatmullRomCurve3,\n    CubicBezierCurve: CubicBezierCurve,\n    CubicBezierCurve3: CubicBezierCurve3,\n    EllipseCurve: EllipseCurve,\n    LineCurve: LineCurve,\n    LineCurve3: LineCurve3,\n    QuadraticBezierCurve: QuadraticBezierCurve,\n    QuadraticBezierCurve3: QuadraticBezierCurve3,\n    SplineCurve: SplineCurve\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   **/\n\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *  curves, but retains the api of a curve\n   **************************************************************/\n\n  function CurvePath() {\n    Curve.call(this);\n    this.type = 'CurvePath';\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n\n  CurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n    constructor: CurvePath,\n    add: function (curve) {\n      this.curves.push(curve);\n    },\n    closePath: function () {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new LineCurve(endPoint, startPoint));\n      }\n    },\n    // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n    getPoint: function (t) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    },\n    // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n    getLength: function () {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    },\n    // cacheLengths must be recalculated.\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getCurveLengths();\n    },\n    // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n    getCurveLengths: function () {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [],\n          sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    },\n    getSpacedPoints: function (divisions) {\n      if (divisions === undefined) divisions = 40;\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    getPoints: function (divisions) {\n      divisions = divisions || 12;\n      var points = [],\n          last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    copy: function (source) {\n      Curve.prototype.copy.call(this, source);\n      this.curves = [];\n\n      for (var i = 0, l = source.curves.length; i < l; i++) {\n        var curve = source.curves[i];\n        this.curves.push(curve.clone());\n      }\n\n      this.autoClose = source.autoClose;\n      return this;\n    },\n    toJSON: function () {\n      var data = Curve.prototype.toJSON.call(this);\n      data.autoClose = this.autoClose;\n      data.curves = [];\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        var curve = this.curves[i];\n        data.curves.push(curve.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function (json) {\n      Curve.prototype.fromJSON.call(this, json);\n      this.autoClose = json.autoClose;\n      this.curves = [];\n\n      for (var i = 0, l = json.curves.length; i < l; i++) {\n        var curve = json.curves[i];\n        this.curves.push(new Curves[curve.type]().fromJSON(curve));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Creates free form 2d path using series of points, lines or curves.\n   **/\n\n  function Path(points) {\n    CurvePath.call(this);\n    this.type = 'Path';\n    this.currentPoint = new Vector2();\n\n    if (points) {\n      this.setFromPoints(points);\n    }\n  }\n\n  Path.prototype = Object.assign(Object.create(CurvePath.prototype), {\n    constructor: Path,\n    setFromPoints: function (points) {\n      this.moveTo(points[0].x, points[0].y);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        this.lineTo(points[i].x, points[i].y);\n      }\n    },\n    moveTo: function (x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n    },\n    lineTo: function (x, y) {\n      var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    splineThru: function (pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n    },\n    arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    },\n    absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n    },\n    copy: function (source) {\n      CurvePath.prototype.copy.call(this, source);\n      this.currentPoint.copy(source.currentPoint);\n      return this;\n    },\n    toJSON: function () {\n      var data = CurvePath.prototype.toJSON.call(this);\n      data.currentPoint = this.currentPoint.toArray();\n      return data;\n    },\n    fromJSON: function (json) {\n      CurvePath.prototype.fromJSON.call(this, json);\n      this.currentPoint.fromArray(json.currentPoint);\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Defines a 2d shape plane using paths.\n   **/\n  // STEP 1 Create a path.\n  // STEP 2 Turn path into shape.\n  // STEP 3 ExtrudeGeometry takes in Shape/Shapes\n  // STEP 3a - Extract points from each shape, turn to vertices\n  // STEP 3b - Triangulate each shape, add faces.\n\n  function Shape(points) {\n    Path.call(this, points);\n    this.uuid = _Math.generateUUID();\n    this.type = 'Shape';\n    this.holes = [];\n  }\n\n  Shape.prototype = Object.assign(Object.create(Path.prototype), {\n    constructor: Shape,\n    getPointsHoles: function (divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    },\n    // get points of shape and holes (keypoints based on segments parameter)\n    extractPoints: function (divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    },\n    copy: function (source) {\n      Path.prototype.copy.call(this, source);\n      this.holes = [];\n\n      for (var i = 0, l = source.holes.length; i < l; i++) {\n        var hole = source.holes[i];\n        this.holes.push(hole.clone());\n      }\n\n      return this;\n    },\n    toJSON: function () {\n      var data = Path.prototype.toJSON.call(this);\n      data.uuid = this.uuid;\n      data.holes = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        var hole = this.holes[i];\n        data.holes.push(hole.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function (json) {\n      Path.prototype.fromJSON.call(this, json);\n      this.uuid = json.uuid;\n      this.holes = [];\n\n      for (var i = 0, l = json.holes.length; i < l; i++) {\n        var hole = json.holes[i];\n        this.holes.push(new Path().fromJSON(hole));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Light(color, intensity) {\n    Object3D.call(this);\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity !== undefined ? intensity : 1;\n    this.receiveShadow = undefined;\n  }\n\n  Light.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Light,\n    isLight: true,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n      if (this.distance !== undefined) data.object.distance = this.distance;\n      if (this.angle !== undefined) data.object.angle = this.angle;\n      if (this.decay !== undefined) data.object.decay = this.decay;\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n      if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n      return data;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function HemisphereLight(skyColor, groundColor, intensity) {\n    Light.call(this, skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.castShadow = undefined;\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n\n  HemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: HemisphereLight,\n    isHemisphereLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LightShadow(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.radius = 1;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.matrix = new Matrix4();\n  }\n\n  Object.assign(LightShadow.prototype, {\n    copy: function (source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function () {\n      var object = {};\n      if (this.bias !== 0) object.bias = this.bias;\n      if (this.radius !== 1) object.radius = this.radius;\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n      object.camera = this.camera.toJSON(false).object;\n      delete object.camera.matrix;\n      return object;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function SpotLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n  }\n\n  SpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: SpotLightShadow,\n    isSpotLightShadow: true,\n    update: function (light) {\n      var camera = this.camera;\n      var fov = _Math.RAD2DEG * 2 * light.angle;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || camera.far;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function SpotLight(color, intensity, distance, angle, penumbra, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / Math.PI;\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.angle = angle !== undefined ? angle : Math.PI / 3;\n    this.penumbra = penumbra !== undefined ? penumbra : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new SpotLightShadow();\n  }\n\n  SpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: SpotLight,\n    isSpotLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PointLight(color, intensity, distance, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'PointLight';\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / (4 * Math.PI);\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new LightShadow(new PerspectiveCamera(90, 1, 0.5, 500));\n  }\n\n  PointLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: PointLight,\n    isPointLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author arose / http://github.com/arose\n   */\n\n  function OrthographicCamera(left, right, top, bottom, near, far) {\n    Camera.call(this);\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.updateProjectionMatrix();\n  }\n\n  OrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: OrthographicCamera,\n    isOrthographicCamera: true,\n    copy: function (source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    },\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null && this.view.enabled) {\n        var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n        var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n        var scaleW = (this.right - this.left) / this.view.width;\n        var scaleH = (this.top - this.bottom) / this.view.height;\n        left += scaleW * (this.view.offsetX / zoomW);\n        right = left + scaleW * (this.view.width / zoomW);\n        top -= scaleH * (this.view.offsetY / zoomH);\n        bottom = top - scaleH * (this.view.height / zoomH);\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n      this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectionalLightShadow() {\n    LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  }\n\n  DirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: DirectionalLightShadow\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DirectionalLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.shadow = new DirectionalLightShadow();\n  }\n\n  DirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: DirectionalLight,\n    isDirectionalLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AmbientLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'AmbientLight';\n    this.castShadow = undefined;\n  }\n\n  AmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: AmbientLight,\n    isAmbientLight: true\n  });\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n\n  function RectAreaLight(color, intensity, width, height) {\n    Light.call(this, color, intensity);\n    this.type = 'RectAreaLight';\n    this.width = width !== undefined ? width : 10;\n    this.height = height !== undefined ? height : 10;\n  }\n\n  RectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: RectAreaLight,\n    isRectAreaLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.width = source.width;\n      this.height = source.height;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Light.prototype.toJSON.call(this, meta);\n      data.object.width = this.width;\n      data.object.height = this.height;\n      return data;\n    }\n  });\n  /**\n   * @author tschw\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  var AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function (array, from, to) {\n      if (AnimationUtils.isTypedArray(array)) {\n        // in ios9 array.subarray(from, undefined) will return empty array\n        // but array.subarray(from) or array.subarray(from, len) is correct\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function (array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) return array;\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function (object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function (times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var i = 0; i !== n; ++i) result[i] = i;\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function (values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n        var srcOffset = order[i] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) return; // no data\n\n      var value = key[valuePropertyName];\n      if (value === undefined) return; // no data\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    }\n  };\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   * @author tschw\n   */\n\n  function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  }\n\n  Object.assign(Interpolant.prototype, {\n    evaluate: function (t) {\n      var pp = this.parameterPositions,\n          i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) break forward_scan; // after end\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.afterEnd_(i1 - 1, t, t0);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.beforeStart_(0, t, t1);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.beforeStart_(0, t, t1);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.afterEnd_(i1 - 1, t0, t);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    },\n    settings: null,\n    // optional, subclass-specific settings structure\n    // Note: The indirection allows central control of many interpolants.\n    // --- Protected interface\n    DefaultSettings_: {},\n    getSettings_: function () {\n      return this.settings || this.DefaultSettings_;\n    },\n    copySampleValue_: function (index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    },\n    // Template methods for derived classes:\n    interpolate_: function ()\n    /* i1, t0, t, t1 */\n    {\n      throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n    },\n    intervalChanged_: function ()\n    /* i1, t0, t1 */\n    {// empty\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(Interpolant.prototype, {\n    //( 0, t, t0 ), returns this.resultBuffer\n    beforeStart_: Interpolant.prototype.copySampleValue_,\n    //( N-1, tN-1, t ), returns this.resultBuffer\n    afterEnd_: Interpolant.prototype.copySampleValue_\n  });\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   *\n   * @author tschw\n   */\n\n  function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  }\n\n  CubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: CubicInterpolant,\n    DefaultSettings_: {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    },\n    intervalChanged_: function (i1, t0, t1) {\n      var pp = this.parameterPositions,\n          iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    },\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  });\n  /**\n   * @author tschw\n   */\n\n  function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  LinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: LinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   *\n   * @author tschw\n   */\n\n  function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  DiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: DiscreteInterpolant,\n    interpolate_: function (i1\n    /*, t0, t, t1 */\n    ) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  });\n  /**\n   *\n   * A timed sequence of keyframes for a specific property.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function KeyframeTrack(name, times, values, interpolation) {\n    if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n    if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  } // Static methods\n\n\n  Object.assign(KeyframeTrack, {\n    // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n    toJSON: function (track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== undefined) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': AnimationUtils.convertArray(track.times, Array),\n          'values': AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    }\n  });\n  Object.assign(KeyframeTrack.prototype, {\n    constructor: KeyframeTrack,\n    TimeBufferType: Float32Array,\n    ValueBufferType: Float32Array,\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodDiscrete: function (result) {\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodLinear: function (result) {\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: function (result) {\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    setInterpolation: function (interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn('THREE.KeyframeTrack:', message);\n        return this;\n      }\n\n      this.createInterpolant = factoryMethod;\n      return this;\n    },\n    getInterpolation: function () {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return InterpolateSmooth;\n      }\n    },\n    getValueSize: function () {\n      return this.values.length / this.times.length;\n    },\n    // move all keyframes either forwards or backwards in time\n    shift: function (timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    },\n    // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    scale: function (timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    },\n    // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    trim: function (startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length,\n          from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) {\n        ++from;\n      }\n\n      while (to !== -1 && times[to] > endTime) {\n        --to;\n      }\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) to = Math.max(to, 1), from = to - 1;\n        var stride = this.getValueSize();\n        this.times = AnimationUtils.arraySlice(times, from, to);\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    },\n    // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    validate: function () {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error('THREE.KeyframeTrack: Track is empty.', this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (AnimationUtils.isTypedArray(values)) {\n          for (var i = 0, n = values.length; i !== n; ++i) {\n            var value = values[i];\n\n            if (isNaN(value)) {\n              console.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    },\n    // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    optimize: function () {\n      var times = this.times,\n          values = this.values,\n          stride = this.getValueSize(),\n          smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n          writeIndex = 1,\n          lastIndex = times.length - 1;\n\n      for (var i = 1; i < lastIndex; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== time[0])) {\n          if (!smoothInterpolation) {\n            // remove unnecessary keyframes same as their neighbors\n            var offset = i * stride,\n                offsetP = offset - stride,\n                offsetN = offset + stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              var value = values[offset + j];\n\n              if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n                keep = true;\n                break;\n              }\n            }\n          } else {\n            keep = true;\n          }\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              values[writeOffset + j] = values[readOffset + j];\n            }\n          }\n\n          ++writeIndex;\n        }\n      } // flush last keyframe (compaction looks ahead)\n\n\n      if (lastIndex > 0) {\n        times[writeIndex] = times[lastIndex];\n\n        for (var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n          values[writeOffset + j] = values[readOffset + j];\n        }\n\n        ++writeIndex;\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      }\n\n      return this;\n    }\n  });\n  /**\n   *\n   * A Track of Boolean keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function BooleanKeyframeTrack(name, times, values) {\n    KeyframeTrack.call(this, name, times, values);\n  }\n\n  BooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: BooleanKeyframeTrack,\n    ValueTypeName: 'bool',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n    // representation of a single value and a custom interpolant that\n    // computes \"firstValue ^ isOdd( index )\".\n\n  });\n  /**\n   *\n   * A Track of keyframe values that represent color.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function ColorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  ColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: ColorKeyframeTrack,\n    ValueTypeName: 'color' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n    // Note: Very basic implementation and nothing special yet.\n    // However, this is the place for color space parameterization.\n\n  });\n  /**\n   *\n   * A Track of numeric keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function NumberKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  NumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: NumberKeyframeTrack,\n    ValueTypeName: 'number' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   * Spherical linear unit quaternion interpolant.\n   *\n   * @author tschw\n   */\n\n  function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  QuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: QuaternionLinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = i1 * stride,\n          alpha = (t - t0) / (t1 - t0);\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * A Track of quaternion keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function QuaternionKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  QuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: QuaternionKeyframeTrack,\n    ValueTypeName: 'quaternion',\n    // ValueBufferType is inherited\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodLinear: function (result) {\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n  });\n  /**\n   *\n   * A Track that interpolates Strings\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function StringKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  StringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: StringKeyframeTrack,\n    ValueTypeName: 'string',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined\n  });\n  /**\n   *\n   * A Track of vectored keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function VectorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  VectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: VectorKeyframeTrack,\n    ValueTypeName: 'vector' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   *\n   * Reusable set of Tracks that represent an animation.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  function AnimationClip(name, duration, tracks) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration !== undefined ? duration : -1;\n    this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n\n  function getTrackTypeForValueTypeName(typeName) {\n    switch (typeName.toLowerCase()) {\n      case 'scalar':\n      case 'double':\n      case 'float':\n      case 'number':\n      case 'integer':\n        return NumberKeyframeTrack;\n\n      case 'vector':\n      case 'vector2':\n      case 'vector3':\n      case 'vector4':\n        return VectorKeyframeTrack;\n\n      case 'color':\n        return ColorKeyframeTrack;\n\n      case 'quaternion':\n        return QuaternionKeyframeTrack;\n\n      case 'bool':\n      case 'boolean':\n        return BooleanKeyframeTrack;\n\n      case 'string':\n        return StringKeyframeTrack;\n    }\n\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n  }\n\n  function parseKeyframeTrack(json) {\n    if (json.type === undefined) {\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n    }\n\n    var trackType = getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  }\n\n  Object.assign(AnimationClip, {\n    parse: function (json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n      }\n\n      return new AnimationClip(json.name, json.duration, tracks);\n    },\n    toJSON: function (clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks,\n        'uuid': clip.uuid\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    },\n    CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = AnimationUtils.getKeyframeOrder(times);\n        times = AnimationUtils.sortedArray(times, 1, order);\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new AnimationClip(name, -1, tracks);\n    },\n    findByName: function (objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    },\n    CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var name in animationToMorphTargets) {\n        clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n      }\n\n      return clips;\n    },\n    // parse the animation.hierarchy format\n    parseAnimation: function (animation, bones) {\n      if (!animation) {\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n        return null;\n      }\n\n      var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var fps = animation.fps || 30;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n\n          for (var k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * (fps || 1.0);\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new AnimationClip(clipName, duration, tracks);\n      return clip;\n    }\n  });\n  Object.assign(AnimationClip.prototype, {\n    resetDuration: function () {\n      var tracks = this.tracks,\n          duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n      return this;\n    },\n    trim: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    },\n    validate: function () {\n      var valid = true;\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        valid = valid && this.tracks[i].validate();\n      }\n\n      return valid;\n    },\n    optimize: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function MaterialLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.textures = {};\n  }\n\n  Object.assign(MaterialLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    setTextures: function (value) {\n      this.textures = value;\n    },\n    parse: function (json) {\n      var textures = this.textures;\n\n      function getTexture(name) {\n        if (textures[name] === undefined) {\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\n        }\n\n        return textures[name];\n      }\n\n      var material = new Materials[json.type]();\n      if (json.uuid !== undefined) material.uuid = json.uuid;\n      if (json.name !== undefined) material.name = json.name;\n      if (json.color !== undefined) material.color.setHex(json.color);\n      if (json.roughness !== undefined) material.roughness = json.roughness;\n      if (json.metalness !== undefined) material.metalness = json.metalness;\n      if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n      if (json.specular !== undefined) material.specular.setHex(json.specular);\n      if (json.shininess !== undefined) material.shininess = json.shininess;\n      if (json.clearCoat !== undefined) material.clearCoat = json.clearCoat;\n      if (json.clearCoatRoughness !== undefined) material.clearCoatRoughness = json.clearCoatRoughness;\n      if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n      if (json.fog !== undefined) material.fog = json.fog;\n      if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n      if (json.blending !== undefined) material.blending = json.blending;\n      if (json.combine !== undefined) material.combine = json.combine;\n      if (json.side !== undefined) material.side = json.side;\n      if (json.opacity !== undefined) material.opacity = json.opacity;\n      if (json.transparent !== undefined) material.transparent = json.transparent;\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n      if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n      if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n      if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n      if (json.rotation !== undefined) material.rotation = json.rotation;\n      if (json.linewidth !== 1) material.linewidth = json.linewidth;\n      if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n      if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n      if (json.scale !== undefined) material.scale = json.scale;\n      if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n      if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n      if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n      if (json.skinning !== undefined) material.skinning = json.skinning;\n      if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n      if (json.dithering !== undefined) material.dithering = json.dithering;\n      if (json.visible !== undefined) material.visible = json.visible;\n      if (json.userData !== undefined) material.userData = json.userData; // Shader Material\n\n      if (json.uniforms !== undefined) {\n        for (var name in json.uniforms) {\n          var uniform = json.uniforms[name];\n          material.uniforms[name] = {};\n\n          switch (uniform.type) {\n            case 't':\n              material.uniforms[name].value = getTexture(uniform.value);\n              break;\n\n            case 'c':\n              material.uniforms[name].value = new Color().setHex(uniform.value);\n              break;\n\n            case 'v2':\n              material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n              break;\n\n            case 'v3':\n              material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n              break;\n\n            case 'v4':\n              material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n              break;\n\n            case 'm4':\n              material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n              break;\n\n            default:\n              material.uniforms[name].value = uniform.value;\n          }\n        }\n      }\n\n      if (json.defines !== undefined) material.defines = json.defines;\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader; // Deprecated\n\n      if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n      // for PointsMaterial\n\n      if (json.size !== undefined) material.size = json.size;\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n      if (json.map !== undefined) material.map = getTexture(json.map);\n\n      if (json.alphaMap !== undefined) {\n        material.alphaMap = getTexture(json.alphaMap);\n        material.transparent = true;\n      }\n\n      if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n      if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n      if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n      if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n      if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n      if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n      if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n      if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n      if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n      if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n      if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n      if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n      return material;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferGeometryLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(BufferGeometryLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      var geometry = new BufferGeometry();\n      var index = json.data.index;\n\n      if (index !== undefined) {\n        var typedArray = new TYPED_ARRAYS[index.type](index.array);\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n        geometry.addAttribute(key, new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var i = 0, n = groups.length; i !== n; ++i) {\n          var group = groups[i];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n      }\n\n      return geometry;\n    }\n  });\n  var TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    // Workaround for IE11 pre KB2929437. See #11440\n    Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Loader() {}\n\n  Loader.Handlers = {\n    handlers: [],\n    add: function (regex, loader) {\n      this.handlers.push(regex, loader);\n    },\n    get: function (file) {\n      var handlers = this.handlers;\n\n      for (var i = 0, l = handlers.length; i < l; i += 2) {\n        var regex = handlers[i];\n        var loader = handlers[i + 1];\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    }\n  };\n  Object.assign(Loader.prototype, {\n    crossOrigin: 'anonymous',\n    onLoadStart: function () {},\n    onLoadProgress: function () {},\n    onLoadComplete: function () {},\n    initMaterials: function (materials, texturePath, crossOrigin) {\n      var array = [];\n\n      for (var i = 0; i < materials.length; ++i) {\n        array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n      }\n\n      return array;\n    },\n    createMaterial: function () {\n      var BlendingMode = {\n        NoBlending: NoBlending,\n        NormalBlending: NormalBlending,\n        AdditiveBlending: AdditiveBlending,\n        SubtractiveBlending: SubtractiveBlending,\n        MultiplyBlending: MultiplyBlending,\n        CustomBlending: CustomBlending\n      };\n      var color = new Color();\n      var textureLoader = new TextureLoader();\n      var materialLoader = new MaterialLoader();\n      return function createMaterial(m, texturePath, crossOrigin) {\n        // convert from old material format\n        var textures = {};\n\n        function loadTexture(path, repeat, offset, wrap, anisotropy) {\n          var fullPath = texturePath + path;\n          var loader = Loader.Handlers.get(fullPath);\n          var texture;\n\n          if (loader !== null) {\n            texture = loader.load(fullPath);\n          } else {\n            textureLoader.setCrossOrigin(crossOrigin);\n            texture = textureLoader.load(fullPath);\n          }\n\n          if (repeat !== undefined) {\n            texture.repeat.fromArray(repeat);\n            if (repeat[0] !== 1) texture.wrapS = RepeatWrapping;\n            if (repeat[1] !== 1) texture.wrapT = RepeatWrapping;\n          }\n\n          if (offset !== undefined) {\n            texture.offset.fromArray(offset);\n          }\n\n          if (wrap !== undefined) {\n            if (wrap[0] === 'repeat') texture.wrapS = RepeatWrapping;\n            if (wrap[0] === 'mirror') texture.wrapS = MirroredRepeatWrapping;\n            if (wrap[1] === 'repeat') texture.wrapT = RepeatWrapping;\n            if (wrap[1] === 'mirror') texture.wrapT = MirroredRepeatWrapping;\n          }\n\n          if (anisotropy !== undefined) {\n            texture.anisotropy = anisotropy;\n          }\n\n          var uuid = _Math.generateUUID();\n\n          textures[uuid] = texture;\n          return uuid;\n        } //\n\n\n        var json = {\n          uuid: _Math.generateUUID(),\n          type: 'MeshLambertMaterial'\n        };\n\n        for (var name in m) {\n          var value = m[name];\n\n          switch (name) {\n            case 'DbgColor':\n            case 'DbgIndex':\n            case 'opticalDensity':\n            case 'illumination':\n              break;\n\n            case 'DbgName':\n              json.name = value;\n              break;\n\n            case 'blending':\n              json.blending = BlendingMode[value];\n              break;\n\n            case 'colorAmbient':\n            case 'mapAmbient':\n              console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n              break;\n\n            case 'colorDiffuse':\n              json.color = color.fromArray(value).getHex();\n              break;\n\n            case 'colorSpecular':\n              json.specular = color.fromArray(value).getHex();\n              break;\n\n            case 'colorEmissive':\n              json.emissive = color.fromArray(value).getHex();\n              break;\n\n            case 'specularCoef':\n              json.shininess = value;\n              break;\n\n            case 'shading':\n              if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n              if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n              if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n              break;\n\n            case 'mapDiffuse':\n              json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n              break;\n\n            case 'mapDiffuseRepeat':\n            case 'mapDiffuseOffset':\n            case 'mapDiffuseWrap':\n            case 'mapDiffuseAnisotropy':\n              break;\n\n            case 'mapEmissive':\n              json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n              break;\n\n            case 'mapEmissiveRepeat':\n            case 'mapEmissiveOffset':\n            case 'mapEmissiveWrap':\n            case 'mapEmissiveAnisotropy':\n              break;\n\n            case 'mapLight':\n              json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n              break;\n\n            case 'mapLightRepeat':\n            case 'mapLightOffset':\n            case 'mapLightWrap':\n            case 'mapLightAnisotropy':\n              break;\n\n            case 'mapAO':\n              json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n              break;\n\n            case 'mapAORepeat':\n            case 'mapAOOffset':\n            case 'mapAOWrap':\n            case 'mapAOAnisotropy':\n              break;\n\n            case 'mapBump':\n              json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n              break;\n\n            case 'mapBumpScale':\n              json.bumpScale = value;\n              break;\n\n            case 'mapBumpRepeat':\n            case 'mapBumpOffset':\n            case 'mapBumpWrap':\n            case 'mapBumpAnisotropy':\n              break;\n\n            case 'mapNormal':\n              json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n              break;\n\n            case 'mapNormalFactor':\n              json.normalScale = value;\n              break;\n\n            case 'mapNormalRepeat':\n            case 'mapNormalOffset':\n            case 'mapNormalWrap':\n            case 'mapNormalAnisotropy':\n              break;\n\n            case 'mapSpecular':\n              json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n              break;\n\n            case 'mapSpecularRepeat':\n            case 'mapSpecularOffset':\n            case 'mapSpecularWrap':\n            case 'mapSpecularAnisotropy':\n              break;\n\n            case 'mapMetalness':\n              json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n              break;\n\n            case 'mapMetalnessRepeat':\n            case 'mapMetalnessOffset':\n            case 'mapMetalnessWrap':\n            case 'mapMetalnessAnisotropy':\n              break;\n\n            case 'mapRoughness':\n              json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n              break;\n\n            case 'mapRoughnessRepeat':\n            case 'mapRoughnessOffset':\n            case 'mapRoughnessWrap':\n            case 'mapRoughnessAnisotropy':\n              break;\n\n            case 'mapAlpha':\n              json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n              break;\n\n            case 'mapAlphaRepeat':\n            case 'mapAlphaOffset':\n            case 'mapAlphaWrap':\n            case 'mapAlphaAnisotropy':\n              break;\n\n            case 'flipSided':\n              json.side = BackSide;\n              break;\n\n            case 'doubleSided':\n              json.side = DoubleSide;\n              break;\n\n            case 'transparency':\n              console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n              json.opacity = value;\n              break;\n\n            case 'depthTest':\n            case 'depthWrite':\n            case 'colorWrite':\n            case 'opacity':\n            case 'reflectivity':\n            case 'transparent':\n            case 'visible':\n            case 'wireframe':\n              json[name] = value;\n              break;\n\n            case 'vertexColors':\n              if (value === true) json.vertexColors = VertexColors;\n              if (value === 'face') json.vertexColors = FaceColors;\n              break;\n\n            default:\n              console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n              break;\n          }\n        }\n\n        if (json.type === 'MeshBasicMaterial') delete json.emissive;\n        if (json.type !== 'MeshPhongMaterial') delete json.specular;\n        if (json.opacity < 1) json.transparent = true;\n        materialLoader.setTextures(textures);\n        return materialLoader.parse(json);\n      };\n    }()\n  });\n  /**\n   * @author Don McCurdy / https://www.donmccurdy.com\n   */\n\n  var LoaderUtils = {\n    decodeText: function (array) {\n      if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder().decode(array);\n      } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n      // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n      var s = '';\n\n      for (var i = 0, il = array.length; i < il; i++) {\n        // Implicitly assumes little-endian.\n        s += String.fromCharCode(array[i]);\n      } // Merges multi-byte utf-8 characters.\n\n\n      return decodeURIComponent(escape(s));\n    },\n    extractUrlBase: function (url) {\n      var index = url.lastIndexOf('/');\n      if (index === -1) return './';\n      return url.substr(0, index + 1);\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function JSONLoader(manager) {\n    if (typeof manager === 'boolean') {\n      console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n      manager = undefined;\n    }\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.withCredentials = false;\n  }\n\n  Object.assign(JSONLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === undefined ? LoaderUtils.extractUrlBase(url) : this.path;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        var json = JSON.parse(text);\n        var metadata = json.metadata;\n\n        if (metadata !== undefined) {\n          var type = metadata.type;\n\n          if (type !== undefined) {\n            if (type.toLowerCase() === 'object') {\n              console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n              return;\n            }\n          }\n        }\n\n        var object = scope.parse(json, path);\n        onLoad(object.geometry, object.materials);\n      }, onProgress, onError);\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    },\n    setResourcePath: function (value) {\n      this.resourcePath = value;\n      return this;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    parse: function () {\n      function parseModel(json, geometry) {\n        function isBitSet(value, position) {\n          return value & 1 << position;\n        }\n\n        var i,\n            j,\n            fi,\n            offset,\n            zLength,\n            colorIndex,\n            normalIndex,\n            uvIndex,\n            materialIndex,\n            type,\n            isQuad,\n            hasMaterial,\n            hasFaceVertexUv,\n            hasFaceNormal,\n            hasFaceVertexNormal,\n            hasFaceColor,\n            hasFaceVertexColor,\n            vertex,\n            face,\n            faceA,\n            faceB,\n            hex,\n            normal,\n            uvLayer,\n            uv,\n            u,\n            v,\n            faces = json.faces,\n            vertices = json.vertices,\n            normals = json.normals,\n            colors = json.colors,\n            scale = json.scale,\n            nUvLayers = 0;\n\n        if (json.uvs !== undefined) {\n          // disregard empty arrays\n          for (i = 0; i < json.uvs.length; i++) {\n            if (json.uvs[i].length) nUvLayers++;\n          }\n\n          for (i = 0; i < nUvLayers; i++) {\n            geometry.faceVertexUvs[i] = [];\n          }\n        }\n\n        offset = 0;\n        zLength = vertices.length;\n\n        while (offset < zLength) {\n          vertex = new Vector3();\n          vertex.x = vertices[offset++] * scale;\n          vertex.y = vertices[offset++] * scale;\n          vertex.z = vertices[offset++] * scale;\n          geometry.vertices.push(vertex);\n        }\n\n        offset = 0;\n        zLength = faces.length;\n\n        while (offset < zLength) {\n          type = faces[offset++];\n          isQuad = isBitSet(type, 0);\n          hasMaterial = isBitSet(type, 1);\n          hasFaceVertexUv = isBitSet(type, 3);\n          hasFaceNormal = isBitSet(type, 4);\n          hasFaceVertexNormal = isBitSet(type, 5);\n          hasFaceColor = isBitSet(type, 6);\n          hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n          if (isQuad) {\n            faceA = new Face3();\n            faceA.a = faces[offset];\n            faceA.b = faces[offset + 1];\n            faceA.c = faces[offset + 3];\n            faceB = new Face3();\n            faceB.a = faces[offset + 1];\n            faceB.b = faces[offset + 2];\n            faceB.c = faces[offset + 3];\n            offset += 4;\n\n            if (hasMaterial) {\n              materialIndex = faces[offset++];\n              faceA.materialIndex = materialIndex;\n              faceB.materialIndex = materialIndex;\n            } // to get face <=> uv index correspondence\n\n\n            fi = geometry.faces.length;\n\n            if (hasFaceVertexUv) {\n              for (i = 0; i < nUvLayers; i++) {\n                uvLayer = json.uvs[i];\n                geometry.faceVertexUvs[i][fi] = [];\n                geometry.faceVertexUvs[i][fi + 1] = [];\n\n                for (j = 0; j < 4; j++) {\n                  uvIndex = faces[offset++];\n                  u = uvLayer[uvIndex * 2];\n                  v = uvLayer[uvIndex * 2 + 1];\n                  uv = new Vector2(u, v);\n                  if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                  if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n                }\n              }\n            }\n\n            if (hasFaceNormal) {\n              normalIndex = faces[offset++] * 3;\n              faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              faceB.normal.copy(faceA.normal);\n            }\n\n            if (hasFaceVertexNormal) {\n              for (i = 0; i < 4; i++) {\n                normalIndex = faces[offset++] * 3;\n                normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n                if (i !== 2) faceA.vertexNormals.push(normal);\n                if (i !== 0) faceB.vertexNormals.push(normal);\n              }\n            }\n\n            if (hasFaceColor) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              faceA.color.setHex(hex);\n              faceB.color.setHex(hex);\n            }\n\n            if (hasFaceVertexColor) {\n              for (i = 0; i < 4; i++) {\n                colorIndex = faces[offset++];\n                hex = colors[colorIndex];\n                if (i !== 2) faceA.vertexColors.push(new Color(hex));\n                if (i !== 0) faceB.vertexColors.push(new Color(hex));\n              }\n            }\n\n            geometry.faces.push(faceA);\n            geometry.faces.push(faceB);\n          } else {\n            face = new Face3();\n            face.a = faces[offset++];\n            face.b = faces[offset++];\n            face.c = faces[offset++];\n\n            if (hasMaterial) {\n              materialIndex = faces[offset++];\n              face.materialIndex = materialIndex;\n            } // to get face <=> uv index correspondence\n\n\n            fi = geometry.faces.length;\n\n            if (hasFaceVertexUv) {\n              for (i = 0; i < nUvLayers; i++) {\n                uvLayer = json.uvs[i];\n                geometry.faceVertexUvs[i][fi] = [];\n\n                for (j = 0; j < 3; j++) {\n                  uvIndex = faces[offset++];\n                  u = uvLayer[uvIndex * 2];\n                  v = uvLayer[uvIndex * 2 + 1];\n                  uv = new Vector2(u, v);\n                  geometry.faceVertexUvs[i][fi].push(uv);\n                }\n              }\n            }\n\n            if (hasFaceNormal) {\n              normalIndex = faces[offset++] * 3;\n              face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            }\n\n            if (hasFaceVertexNormal) {\n              for (i = 0; i < 3; i++) {\n                normalIndex = faces[offset++] * 3;\n                normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n                face.vertexNormals.push(normal);\n              }\n            }\n\n            if (hasFaceColor) {\n              colorIndex = faces[offset++];\n              face.color.setHex(colors[colorIndex]);\n            }\n\n            if (hasFaceVertexColor) {\n              for (i = 0; i < 3; i++) {\n                colorIndex = faces[offset++];\n                face.vertexColors.push(new Color(colors[colorIndex]));\n              }\n            }\n\n            geometry.faces.push(face);\n          }\n        }\n      }\n\n      function parseSkin(json, geometry) {\n        var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n        if (json.skinWeights) {\n          for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n            var x = json.skinWeights[i];\n            var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n            var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n            var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n            geometry.skinWeights.push(new Vector4(x, y, z, w));\n          }\n        }\n\n        if (json.skinIndices) {\n          for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n            var a = json.skinIndices[i];\n            var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n            var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n            var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n            geometry.skinIndices.push(new Vector4(a, b, c, d));\n          }\n        }\n\n        geometry.bones = json.bones;\n\n        if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n          console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n        }\n      }\n\n      function parseMorphing(json, geometry) {\n        var scale = json.scale;\n\n        if (json.morphTargets !== undefined) {\n          for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n            geometry.morphTargets[i] = {};\n            geometry.morphTargets[i].name = json.morphTargets[i].name;\n            geometry.morphTargets[i].vertices = [];\n            var dstVertices = geometry.morphTargets[i].vertices;\n            var srcVertices = json.morphTargets[i].vertices;\n\n            for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n              var vertex = new Vector3();\n              vertex.x = srcVertices[v] * scale;\n              vertex.y = srcVertices[v + 1] * scale;\n              vertex.z = srcVertices[v + 2] * scale;\n              dstVertices.push(vertex);\n            }\n          }\n        }\n\n        if (json.morphColors !== undefined && json.morphColors.length > 0) {\n          console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n          var faces = geometry.faces;\n          var morphColors = json.morphColors[0].colors;\n\n          for (var i = 0, l = faces.length; i < l; i++) {\n            faces[i].color.fromArray(morphColors, i * 3);\n          }\n        }\n      }\n\n      function parseAnimations(json, geometry) {\n        var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n        var animations = [];\n\n        if (json.animation !== undefined) {\n          animations.push(json.animation);\n        }\n\n        if (json.animations !== undefined) {\n          if (json.animations.length) {\n            animations = animations.concat(json.animations);\n          } else {\n            animations.push(json.animations);\n          }\n        }\n\n        for (var i = 0; i < animations.length; i++) {\n          var clip = AnimationClip.parseAnimation(animations[i], geometry.bones);\n          if (clip) outputAnimations.push(clip);\n        } // parse implicit morph animations\n\n\n        if (geometry.morphTargets) {\n          // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n          var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n          outputAnimations = outputAnimations.concat(morphAnimationClips);\n        }\n\n        if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n      }\n\n      return function parse(json, path) {\n        if (json.data !== undefined) {\n          // Geometry 4.0 spec\n          json = json.data;\n        }\n\n        if (json.scale !== undefined) {\n          json.scale = 1.0 / json.scale;\n        } else {\n          json.scale = 1.0;\n        }\n\n        var geometry = new Geometry();\n        parseModel(json, geometry);\n        parseSkin(json, geometry);\n        parseMorphing(json, geometry);\n        parseAnimations(json, geometry);\n        geometry.computeFaceNormals();\n        geometry.computeBoundingSphere();\n\n        if (json.materials === undefined || json.materials.length === 0) {\n          return {\n            geometry: geometry\n          };\n        } else {\n          var materials = Loader.prototype.initMaterials(json.materials, this.resourcePath || path, this.crossOrigin);\n          return {\n            geometry: geometry,\n            materials: materials\n          };\n        }\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ObjectLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.texturePath = '';\n  }\n\n  Object.assign(ObjectLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function (url, onLoad, onProgress, onError) {\n      if (this.texturePath === '') {\n        this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n      }\n\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.');\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    },\n    setTexturePath: function (value) {\n      this.texturePath = value;\n      return this;\n    },\n    setCrossOrigin: function (value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    parse: function (json, onLoad) {\n      var shapes = this.parseShape(json.shapes);\n      var geometries = this.parseGeometries(json.geometries, shapes);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials);\n\n      if (json.animations) {\n        object.animations = this.parseAnimations(json.animations);\n      }\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    },\n    parseShape: function (json) {\n      var shapes = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var shape = new Shape().fromJSON(json[i]);\n          shapes[shape.uuid] = shape;\n        }\n      }\n\n      return shapes;\n    },\n    parseGeometries: function (json, shapes) {\n      var geometries = {};\n\n      if (json !== undefined) {\n        var geometryLoader = new JSONLoader();\n        var bufferGeometryLoader = new BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'PlaneGeometry':\n            case 'PlaneBufferGeometry':\n              geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n              break;\n\n            case 'BoxGeometry':\n            case 'BoxBufferGeometry':\n            case 'CubeGeometry':\n              // backwards compatible\n              geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n              break;\n\n            case 'CircleGeometry':\n            case 'CircleBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'CylinderGeometry':\n            case 'CylinderBufferGeometry':\n              geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'ConeGeometry':\n            case 'ConeBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'SphereGeometry':\n            case 'SphereBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'DodecahedronGeometry':\n            case 'DodecahedronBufferGeometry':\n            case 'IcosahedronGeometry':\n            case 'IcosahedronBufferGeometry':\n            case 'OctahedronGeometry':\n            case 'OctahedronBufferGeometry':\n            case 'TetrahedronGeometry':\n            case 'TetrahedronBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.detail);\n              break;\n\n            case 'RingGeometry':\n            case 'RingBufferGeometry':\n              geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'TorusGeometry':\n            case 'TorusBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n              break;\n\n            case 'TorusKnotGeometry':\n            case 'TorusKnotBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n              break;\n\n            case 'LatheGeometry':\n            case 'LatheBufferGeometry':\n              geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n              break;\n\n            case 'PolyhedronGeometry':\n            case 'PolyhedronBufferGeometry':\n              geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n              break;\n\n            case 'ShapeGeometry':\n            case 'ShapeBufferGeometry':\n              var geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n              break;\n\n            case 'ExtrudeGeometry':\n            case 'ExtrudeBufferGeometry':\n              var geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              var extrudePath = data.options.extrudePath;\n\n              if (extrudePath !== undefined) {\n                data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.options);\n              break;\n\n            case 'BufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              geometry = geometryLoader.parse(data, this.texturePath).geometry;\n              break;\n\n            default:\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n              continue;\n          }\n\n          geometry.uuid = data.uuid;\n          if (data.name !== undefined) geometry.name = data.name;\n          if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    },\n    parseMaterials: function (json, textures) {\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.type === 'MultiMaterial') {\n            // Deprecated\n            var array = [];\n\n            for (var j = 0; j < data.materials.length; j++) {\n              array.push(loader.parse(data.materials[j]));\n            }\n\n            materials[data.uuid] = array;\n          } else {\n            materials[data.uuid] = loader.parse(data);\n          }\n        }\n      }\n\n      return materials;\n    },\n    parseAnimations: function (json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var data = json[i];\n        var clip = AnimationClip.parse(data);\n        if (data.uuid !== undefined) clip.uuid = data.uuid;\n        animations.push(clip);\n      }\n\n      return animations;\n    },\n    parseImages: function (json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        }, undefined, function () {\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        });\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.texturePath + currentUrl;\n              images[image.uuid].push(loadImage(path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n            images[image.uuid] = loadImage(path);\n          }\n        }\n      }\n\n      return images;\n    },\n    parseTextures: function (json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    },\n    parseObject: function (data, geometries, materials) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (Array.isArray(name)) {\n          var array = [];\n\n          for (var i = 0, l = name.length; i < l; i++) {\n            var uuid = name[i];\n\n            if (materials[uuid] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\n            }\n\n            array.push(materials[uuid]);\n          }\n\n          return array;\n        }\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              object.background = new Color(data.background);\n            }\n          }\n\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n\n          break;\n\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'RectAreaLight':\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n          break;\n\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'SkinnedMesh':\n          console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n        case 'Mesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new SkinnedMesh(geometry, material);\n          } else {\n            object = new Mesh(geometry, material);\n          }\n\n          break;\n\n        case 'LOD':\n          object = new LOD();\n          break;\n\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'LineLoop':\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n      }\n\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    }\n  });\n  var TEXTURE_MAPPING = {\n    UVMapping: UVMapping,\n    CubeReflectionMapping: CubeReflectionMapping,\n    CubeRefractionMapping: CubeRefractionMapping,\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n    SphericalReflectionMapping: SphericalReflectionMapping,\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\n    CubeUVRefractionMapping: CubeUVRefractionMapping\n  };\n  var TEXTURE_WRAPPING = {\n    RepeatWrapping: RepeatWrapping,\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\n    MirroredRepeatWrapping: MirroredRepeatWrapping\n  };\n  var TEXTURE_FILTER = {\n    NearestFilter: NearestFilter,\n    NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n    NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n    LinearFilter: LinearFilter,\n    LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n    LinearMipMapLinearFilter: LinearMipMapLinearFilter\n  };\n  /**\n   * @author thespite / http://clicktorelease.com/\n   */\n\n  function ImageBitmapLoader(manager) {\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.options = undefined;\n  }\n\n  ImageBitmapLoader.prototype = {\n    constructor: ImageBitmapLoader,\n    setOptions: function setOptions(options) {\n      this.options = options;\n      return this;\n    },\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      fetch(url).then(function (res) {\n        return res.blob();\n      }).then(function (blob) {\n        return createImageBitmap(blob, scope.options);\n      }).then(function (imageBitmap) {\n        Cache.add(url, imageBitmap);\n        if (onLoad) onLoad(imageBitmap);\n        scope.manager.itemEnd(url);\n      }).catch(function (e) {\n        if (onError) onError(e);\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      });\n    },\n    setCrossOrigin: function ()\n    /* value */\n    {\n      return this;\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n   **/\n\n  function ShapePath() {\n    this.type = 'ShapePath';\n    this.color = new Color();\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  Object.assign(ShapePath.prototype, {\n    moveTo: function (x, y) {\n      this.currentPath = new Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n    },\n    lineTo: function (x, y) {\n      this.currentPath.lineTo(x, y);\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n    },\n    splineThru: function (pts) {\n      this.currentPath.splineThru(pts);\n    },\n    toShapes: function (isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var tmpPath = inSubpaths[i];\n          var tmpShape = new Shape();\n          tmpShape.curves = tmpPath.curves;\n          shapes.push(tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n        // toggling of inside/outside at every single! intersection point of an edge\n        //  with the horizontal line through inPt, left of inPt\n        //  not counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n              if (perpEdge === 0) return true; // inPt is on contour ?\n\n              if (perpEdge < 0) continue;\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\n            // edge lies on the same horizontal line as inPt\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n            // continue;\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n      if (subPaths.length === 0) return [];\n      if (noHoles === true) return toShapesNoHoles(subPaths);\n      var solid,\n          tmpPath,\n          tmpShape,\n          shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n          newShapes[mainIdx] = {\n            s: new Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n          if (holesFirst) mainIdx++;\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = [];\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          var sho = newShapeHoles[sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (sIdx !== s2Idx) toChange.push({\n                  froms: sIdx,\n                  tos: s2Idx,\n                  hole: hIdx\n                });\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[sIdx].push(ho);\n            }\n          }\n        } // console.log(\"ambiguous: \", ambiguous);\n\n\n        if (toChange.length > 0) {\n          // console.log(\"to change: \", toChange);\n          if (!ambiguous) newShapeHoles = betterShapeHoles;\n        }\n      }\n\n      var tmpHoles;\n\n      for (var i = 0, il = newShapes.length; i < il; i++) {\n        tmpShape = newShapes[i].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[i];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Font(data) {\n    this.type = 'Font';\n    this.data = data;\n  }\n\n  Object.assign(Font.prototype, {\n    isFont: true,\n    generateShapes: function (text, size) {\n      if (size === undefined) size = 100;\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    }\n  });\n\n  function createPaths(text, size, data) {\n    var chars = Array.from ? Array.from(text) : String(text).split(''); // see #13988\n\n    var scale = size / data.resolution;\n    var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n    var paths = [];\n    var offsetX = 0,\n        offsetY = 0;\n\n    for (var i = 0; i < chars.length; i++) {\n      var char = chars[i];\n\n      if (char === '\\n') {\n        offsetX = 0;\n        offsetY -= line_height;\n      } else {\n        var ret = createPath(char, scale, offsetX, offsetY, data);\n        offsetX += ret.offsetX;\n        paths.push(ret.path);\n      }\n    }\n\n    return paths;\n  }\n\n  function createPath(char, scale, offsetX, offsetY, data) {\n    var glyph = data.glyphs[char] || data.glyphs['?'];\n    if (!glyph) return;\n    var path = new ShapePath();\n    var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n    if (glyph.o) {\n      var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n      for (var i = 0, l = outline.length; i < l;) {\n        var action = outline[i++];\n\n        switch (action) {\n          case 'm':\n            // moveTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.moveTo(x, y);\n            break;\n\n          case 'l':\n            // lineTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.lineTo(x, y);\n            break;\n\n          case 'q':\n            // quadraticCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n            break;\n\n          case 'b':\n            // bezierCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            cpx2 = outline[i++] * scale + offsetX;\n            cpy2 = outline[i++] * scale + offsetY;\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n            break;\n        }\n      }\n    }\n\n    return {\n      offsetX: glyph.ha * scale,\n      path: path\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function FontLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(FontLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      return new Font(json);\n    },\n    setPath: function (value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var context;\n  var AudioContext = {\n    getContext: function () {\n      if (context === undefined) {\n        context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return context;\n    },\n    setContext: function (value) {\n      context = value;\n    }\n  };\n  /**\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function AudioLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(AudioLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        // Create a copy of the buffer. The `decodeAudioData` method\n        // detaches the buffer when complete, preventing reuse.\n        var bufferCopy = buffer.slice(0);\n        var context = AudioContext.getContext();\n        context.decodeAudioData(bufferCopy, function (audioBuffer) {\n          onLoad(audioBuffer);\n        });\n      }, onProgress, onError);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function StereoCamera() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n  }\n\n  Object.assign(StereoCamera.prototype, {\n    update: function () {\n      var instance, focus, fov, aspect, near, far, zoom, eyeSep;\n      var eyeRight = new Matrix4();\n      var eyeLeft = new Matrix4();\n      return function update(camera) {\n        var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n        if (needsUpdate) {\n          instance = this;\n          focus = camera.focus;\n          fov = camera.fov;\n          aspect = camera.aspect * this.aspect;\n          near = camera.near;\n          far = camera.far;\n          zoom = camera.zoom; // Off-axis stereoscopic effect based on\n          // http://paulbourke.net/stereographics/stereorender/\n\n          var projectionMatrix = camera.projectionMatrix.clone();\n          eyeSep = this.eyeSep / 2;\n          var eyeSepOnProjection = eyeSep * near / focus;\n          var ymax = near * Math.tan(_Math.DEG2RAD * fov * 0.5) / zoom;\n          var xmin, xmax; // translate xOffset\n\n          eyeLeft.elements[12] = -eyeSep;\n          eyeRight.elements[12] = eyeSep; // for left eye\n\n          xmin = -ymax * aspect + eyeSepOnProjection;\n          xmax = ymax * aspect + eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n          xmin = -ymax * aspect - eyeSepOnProjection;\n          xmax = ymax * aspect - eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraR.projectionMatrix.copy(projectionMatrix);\n        }\n\n        this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n        this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n      };\n    }()\n  });\n  /**\n   * Camera for rendering cube maps\n   *\t- renders scene into axis-aligned cube\n   *\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CubeCamera(near, far, cubeResolution) {\n    Object3D.call(this);\n    this.type = 'CubeCamera';\n    var fov = 90,\n        aspect = 1;\n    var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(cameraPX);\n    var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n    this.add(cameraNX);\n    var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(cameraPY);\n    var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n    this.add(cameraNY);\n    var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(cameraPZ);\n    var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n    this.add(cameraNZ);\n    var options = {\n      format: RGBFormat,\n      magFilter: LinearFilter,\n      minFilter: LinearFilter\n    };\n    this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n    this.renderTarget.texture.name = \"CubeCamera\";\n\n    this.update = function (renderer, scene) {\n      if (this.parent === null) this.updateMatrixWorld();\n      var renderTarget = this.renderTarget;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderTarget.activeCubeFace = 0;\n      renderer.render(scene, cameraPX, renderTarget);\n      renderTarget.activeCubeFace = 1;\n      renderer.render(scene, cameraNX, renderTarget);\n      renderTarget.activeCubeFace = 2;\n      renderer.render(scene, cameraPY, renderTarget);\n      renderTarget.activeCubeFace = 3;\n      renderer.render(scene, cameraNY, renderTarget);\n      renderTarget.activeCubeFace = 4;\n      renderer.render(scene, cameraPZ, renderTarget);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderTarget.activeCubeFace = 5;\n      renderer.render(scene, cameraNZ, renderTarget);\n      renderer.setRenderTarget(null);\n    };\n\n    this.clear = function (renderer, color, depth, stencil) {\n      var renderTarget = this.renderTarget;\n\n      for (var i = 0; i < 6; i++) {\n        renderTarget.activeCubeFace = i;\n        renderer.setRenderTarget(renderTarget);\n        renderer.clear(color, depth, stencil);\n      }\n\n      renderer.setRenderTarget(null);\n    };\n  }\n\n  CubeCamera.prototype = Object.create(Object3D.prototype);\n  CubeCamera.prototype.constructor = CubeCamera;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioListener() {\n    Object3D.call(this);\n    this.type = 'AudioListener';\n    this.context = AudioContext.getContext();\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n  }\n\n  AudioListener.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: AudioListener,\n    getInput: function () {\n      return this.gain;\n    },\n    removeFilter: function () {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n\n      return this;\n    },\n    getFilter: function () {\n      return this.filter;\n    },\n    setFilter: function (value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n      return this;\n    },\n    getMasterVolume: function () {\n      return this.gain.gain.value;\n    },\n    setMasterVolume: function (value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    },\n    updateMatrixWorld: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      var scale = new Vector3();\n      var orientation = new Vector3();\n      return function updateMatrixWorld(force) {\n        Object3D.prototype.updateMatrixWorld.call(this, force);\n        var listener = this.context.listener;\n        var up = this.up;\n        this.matrixWorld.decompose(position, quaternion, scale);\n        orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n        if (listener.positionX) {\n          listener.positionX.setValueAtTime(position.x, this.context.currentTime);\n          listener.positionY.setValueAtTime(position.y, this.context.currentTime);\n          listener.positionZ.setValueAtTime(position.z, this.context.currentTime);\n          listener.forwardX.setValueAtTime(orientation.x, this.context.currentTime);\n          listener.forwardY.setValueAtTime(orientation.y, this.context.currentTime);\n          listener.forwardZ.setValueAtTime(orientation.z, this.context.currentTime);\n          listener.upX.setValueAtTime(up.x, this.context.currentTime);\n          listener.upY.setValueAtTime(up.y, this.context.currentTime);\n          listener.upZ.setValueAtTime(up.z, this.context.currentTime);\n        } else {\n          listener.setPosition(position.x, position.y, position.z);\n          listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n        }\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function Audio(listener) {\n    Object3D.call(this);\n    this.type = 'Audio';\n    this.context = listener.context;\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n    this.autoplay = false;\n    this.buffer = null;\n    this.loop = false;\n    this.startTime = 0;\n    this.offset = 0;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.sourceType = 'empty';\n    this.filters = [];\n  }\n\n  Audio.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Audio,\n    getOutput: function () {\n      return this.gain;\n    },\n    setNodeSource: function (audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    },\n    setMediaElementSource: function (mediaElement) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaNode';\n      this.source = this.context.createMediaElementSource(mediaElement);\n      this.connect();\n      return this;\n    },\n    setBuffer: function (audioBuffer) {\n      this.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n      if (this.autoplay) this.play();\n      return this;\n    },\n    play: function () {\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      var source = this.context.createBufferSource();\n      source.buffer = this.buffer;\n      source.loop = this.loop;\n      source.onended = this.onEnded.bind(this);\n      source.playbackRate.setValueAtTime(this.playbackRate, this.startTime);\n      this.startTime = this.context.currentTime;\n      source.start(this.startTime, this.offset);\n      this.isPlaying = true;\n      this.source = source;\n      return this.connect();\n    },\n    pause: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      if (this.isPlaying === true) {\n        this.source.stop();\n        this.source.onended = null;\n        this.offset += (this.context.currentTime - this.startTime) * this.playbackRate;\n        this.isPlaying = false;\n      }\n\n      return this;\n    },\n    stop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.stop();\n      this.source.onended = null;\n      this.offset = 0;\n      this.isPlaying = false;\n      return this;\n    },\n    connect: function () {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      return this;\n    },\n    disconnect: function () {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      return this;\n    },\n    getFilters: function () {\n      return this.filters;\n    },\n    setFilters: function (value) {\n      if (!value) value = [];\n\n      if (this.isPlaying === true) {\n        this.disconnect();\n        this.filters = value;\n        this.connect();\n      } else {\n        this.filters = value;\n      }\n\n      return this;\n    },\n    getFilter: function () {\n      return this.getFilters()[0];\n    },\n    setFilter: function (filter) {\n      return this.setFilters(filter ? [filter] : []);\n    },\n    setPlaybackRate: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime);\n      }\n\n      return this;\n    },\n    getPlaybackRate: function () {\n      return this.playbackRate;\n    },\n    onEnded: function () {\n      this.isPlaying = false;\n    },\n    getLoop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.loop;\n    },\n    setLoop: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.loop = value;\n\n      if (this.isPlaying === true) {\n        this.source.loop = this.loop;\n      }\n\n      return this;\n    },\n    getVolume: function () {\n      return this.gain.gain.value;\n    },\n    setVolume: function (value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PositionalAudio(listener) {\n    Audio.call(this, listener);\n    this.panner = this.context.createPanner();\n    this.panner.connect(this.gain);\n  }\n\n  PositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n    constructor: PositionalAudio,\n    getOutput: function () {\n      return this.panner;\n    },\n    getRefDistance: function () {\n      return this.panner.refDistance;\n    },\n    setRefDistance: function (value) {\n      this.panner.refDistance = value;\n      return this;\n    },\n    getRolloffFactor: function () {\n      return this.panner.rolloffFactor;\n    },\n    setRolloffFactor: function (value) {\n      this.panner.rolloffFactor = value;\n      return this;\n    },\n    getDistanceModel: function () {\n      return this.panner.distanceModel;\n    },\n    setDistanceModel: function (value) {\n      this.panner.distanceModel = value;\n      return this;\n    },\n    getMaxDistance: function () {\n      return this.panner.maxDistance;\n    },\n    setMaxDistance: function (value) {\n      this.panner.maxDistance = value;\n      return this;\n    },\n    setDirectionalCone: function (coneInnerAngle, coneOuterAngle, coneOuterGain) {\n      this.panner.coneInnerAngle = coneInnerAngle;\n      this.panner.coneOuterAngle = coneOuterAngle;\n      this.panner.coneOuterGain = coneOuterGain;\n      return this;\n    },\n    updateMatrixWorld: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      var scale = new Vector3();\n      var orientation = new Vector3();\n      return function updateMatrixWorld(force) {\n        Object3D.prototype.updateMatrixWorld.call(this, force);\n        var panner = this.panner;\n        this.matrixWorld.decompose(position, quaternion, scale);\n        orientation.set(0, 0, 1).applyQuaternion(quaternion);\n        panner.setPosition(position.x, position.y, position.z);\n        panner.setOrientation(orientation.x, orientation.y, orientation.z);\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioAnalyser(audio, fftSize) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n\n  Object.assign(AudioAnalyser.prototype, {\n    getFrequencyData: function () {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    },\n    getAverageFrequency: function () {\n      var value = 0,\n          data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    }\n  });\n  /**\n   *\n   * Buffered scene graph property that allows weighted accumulation.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function PropertyMixer(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var bufferType = Float64Array,\n        mixFunction;\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        break;\n\n      case 'string':\n      case 'bool':\n        bufferType = Array;\n        mixFunction = this._select;\n        break;\n\n      default:\n        mixFunction = this._lerp;\n    }\n\n    this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n\n    this._mixBufferRegion = mixFunction;\n    this.cumulativeWeight = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  Object.assign(PropertyMixer.prototype, {\n    // accumulate data in the 'incoming' region into 'accu<i>'\n    accumulate: function (accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride,\n          currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    },\n    // apply the state of 'accu<i>' to the binding when accus differ\n    apply: function (accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * 3;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    },\n    // remember the state of the bound property and copy it to both accus\n    saveOriginalState: function () {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * 3;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      }\n\n      this.cumulativeWeight = 0;\n    },\n    // apply the state previously taken via 'saveOriginalState' to the binding\n    restoreOriginalState: function () {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    },\n    // mix functions\n    _select: function (buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    },\n    _slerp: function (buffer, dstOffset, srcOffset, t) {\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    },\n    _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    }\n  });\n  /**\n   *\n   * A reference to a real property in the scene graph.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n  // Characters [].:/ are reserved for track binding syntax.\n\n  var RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n  function Composite(targetGroup, path, optionalParsedPath) {\n    var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  Object.assign(Composite.prototype, {\n    getValue: function (array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) binding.getValue(array, offset);\n    },\n    setValue: function (array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    },\n    bind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    },\n    unbind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  });\n\n  function PropertyBinding(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  }\n\n  Object.assign(PropertyBinding, {\n    Composite: Composite,\n    create: function (root, path, parsedPath) {\n      if (!(root && root.isAnimationObjectGroup)) {\n        return new PropertyBinding(root, path, parsedPath);\n      } else {\n        return new PropertyBinding.Composite(root, path, parsedPath);\n      }\n    },\n\n    /**\n     * Replaces spaces with underscores and removes unsupported characters from\n     * node names, to ensure compatibility with parseTrackName().\n     *\n     * @param  {string} name Node name to be sanitized.\n     * @return {string}\n     */\n    sanitizeNodeName: function () {\n      var reservedRe = new RegExp('[' + RESERVED_CHARS_RE + ']', 'g');\n      return function sanitizeNodeName(name) {\n        return name.replace(/\\s/g, '_').replace(reservedRe, '');\n      };\n    }(),\n    parseTrackName: function () {\n      // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n      // only latin characters, and the unicode \\p{L} is not yet supported. So\n      // instead, we exclude reserved characters and match everything else.\n      var wordChar = '[^' + RESERVED_CHARS_RE + ']';\n      var wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n      // be matched to parse the rest of the track name.\n\n      var directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n      var nodeRe = /(WCOD+)?/.source.replace('WCOD', wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n      // characters. Accessor may contain any character except closing bracket.\n\n      var objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n      // contain any non-bracket characters.\n\n      var propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', wordChar);\n      var trackRe = new RegExp('' + '^' + directoryRe + nodeRe + objectRe + propertyRe + '$');\n      var supportedObjectNames = ['material', 'materials', 'bones'];\n      return function parseTrackName(trackName) {\n        var matches = trackRe.exec(trackName);\n\n        if (!matches) {\n          throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n        }\n\n        var results = {\n          // directoryName: matches[ 1 ], // (tschw) currently unused\n          nodeName: matches[2],\n          objectName: matches[3],\n          objectIndex: matches[4],\n          propertyName: matches[5],\n          // required\n          propertyIndex: matches[6]\n        };\n        var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n        if (lastDot !== undefined && lastDot !== -1) {\n          var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against a whitelist. Otherwise, there\n          // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n          // 'bar' could be the objectName, or part of a nodeName (which can\n          // include '.' characters).\n\n          if (supportedObjectNames.indexOf(objectName) !== -1) {\n            results.nodeName = results.nodeName.substring(0, lastDot);\n            results.objectName = objectName;\n          }\n        }\n\n        if (results.propertyName === null || results.propertyName.length === 0) {\n          throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n        }\n\n        return results;\n      };\n    }(),\n    findNode: function (root, nodeName) {\n      if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n        return root;\n      } // search into skeleton bones.\n\n\n      if (root.skeleton) {\n        var bone = root.skeleton.getBoneByName(nodeName);\n\n        if (bone !== undefined) {\n          return bone;\n        }\n      } // search into node subtree.\n\n\n      if (root.children) {\n        var searchNodeSubtree = function (children) {\n          for (var i = 0; i < children.length; i++) {\n            var childNode = children[i];\n\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\n              return childNode;\n            }\n\n            var result = searchNodeSubtree(childNode.children);\n            if (result) return result;\n          }\n\n          return null;\n        };\n\n        var subTreeNode = searchNodeSubtree(root.children);\n\n        if (subTreeNode) {\n          return subTreeNode;\n        }\n      }\n\n      return null;\n    }\n  });\n  Object.assign(PropertyBinding.prototype, {\n    // prototype, continued\n    // these are used to \"bind\" a nonexistent property\n    _getValue_unavailable: function () {},\n    _setValue_unavailable: function () {},\n    BindingType: {\n      Direct: 0,\n      EntireArray: 1,\n      ArrayElement: 2,\n      HasFromToArray: 3\n    },\n    Versioning: {\n      None: 0,\n      NeedsUpdate: 1,\n      MatrixWorldNeedsUpdate: 2\n    },\n    GetterByBindingType: [function getValue_direct(buffer, offset) {\n      buffer[offset] = this.node[this.propertyName];\n    }, function getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }, function getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }, function getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    }],\n    SetterByBindingTypeAndVersioning: [[// Direct\n    function setValue_direct(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n    }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// EntireArray\n    function setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }, function setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// ArrayElement\n    function setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// HasToFromArray\n    function setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }]],\n    getValue: function getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n      // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n      // prototype version of these methods with one that represents\n      // the bound state. When the property is not found, the methods\n      // become no-ops.\n    },\n    setValue: function getValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    },\n    // create getter / setter pair for a property in the scene graph\n    bind: function () {\n      var targetObject = this.node,\n          parsedPath = this.parsedPath,\n          objectName = parsedPath.objectName,\n          propertyName = parsedPath.propertyName,\n          propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n      this.targetObject = targetObject;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === \"morphTargetInfluences\") {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n            return;\n          }\n\n          if (targetObject.geometry.isBufferGeometry) {\n            if (!targetObject.geometry.morphAttributes) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphAttributes.position.length; i++) {\n              if (targetObject.geometry.morphAttributes.position[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          } else {\n            if (!targetObject.geometry.morphTargets) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n              if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (Array.isArray(nodeProperty)) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    },\n    unbind: function () {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(PropertyBinding.prototype, {\n    // initial state of these methods that calls 'bind'\n    _getValue_unbound: PropertyBinding.prototype.getValue,\n    _setValue_unbound: PropertyBinding.prototype.setValue\n  });\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   * \t-\tAdd objects you would otherwise pass as 'root' to the\n   * \t\tconstructor or the .clipAction method of AnimationMixer.\n   *\n   * \t-\tInstead pass this object as 'root'.\n   *\n   * \t-\tYou can also add and remove objects later when the mixer\n   * \t\tis running.\n   *\n   * Note:\n   *\n   *  \tObjects of this class appear as one object to the mixer,\n   *  \tso cache control of the individual objects must be done\n   *  \ton the group.\n   *\n   * Limitation:\n   *\n   * \t- \tThe animated properties must be compatible among the\n   * \t\tall objects in the group.\n   *\n   *  -\tA single property can either be controlled through a\n   *  \ttarget group or directly, but not both.\n   *\n   * @author tschw\n   */\n\n  function AnimationObjectGroup() {\n    this.uuid = _Math.generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  }\n\n  Object.assign(AnimationObjectGroup.prototype, {\n    isAnimationObjectGroup: true,\n    add: function () {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length,\n          knownObject = undefined;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    remove: function () {\n      var objects = this._objects,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // remove & forget\n    uncache: function () {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var lastIndex = --nObjects,\n                lastObject = objects[lastIndex];\n            indicesByUUID[lastObject.uuid] = index;\n            objects[index] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j];\n              bindingsForPath[index] = bindingsForPath[lastIndex];\n              bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // Internal interface used by befriended PropertyBinding.Composite:\n    subscribe_: function (path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path],\n          bindings = this._bindings;\n      if (index !== undefined) return bindings[index];\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    },\n    unsubscribe_: function (path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  });\n  /**\n   *\n   * Action provided by AnimationMixer for scheduling clip playback on specific\n   * objects.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   *\n   */\n\n  function AnimationAction(mixer, clip, localRoot) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot || null;\n    var tracks = clip.tracks,\n        nTracks = tracks.length,\n        interpolants = new Array(nTracks);\n    var interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopRepeat;\n    this._loopCount = -1; // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n\n    this._startTime = null; // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  }\n\n  Object.assign(AnimationAction.prototype, {\n    // State & Scheduling\n    play: function () {\n      this._mixer._activateAction(this);\n\n      return this;\n    },\n    stop: function () {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    },\n    reset: function () {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    },\n    isRunning: function () {\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    },\n    // return true when play has been called\n    isScheduled: function () {\n      return this._mixer._isActiveAction(this);\n    },\n    startAt: function (time) {\n      this._startTime = time;\n      return this;\n    },\n    setLoop: function (mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    },\n    // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n    setEffectiveWeight: function (weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    },\n    // return the weight considering fading and .enabled\n    getEffectiveWeight: function () {\n      return this._effectiveWeight;\n    },\n    fadeIn: function (duration) {\n      return this._scheduleFading(duration, 0, 1);\n    },\n    fadeOut: function (duration) {\n      return this._scheduleFading(duration, 1, 0);\n    },\n    crossFadeFrom: function (fadeOutAction, duration, warp) {\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    },\n    crossFadeTo: function (fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    },\n    stopFading: function () {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    },\n    // Time Scale Control\n    // set the time scale stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n    setEffectiveTimeScale: function (timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    },\n    // return the time scale considering warping and .paused\n    getEffectiveTimeScale: function () {\n      return this._effectiveTimeScale;\n    },\n    setDuration: function (duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    },\n    syncWith: function (action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    },\n    halt: function (duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    },\n    warp: function (startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._timeScaleInterpolant,\n          timeScale = this.timeScale;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    },\n    stopWarping: function () {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    },\n    // Object Accessors\n    getMixer: function () {\n      return this._mixer;\n    },\n    getClip: function () {\n      return this._clip;\n    },\n    getRoot: function () {\n      return this._localRoot || this._mixer._root;\n    },\n    // Interna\n    _update: function (time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      if (!this.enabled) {\n        // call ._updateWeight() to update ._effectiveWeight\n        this._updateWeight(time);\n\n        return;\n      }\n\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        for (var j = 0, m = interpolants.length; j !== m; ++j) {\n          interpolants[j].evaluate(clipTime);\n          propertyMixers[j].accumulate(accuIndex, weight);\n        }\n      }\n    },\n    _updateWeight: function (time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    },\n    _updateTimeScale: function (time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    },\n    _updateTime: function (deltaTime) {\n      var time = this.time + deltaTime;\n      var duration = this._clip.duration;\n      var loop = this.loop;\n      var loopCount = this._loopCount;\n      var pingPong = loop === LoopPingPong;\n\n      if (deltaTime === 0) {\n        if (loopCount === -1) return time;\n        return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n      }\n\n      if (loop === LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this._loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else break handle_stop;\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending <= 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            time = deltaTime > 0 ? duration : 0;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 1) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          this.time = time;\n          return duration - time;\n        }\n      }\n\n      this.time = time;\n      return time;\n    },\n    _setEndings: function (atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = ZeroSlopeEnding;\n        settings.endingEnd = ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = WrapAroundEnding;\n        }\n      }\n    },\n    _scheduleFading: function (duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    }\n  });\n  /**\n   *\n   * Player for AnimationClips.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function AnimationMixer(root) {\n    this._root = root;\n\n    this._initMemoryManager();\n\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n\n  AnimationMixer.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: AnimationMixer,\n    _bindAction: function (action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name,\n            binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    },\n    _activateAction: function (action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    },\n    _deactivateAction: function (action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    },\n    // Memory manager\n    _initMemoryManager: function () {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n      // \t\tactionByRoot: AnimationAction\t\t\t- lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    },\n    // Memory management for AnimationAction objects\n    _isActiveAction: function (action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    },\n    _addInactiveAction: function (action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    },\n    _removeInactiveAction: function (action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (action._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    },\n    _removeInactiveBindingsForAction: function (action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    _lendAction: function (action) {\n      // [ active actions |  inactive actions  ]\n      // [  active actions >| inactive actions ]\n      //                 s        a\n      //                  <-swap->\n      //                 a        s\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    },\n    _takeBackAction: function (action) {\n      // [  active actions  | inactive actions ]\n      // [ active actions |< inactive actions  ]\n      //        a        s\n      //         <-swap->\n      //        s        a\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    },\n    // Memory management for PropertyMixer objects\n    _addInactiveBinding: function (binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          bindings = this._bindings;\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    },\n    _removeInactiveBinding: function (binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      remove_empty_map: {\n        for (var _ in bindingByName) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\n        delete bindingsByRoot[rootUuid];\n      }\n    },\n    _lendBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    },\n    _takeBackBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    },\n    // Memory management of Interpolants for weight and time scale\n    _lendControlInterpolant: function () {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++,\n          interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    },\n    _takeBackControlInterpolant: function (interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    },\n    _controlInterpolantsResultBuffer: new Float32Array(1),\n    // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n    clipAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject !== null ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid],\n          prototypeAction = null;\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) clipObject = prototypeAction._clip;\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) return null; // allocate all resources required to run it\n\n      var newAction = new AnimationAction(this, clipObject, optionalRoot);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    },\n    // get an existing action\n    existingAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    },\n    // deactivates all previously scheduled actions\n    stopAllAction: function () {\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n      this._nActiveActions = 0;\n      this._nActiveBindings = 0;\n\n      for (var i = 0; i !== nActions; ++i) {\n        actions[i].reset();\n      }\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].useCount = 0;\n      }\n\n      return this;\n    },\n    // advance the time and update apply the animation\n    update: function (deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].apply(accuIndex);\n      }\n\n      return this;\n    },\n    // return this mixer's root target object\n    getRoot: function () {\n      return this._root;\n    },\n    // free all resources specific to a particular clip\n    uncacheClip: function (clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    },\n    // free all resources specific to a particular root target object\n    uncacheRoot: function (root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    // remove a targeted clip from the cache\n    uncacheAction: function (clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Uniform(value) {\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n\n    this.value = value;\n  }\n\n  Uniform.prototype.clone = function () {\n    return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n  };\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  function InstancedBufferGeometry() {\n    BufferGeometry.call(this);\n    this.type = 'InstancedBufferGeometry';\n    this.maxInstancedCount = undefined;\n  }\n\n  InstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n    constructor: InstancedBufferGeometry,\n    isInstancedBufferGeometry: true,\n    copy: function (source) {\n      BufferGeometry.prototype.copy.call(this, source);\n      this.maxInstancedCount = source.maxInstancedCount;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n    InterleavedBuffer.call(this, array, stride);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n    constructor: InstancedInterleavedBuffer,\n    isInstancedInterleavedBuffer: true,\n    copy: function (source) {\n      InterleavedBuffer.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedBufferAttribute(array, itemSize, normalized, meshPerAttribute) {\n    if (typeof normalized === 'number') {\n      meshPerAttribute = normalized;\n      normalized = false;\n      console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n    }\n\n    BufferAttribute.call(this, array, itemSize, normalized);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n    constructor: InstancedBufferAttribute,\n    isInstancedBufferAttribute: true,\n    copy: function (source) {\n      BufferAttribute.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author bhouston / http://clara.io/\n   * @author stephomi / http://stephaneginier.com/\n   */\n\n  function Raycaster(origin, direction, near, far) {\n    this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function () {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  }\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function intersectObject(object, raycaster, intersects, recursive) {\n    if (object.visible === false) return;\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }\n\n  Object.assign(Raycaster.prototype, {\n    linePrecision: 1,\n    set: function (origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function (coords, camera) {\n      if (camera && camera.isPerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      } else if (camera && camera.isOrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function (object, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n      intersectObject(object, this, intersects, recursive);\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function (objects, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Clock(autoStart) {\n    this.autoStart = autoStart !== undefined ? autoStart : true;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n\n  Object.assign(Clock.prototype, {\n    start: function () {\n      this.startTime = (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\n      this.oldTime = this.startTime;\n      this.elapsedTime = 0;\n      this.running = true;\n    },\n    stop: function () {\n      this.getElapsedTime();\n      this.running = false;\n      this.autoStart = false;\n    },\n    getElapsedTime: function () {\n      this.getDelta();\n      return this.elapsedTime;\n    },\n    getDelta: function () {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n        return 0;\n      }\n\n      if (this.running) {\n        var newTime = (typeof performance === 'undefined' ? Date : performance).now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n   * The azimuthal angle (theta) is measured from the positive z-axiz.\n   */\n\n  function Spherical(radius, phi, theta) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0; // polar angle\n\n    this.theta = theta !== undefined ? theta : 0; // azimuthal angle\n\n    return this;\n  }\n\n  Object.assign(Spherical.prototype, {\n    set: function (radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius = other.radius;\n      this.phi = other.phi;\n      this.theta = other.theta;\n      return this;\n    },\n    // restrict phi to be betwee EPS and PI-EPS\n    makeSafe: function () {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    },\n    setFromVector3: function (v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    },\n    setFromCartesianCoords: function (x, y, z) {\n      this.radius = Math.sqrt(x * x + y * y + z * z);\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(x, z);\n        this.phi = Math.acos(_Math.clamp(y / this.radius, -1, 1));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n   *\n   */\n\n  function Cylindrical(radius, theta, y) {\n    this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n    this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n    this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n    return this;\n  }\n\n  Object.assign(Cylindrical.prototype, {\n    set: function (radius, theta, y) {\n      this.radius = radius;\n      this.theta = theta;\n      this.y = y;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius = other.radius;\n      this.theta = other.theta;\n      this.y = other.y;\n      return this;\n    },\n    setFromVector3: function (v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    },\n    setFromCartesianCoords: function (x, y, z) {\n      this.radius = Math.sqrt(x * x + z * z);\n      this.theta = Math.atan2(x, z);\n      this.y = y;\n      return this;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Box2(min, max) {\n    this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n  }\n\n  Object.assign(Box2.prototype, {\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new Vector2();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    },\n    getCenter: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getCenter() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getSize() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    containsPoint: function (point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n    },\n    containsBox: function (box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n    },\n    getParameter: function (point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getParameter() target is now required');\n        target = new Vector2();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    },\n    intersectsBox: function (box) {\n      // using 4 splitting planes to rule out intersections\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n    },\n    clampPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .clampPoint() target is now required');\n        target = new Vector2();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new Vector2();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Line3(start, end) {\n    this.start = start !== undefined ? start : new Vector3();\n    this.end = end !== undefined ? end : new Vector3();\n  }\n\n  Object.assign(Line3.prototype, {\n    set: function (start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    },\n    getCenter: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n    },\n    delta: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .delta() target is now required');\n        target = new Vector3();\n      }\n\n      return target.subVectors(this.end, this.start);\n    },\n    distanceSq: function () {\n      return this.start.distanceToSquared(this.end);\n    },\n    distance: function () {\n      return this.start.distanceTo(this.end);\n    },\n    at: function (t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    },\n    closestPointToPointParameter: function () {\n      var startP = new Vector3();\n      var startEnd = new Vector3();\n      return function closestPointToPointParameter(point, clampToLine) {\n        startP.subVectors(point, this.start);\n        startEnd.subVectors(this.end, this.start);\n        var startEnd2 = startEnd.dot(startEnd);\n        var startEnd_startP = startEnd.dot(startP);\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n          t = _Math.clamp(t, 0, 1);\n        }\n\n        return t;\n      };\n    }(),\n    closestPointToPoint: function (point, clampToLine, target) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n\n      if (target === undefined) {\n        console.warn('THREE.Line3: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    },\n    applyMatrix4: function (matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    },\n    equals: function (line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function ImmediateRenderObject(material) {\n    Object3D.call(this);\n    this.material = material;\n\n    this.render = function ()\n    /* renderCallback */\n    {};\n  }\n\n  ImmediateRenderObject.prototype = Object.create(Object3D.prototype);\n  ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n  ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function VertexNormalsHelper(object, size, hex, linewidth) {\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xff0000;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  VertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n  VertexNormalsHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var normalMatrix = new Matrix3();\n    return function update() {\n      var keys = ['a', 'b', 'c'];\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n\n      if (objGeometry && objGeometry.isGeometry) {\n        var vertices = objGeometry.vertices;\n        var faces = objGeometry.faces;\n        var idx = 0;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          var face = faces[i];\n\n          for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n            var vertex = vertices[face[keys[j]]];\n            var normal = face.vertexNormals[j];\n            v1.copy(vertex).applyMatrix4(matrixWorld);\n            v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n            position.setXYZ(idx, v1.x, v1.y, v1.z);\n            idx = idx + 1;\n            position.setXYZ(idx, v2.x, v2.y, v2.z);\n            idx = idx + 1;\n          }\n        }\n      } else if (objGeometry && objGeometry.isBufferGeometry) {\n        var objPos = objGeometry.attributes.position;\n        var objNorm = objGeometry.attributes.normal;\n        var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n          v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n          v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n          v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n\n      position.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function SpotLightHelper(light, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var geometry = new BufferGeometry();\n    var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n    for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n      var p1 = i / l * Math.PI * 2;\n      var p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n\n  SpotLightHelper.prototype = Object.create(Object3D.prototype);\n  SpotLightHelper.prototype.constructor = SpotLightHelper;\n\n  SpotLightHelper.prototype.dispose = function () {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  };\n\n  SpotLightHelper.prototype.update = function () {\n    var vector = new Vector3();\n    var vector2 = new Vector3();\n    return function update() {\n      this.light.updateMatrixWorld();\n      var coneLength = this.light.distance ? this.light.distance : 1000;\n      var coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n      vector.setFromMatrixPosition(this.light.matrixWorld);\n      vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n      this.cone.lookAt(vector2.sub(vector));\n\n      if (this.color !== undefined) {\n        this.cone.material.color.set(this.color);\n      } else {\n        this.cone.material.color.copy(this.light.color);\n      }\n    };\n  }();\n  /**\n   * @author Sean Griffin / http://twitter.com/sgrif\n   * @author Michael Guerrero / http://realitymeltdown.com\n   * @author mrdoob / http://mrdoob.com/\n   * @author ikerr / http://verold.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function getBoneList(object) {\n    var boneList = [];\n\n    if (object && object.isBone) {\n      boneList.push(object);\n    }\n\n    for (var i = 0; i < object.children.length; i++) {\n      boneList.push.apply(boneList, getBoneList(object.children[i]));\n    }\n\n    return boneList;\n  }\n\n  function SkeletonHelper(object) {\n    var bones = getBoneList(object);\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    var colors = [];\n    var color1 = new Color(0, 0, 1);\n    var color2 = new Color(0, 1, 0);\n\n    for (var i = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    LineSegments.call(this, geometry, material);\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n\n  SkeletonHelper.prototype = Object.create(LineSegments.prototype);\n  SkeletonHelper.prototype.constructor = SkeletonHelper;\n\n  SkeletonHelper.prototype.updateMatrixWorld = function () {\n    var vector = new Vector3();\n    var boneMatrix = new Matrix4();\n    var matrixWorldInv = new Matrix4();\n    return function updateMatrixWorld(force) {\n      var bones = this.bones;\n      var geometry = this.geometry;\n      var position = geometry.getAttribute('position');\n      matrixWorldInv.getInverse(this.root.matrixWorld);\n\n      for (var i = 0, j = 0; i < bones.length; i++) {\n        var bone = bones[i];\n\n        if (bone.parent && bone.parent.isBone) {\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n          vector.setFromMatrixPosition(boneMatrix);\n          position.setXYZ(j, vector.x, vector.y, vector.z);\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n          vector.setFromMatrixPosition(boneMatrix);\n          position.setXYZ(j + 1, vector.x, vector.y, vector.z);\n          j += 2;\n        }\n      }\n\n      geometry.getAttribute('position').needsUpdate = true;\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function PointLightHelper(light, sphereSize, color) {\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.color = color;\n    var geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n    var material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    Mesh.call(this, geometry, material);\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.update();\n    /*\n    var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n    var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    \tvar d = light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    \tthis.add( this.lightDistance );\n    */\n  }\n\n  PointLightHelper.prototype = Object.create(Mesh.prototype);\n  PointLightHelper.prototype.constructor = PointLightHelper;\n\n  PointLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n  };\n\n  PointLightHelper.prototype.update = function () {\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color);\n    }\n    /*\n    var d = this.light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.visible = true;\n    \tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    */\n\n  };\n  /**\n   * @author abelnation / http://github.com/abelnation\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function RectAreaLightHelper(light, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new BufferAttribute(new Float32Array(5 * 3), 3));\n    this.line = new Line(geometry, material);\n    this.add(this.line);\n    this.update();\n  }\n\n  RectAreaLightHelper.prototype = Object.create(Object3D.prototype);\n  RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n  RectAreaLightHelper.prototype.dispose = function () {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n\n  RectAreaLightHelper.prototype.update = function () {\n    // calculate new dimensions of the helper\n    var hx = this.light.width * 0.5;\n    var hy = this.light.height * 0.5;\n    var position = this.line.geometry.attributes.position;\n    var array = position.array; // update vertices\n\n    array[0] = hx;\n    array[1] = -hy;\n    array[2] = 0;\n    array[3] = hx;\n    array[4] = hy;\n    array[5] = 0;\n    array[6] = -hx;\n    array[7] = hy;\n    array[8] = 0;\n    array[9] = -hx;\n    array[10] = -hy;\n    array[11] = 0;\n    array[12] = hx;\n    array[13] = -hy;\n    array[14] = 0;\n    position.needsUpdate = true;\n\n    if (this.color !== undefined) {\n      this.line.material.color.set(this.color);\n    } else {\n      this.line.material.color.copy(this.light.color);\n    }\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function HemisphereLightHelper(light, size, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var geometry = new OctahedronBufferGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    this.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    if (this.color === undefined) this.material.vertexColors = VertexColors;\n    var position = geometry.getAttribute('position');\n    var colors = new Float32Array(position.count * 3);\n    geometry.addAttribute('color', new BufferAttribute(colors, 3));\n    this.add(new Mesh(geometry, this.material));\n    this.update();\n  }\n\n  HemisphereLightHelper.prototype = Object.create(Object3D.prototype);\n  HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n  HemisphereLightHelper.prototype.dispose = function () {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n\n  HemisphereLightHelper.prototype.update = function () {\n    var vector = new Vector3();\n    var color1 = new Color();\n    var color2 = new Color();\n    return function update() {\n      var mesh = this.children[0];\n\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        var colors = mesh.geometry.getAttribute('color');\n        color1.copy(this.light.color);\n        color2.copy(this.light.groundColor);\n\n        for (var i = 0, l = colors.count; i < l; i++) {\n          var color = i < l / 2 ? color1 : color2;\n          colors.setXYZ(i, color.r, color.g, color.b);\n        }\n\n        colors.needsUpdate = true;\n      }\n\n      mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    };\n  }();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function GridHelper(size, divisions, color1, color2) {\n    size = size || 10;\n    divisions = divisions || 10;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var center = divisions / 2;\n    var step = size / divisions;\n    var halfSize = size / 2;\n    var vertices = [],\n        colors = [];\n\n    for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      var color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  GridHelper.prototype = Object.create(LineSegments.prototype);\n  GridHelper.prototype.constructor = GridHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author Hectate / http://www.github.com/Hectate\n   */\n\n  function PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n    radius = radius || 10;\n    radials = radials || 16;\n    circles = circles || 8;\n    divisions = divisions || 64;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var vertices = [];\n    var colors = [];\n    var x, z;\n    var v, i, j, r, color; // create the radials\n\n    for (i = 0; i <= radials; i++) {\n      v = i / radials * (Math.PI * 2);\n      x = Math.sin(v) * radius;\n      z = Math.cos(v) * radius;\n      vertices.push(0, 0, 0);\n      vertices.push(x, 0, z);\n      color = i & 1 ? color1 : color2;\n      colors.push(color.r, color.g, color.b);\n      colors.push(color.r, color.g, color.b);\n    } // create the circles\n\n\n    for (i = 0; i <= circles; i++) {\n      color = i & 1 ? color1 : color2;\n      r = radius - radius / circles * i;\n\n      for (j = 0; j < divisions; j++) {\n        // first vertex\n        v = j / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b); // second vertex\n\n        v = (j + 1) / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  PolarGridHelper.prototype = Object.create(LineSegments.prototype);\n  PolarGridHelper.prototype.constructor = PolarGridHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function FaceNormalsHelper(object, size, hex, linewidth) {\n    // FaceNormalsHelper only supports THREE.Geometry\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length;\n    } else {\n      console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  FaceNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n  FaceNormalsHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var normalMatrix = new Matrix3();\n    return function update() {\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var normal = face.normal;\n        v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n        v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n\n      position.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function DirectionalLightHelper(light, size, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    if (size === undefined) size = 1;\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n    geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n    this.update();\n  }\n\n  DirectionalLightHelper.prototype = Object.create(Object3D.prototype);\n  DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n  DirectionalLightHelper.prototype.dispose = function () {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  };\n\n  DirectionalLightHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var v3 = new Vector3();\n    return function update() {\n      v1.setFromMatrixPosition(this.light.matrixWorld);\n      v2.setFromMatrixPosition(this.light.target.matrixWorld);\n      v3.subVectors(v2, v1);\n      this.lightPlane.lookAt(v3);\n\n      if (this.color !== undefined) {\n        this.lightPlane.material.color.set(this.color);\n        this.targetLine.material.color.set(this.color);\n      } else {\n        this.lightPlane.material.color.copy(this.light.color);\n        this.targetLine.material.color.copy(this.light.color);\n      }\n\n      this.targetLine.lookAt(v3);\n      this.targetLine.scale.z = v3.length();\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  function CameraHelper(camera) {\n    var geometry = new BufferGeometry();\n    var material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: FaceColors\n    });\n    var vertices = [];\n    var colors = [];\n    var pointMap = {}; // colors\n\n    var colorFrustum = new Color(0xffaa00);\n    var colorCone = new Color(0xff0000);\n    var colorUp = new Color(0x00aaff);\n    var colorTarget = new Color(0xffffff);\n    var colorCross = new Color(0x333333); // near\n\n    addLine('n1', 'n2', colorFrustum);\n    addLine('n2', 'n4', colorFrustum);\n    addLine('n4', 'n3', colorFrustum);\n    addLine('n3', 'n1', colorFrustum); // far\n\n    addLine('f1', 'f2', colorFrustum);\n    addLine('f2', 'f4', colorFrustum);\n    addLine('f4', 'f3', colorFrustum);\n    addLine('f3', 'f1', colorFrustum); // sides\n\n    addLine('n1', 'f1', colorFrustum);\n    addLine('n2', 'f2', colorFrustum);\n    addLine('n3', 'f3', colorFrustum);\n    addLine('n4', 'f4', colorFrustum); // cone\n\n    addLine('p', 'n1', colorCone);\n    addLine('p', 'n2', colorCone);\n    addLine('p', 'n3', colorCone);\n    addLine('p', 'n4', colorCone); // up\n\n    addLine('u1', 'u2', colorUp);\n    addLine('u2', 'u3', colorUp);\n    addLine('u3', 'u1', colorUp); // target\n\n    addLine('c', 't', colorTarget);\n    addLine('p', 'c', colorCross); // cross\n\n    addLine('cn1', 'cn2', colorCross);\n    addLine('cn3', 'cn4', colorCross);\n    addLine('cf1', 'cf2', colorCross);\n    addLine('cf3', 'cf4', colorCross);\n\n    function addLine(a, b, color) {\n      addPoint(a, color);\n      addPoint(b, color);\n    }\n\n    function addPoint(id, color) {\n      vertices.push(0, 0, 0);\n      colors.push(color.r, color.g, color.b);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    LineSegments.call(this, geometry, material);\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  }\n\n  CameraHelper.prototype = Object.create(LineSegments.prototype);\n  CameraHelper.prototype.constructor = CameraHelper;\n\n  CameraHelper.prototype.update = function () {\n    var geometry, pointMap;\n    var vector = new Vector3();\n    var camera = new Camera();\n\n    function setPoint(point, x, y, z) {\n      vector.set(x, y, z).unproject(camera);\n      var points = pointMap[point];\n\n      if (points !== undefined) {\n        var position = geometry.getAttribute('position');\n\n        for (var i = 0, l = points.length; i < l; i++) {\n          position.setXYZ(points[i], vector.x, vector.y, vector.z);\n        }\n      }\n    }\n\n    return function update() {\n      geometry = this.geometry;\n      pointMap = this.pointMap;\n      var w = 1,\n          h = 1; // we need just camera projection matrix\n      // world matrix must be identity\n\n      camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n      setPoint('c', 0, 0, -1);\n      setPoint('t', 0, 0, 1); // near\n\n      setPoint('n1', -w, -h, -1);\n      setPoint('n2', w, -h, -1);\n      setPoint('n3', -w, h, -1);\n      setPoint('n4', w, h, -1); // far\n\n      setPoint('f1', -w, -h, 1);\n      setPoint('f2', w, -h, 1);\n      setPoint('f3', -w, h, 1);\n      setPoint('f4', w, h, 1); // up\n\n      setPoint('u1', w * 0.7, h * 1.1, -1);\n      setPoint('u2', -w * 0.7, h * 1.1, -1);\n      setPoint('u3', 0, h * 2, -1); // cross\n\n      setPoint('cf1', -w, 0, 1);\n      setPoint('cf2', w, 0, 1);\n      setPoint('cf3', 0, -h, 1);\n      setPoint('cf4', 0, h, 1);\n      setPoint('cn1', -w, 0, -1);\n      setPoint('cn2', w, 0, -1);\n      setPoint('cn3', 0, -h, -1);\n      setPoint('cn4', 0, h, -1);\n      geometry.getAttribute('position').needsUpdate = true;\n    };\n  }();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   */\n\n\n  function BoxHelper(object, color) {\n    this.object = object;\n    if (color === undefined) color = 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(8 * 3);\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  BoxHelper.prototype = Object.create(LineSegments.prototype);\n  BoxHelper.prototype.constructor = BoxHelper;\n\n  BoxHelper.prototype.update = function () {\n    var box = new Box3();\n    return function update(object) {\n      if (object !== undefined) {\n        console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n      }\n\n      if (this.object !== undefined) {\n        box.setFromObject(this.object);\n      }\n\n      if (box.isEmpty()) return;\n      var min = box.min;\n      var max = box.max;\n      /*\n        5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      \t0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n\n      var position = this.geometry.attributes.position;\n      var array = position.array;\n      array[0] = max.x;\n      array[1] = max.y;\n      array[2] = max.z;\n      array[3] = min.x;\n      array[4] = max.y;\n      array[5] = max.z;\n      array[6] = min.x;\n      array[7] = min.y;\n      array[8] = max.z;\n      array[9] = max.x;\n      array[10] = min.y;\n      array[11] = max.z;\n      array[12] = max.x;\n      array[13] = max.y;\n      array[14] = min.z;\n      array[15] = min.x;\n      array[16] = max.y;\n      array[17] = min.z;\n      array[18] = min.x;\n      array[19] = min.y;\n      array[20] = min.z;\n      array[21] = max.x;\n      array[22] = min.y;\n      array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    };\n  }();\n\n  BoxHelper.prototype.setFromObject = function (object) {\n    this.object = object;\n    this.update();\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function Box3Helper(box, hex) {\n    this.type = 'Box3Helper';\n    this.box = box;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.geometry.computeBoundingSphere();\n  }\n\n  Box3Helper.prototype = Object.create(LineSegments.prototype);\n  Box3Helper.prototype.constructor = Box3Helper;\n\n  Box3Helper.prototype.updateMatrixWorld = function (force) {\n    var box = this.box;\n    if (box.isEmpty()) return;\n    box.getCenter(this.position);\n    box.getSize(this.scale);\n    this.scale.multiplyScalar(0.5);\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function PlaneHelper(plane, size, hex) {\n    this.type = 'PlaneHelper';\n    this.plane = plane;\n    this.size = size === undefined ? 1 : size;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    Line.call(this, geometry, new LineBasicMaterial({\n      color: color\n    })); //\n\n    var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n    var geometry2 = new BufferGeometry();\n    geometry2.addAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      color: color,\n      opacity: 0.2,\n      transparent: true,\n      depthWrite: false\n    })));\n  }\n\n  PlaneHelper.prototype = Object.create(Line.prototype);\n  PlaneHelper.prototype.constructor = PlaneHelper;\n\n  PlaneHelper.prototype.updateMatrixWorld = function (force) {\n    var scale = -this.plane.constant;\n    if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n    this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n    this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n    this.lookAt(this.plane.normal);\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author zz85 / http://github.com/zz85\n   * @author bhouston / http://clara.io\n   *\n   * Creates an arrow for visualizing directions\n   *\n   * Parameters:\n   *  dir - Vector3\n   *  origin - Vector3\n   *  length - Number\n   *  color - color in hex value\n   *  headLength - Number\n   *  headWidth - Number\n   */\n\n\n  var lineGeometry, coneGeometry;\n\n  function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    Object3D.call(this);\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n    if (lineGeometry === undefined) {\n      lineGeometry = new BufferGeometry();\n      lineGeometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n      coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n      coneGeometry.translate(0, -0.5, 0);\n    }\n\n    this.position.copy(origin);\n    this.line = new Line(lineGeometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new Mesh(coneGeometry, new MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n\n  ArrowHelper.prototype = Object.create(Object3D.prototype);\n  ArrowHelper.prototype.constructor = ArrowHelper;\n\n  ArrowHelper.prototype.setDirection = function () {\n    var axis = new Vector3();\n    var radians;\n    return function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < -0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        axis.set(dir.z, 0, -dir.x).normalize();\n        radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(axis, radians);\n      }\n    };\n  }();\n\n  ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.line.scale.set(1, Math.max(0, length - headLength), 1);\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  };\n\n  ArrowHelper.prototype.setColor = function (color) {\n    this.line.material.color.copy(color);\n    this.cone.material.color.copy(color);\n  };\n  /**\n   * @author sroucheray / http://sroucheray.org/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function AxesHelper(size) {\n    size = size || 1;\n    var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n    var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  AxesHelper.prototype = Object.create(LineSegments.prototype);\n  AxesHelper.prototype.constructor = AxesHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Face4(a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new Face3(a, b, c, normal, color, materialIndex);\n  }\n\n  var LineStrip = 0;\n  var LinePieces = 1;\n\n  function MeshFaceMaterial(materials) {\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n    return materials;\n  }\n\n  function MultiMaterial(materials) {\n    if (materials === undefined) materials = [];\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n    materials.isMultiMaterial = true;\n    materials.materials = materials;\n\n    materials.clone = function () {\n      return materials.slice();\n    };\n\n    return materials;\n  }\n\n  function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function Particle(material) {\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n    return new Sprite(material);\n  }\n\n  function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new Vector3(x, y, z);\n  } //\n\n\n  function DynamicBufferAttribute(array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n    return new BufferAttribute(array, itemSize).setDynamic(true);\n  }\n\n  function Int8Attribute(array, itemSize) {\n    console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n    return new Int8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8Attribute(array, itemSize) {\n    console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n    return new Uint8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8ClampedAttribute(array, itemSize) {\n    console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n    return new Uint8ClampedBufferAttribute(array, itemSize);\n  }\n\n  function Int16Attribute(array, itemSize) {\n    console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n    return new Int16BufferAttribute(array, itemSize);\n  }\n\n  function Uint16Attribute(array, itemSize) {\n    console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n    return new Uint16BufferAttribute(array, itemSize);\n  }\n\n  function Int32Attribute(array, itemSize) {\n    console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n    return new Int32BufferAttribute(array, itemSize);\n  }\n\n  function Uint32Attribute(array, itemSize) {\n    console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n    return new Uint32BufferAttribute(array, itemSize);\n  }\n\n  function Float32Attribute(array, itemSize) {\n    console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n    return new Float32BufferAttribute(array, itemSize);\n  }\n\n  function Float64Attribute(array, itemSize) {\n    console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n    return new Float64BufferAttribute(array, itemSize);\n  } //\n\n\n  Curve.create = function (construct, getPoint) {\n    console.log('THREE.Curve.create() has been deprecated');\n    construct.prototype = Object.create(Curve.prototype);\n    construct.prototype.constructor = construct;\n    construct.prototype.getPoint = getPoint;\n    return construct;\n  }; //\n\n\n  Object.assign(CurvePath.prototype, {\n    createPointsGeometry: function (divisions) {\n      console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from path points (for Line or Points objects)\n\n      var pts = this.getPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createSpacedPointsGeometry: function (divisions) {\n      console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from equidistant sampling along the path\n\n      var pts = this.getSpacedPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createGeometry: function (points) {\n      console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');\n      var geometry = new Geometry();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        geometry.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return geometry;\n    }\n  }); //\n\n  Object.assign(Path.prototype, {\n    fromPoints: function (points) {\n      console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n      this.setFromPoints(points);\n    }\n  }); //\n\n  function ClosedSplineCurve3(points) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  }\n\n  ClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function SplineCurve3(points) {\n    console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  SplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function Spline(points) {\n    console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  Spline.prototype = Object.create(CatmullRomCurve3.prototype);\n  Object.assign(Spline.prototype, {\n    initFromArray: function ()\n    /* a */\n    {\n      console.error('THREE.Spline: .initFromArray() has been removed.');\n    },\n    getControlPointsArray: function ()\n    /* optionalTarget */\n    {\n      console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n    },\n    reparametrizeByArcLength: function ()\n    /* samplingCoef */\n    {\n      console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n    }\n  }); //\n\n  function AxisHelper(size) {\n    console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n    return new AxesHelper(size);\n  }\n\n  function BoundingBoxHelper(object, color) {\n    console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n    return new BoxHelper(object, color);\n  }\n\n  function EdgesHelper(object, hex) {\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n    return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  }\n\n  GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  };\n\n  SkeletonHelper.prototype.update = function () {\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n  };\n\n  function WireframeHelper(object, hex) {\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n    return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  } //\n\n\n  Object.assign(Loader.prototype, {\n    extractUrlBase: function (url) {\n      console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n      return LoaderUtils.extractUrlBase(url);\n    }\n  });\n\n  function XHRLoader(manager) {\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n    return new FileLoader(manager);\n  }\n\n  function BinaryTextureLoader(manager) {\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n    return new DataTextureLoader(manager);\n  }\n\n  Object.assign(JSONLoader.prototype, {\n    setTexturePath: function (value) {\n      console.warn('THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().');\n      return this.setResourcePath(value);\n    }\n  }); //\n\n  Object.assign(Box2.prototype, {\n    center: function (optionalTarget) {\n      console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function () {\n      console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    size: function (optionalTarget) {\n      console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n  Object.assign(Box3.prototype, {\n    center: function (optionalTarget) {\n      console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function () {\n      console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    },\n    size: function (optionalTarget) {\n      console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n\n  Line3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  Object.assign(_Math, {\n    random16: function () {\n      console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');\n      return Math.random();\n    },\n    nearestPowerOfTwo: function (value) {\n      console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');\n      return _Math.floorPowerOfTwo(value);\n    },\n    nextPowerOfTwo: function (value) {\n      console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');\n      return _Math.ceilPowerOfTwo(value);\n    }\n  });\n  Object.assign(Matrix3.prototype, {\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n      return vector.applyMatrix3(this);\n    },\n    multiplyVector3Array: function ()\n    /* a */\n    {\n      console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n    },\n    applyToBuffer: function (buffer\n    /*, offset, length */\n    ) {\n      console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function ()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n    }\n  });\n  Object.assign(Matrix4.prototype, {\n    extractPosition: function (m) {\n      console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n      return this.copyPosition(m);\n    },\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    getPosition: function () {\n      var v1;\n      return function getPosition() {\n        if (v1 === undefined) v1 = new Vector3();\n        console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n        return v1.setFromMatrixColumn(this, 3);\n      };\n    }(),\n    setRotationFromQuaternion: function (q) {\n      console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n      return this.makeRotationFromQuaternion(q);\n    },\n    multiplyToArray: function () {\n      console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector4: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector3Array: function ()\n    /* a */\n    {\n      console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n    },\n    rotateAxis: function (v) {\n      console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n      v.transformDirection(this);\n    },\n    crossVector: function (vector) {\n      console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    translate: function () {\n      console.error('THREE.Matrix4: .translate() has been removed.');\n    },\n    rotateX: function () {\n      console.error('THREE.Matrix4: .rotateX() has been removed.');\n    },\n    rotateY: function () {\n      console.error('THREE.Matrix4: .rotateY() has been removed.');\n    },\n    rotateZ: function () {\n      console.error('THREE.Matrix4: .rotateZ() has been removed.');\n    },\n    rotateByAxis: function () {\n      console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n    },\n    applyToBuffer: function (buffer\n    /*, offset, length */\n    ) {\n      console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function ()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n    },\n    makeFrustum: function (left, right, bottom, top, near, far) {\n      console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n      return this.makePerspective(left, right, top, bottom, near, far);\n    }\n  });\n\n  Plane.prototype.isIntersectionLine = function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  };\n\n  Quaternion.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  };\n\n  Object.assign(Ray.prototype, {\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionPlane: function (plane) {\n      console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n      return this.intersectsPlane(plane);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(Triangle.prototype, {\n    area: function () {\n      console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n      return this.getArea();\n    },\n    barycoordFromPoint: function (point, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return this.getBarycoord(point, target);\n    },\n    midpoint: function (target) {\n      console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n      return this.getMidpoint(target);\n    },\n    normal: function (target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return this.getNormal(target);\n    },\n    plane: function (target) {\n      console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n      return this.getPlane(target);\n    }\n  });\n  Object.assign(Triangle, {\n    barycoordFromPoint: function (point, a, b, c, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return Triangle.getBarycoord(point, a, b, c, target);\n    },\n    normal: function (a, b, c, target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return Triangle.getNormal(a, b, c, target);\n    }\n  });\n  Object.assign(Shape.prototype, {\n    extractAllPoints: function (divisions) {\n      console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n      return this.extractPoints(divisions);\n    },\n    extrude: function (options) {\n      console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n      return new ExtrudeGeometry(this, options);\n    },\n    makeGeometry: function (options) {\n      console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n      return new ShapeGeometry(this, options);\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    fromAttribute: function (attribute, index, offset) {\n      console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function (v) {\n      console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function () {\n      console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector3.prototype, {\n    setEulerFromRotationMatrix: function () {\n      console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n    },\n    setEulerFromQuaternion: function () {\n      console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n    },\n    getPositionFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n      return this.setFromMatrixPosition(m);\n    },\n    getScaleFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n      return this.setFromMatrixScale(m);\n    },\n    getColumnFromMatrix: function (index, matrix) {\n      console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n      return this.setFromMatrixColumn(matrix, index);\n    },\n    applyProjection: function (m) {\n      console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n      return this.applyMatrix4(m);\n    },\n    fromAttribute: function (attribute, index, offset) {\n      console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function (v) {\n      console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function () {\n      console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector4.prototype, {\n    fromAttribute: function (attribute, index, offset) {\n      console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    lengthManhattan: function () {\n      console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  }); //\n\n  Object.assign(Geometry.prototype, {\n    computeTangents: function () {\n      console.error('THREE.Geometry: .computeTangents() has been removed.');\n    },\n    computeLineDistances: function () {\n      console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');\n    }\n  });\n  Object.assign(Object3D.prototype, {\n    getChildByName: function (name) {\n      console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n      return this.getObjectByName(name);\n    },\n    renderDepth: function () {\n      console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n    },\n    translate: function (distance, axis) {\n      console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n      return this.translateOnAxis(axis, distance);\n    },\n    getWorldRotation: function () {\n      console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n    }\n  });\n  Object.defineProperties(Object3D.prototype, {\n    eulerOrder: {\n      get: function () {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function (value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n  Object.defineProperties(LOD.prototype, {\n    objects: {\n      get: function () {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  });\n  Object.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n    get: function () {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    },\n    set: function () {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    }\n  });\n  Object.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n    get: function () {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      return this.arcLengthDivisions;\n    },\n    set: function (value) {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      this.arcLengthDivisions = value;\n    }\n  }); //\n\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(Light.prototype, {\n    onlyShadow: {\n      set: function () {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function () {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function () {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(BufferAttribute.prototype, {\n    length: {\n      get: function () {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n        return this.array.length;\n      }\n    },\n    copyIndicesArray: function ()\n    /* indices */\n    {\n      console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n    }\n  });\n  Object.assign(BufferGeometry.prototype, {\n    addIndex: function (index) {\n      console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n      this.setIndex(index);\n    },\n    addDrawCall: function (start, count, indexOffset) {\n      if (indexOffset !== undefined) {\n        console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n      }\n\n      console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n      this.addGroup(start, count);\n    },\n    clearDrawCalls: function () {\n      console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n      this.clearGroups();\n    },\n    computeTangents: function () {\n      console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n    },\n    computeOffsets: function () {\n      console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n    }\n  });\n  Object.defineProperties(BufferGeometry.prototype, {\n    drawcalls: {\n      get: function () {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function () {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  }); //\n\n  Object.assign(ExtrudeBufferGeometry.prototype, {\n    getArrays: function () {\n      console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.');\n    },\n    addShapeList: function () {\n      console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.');\n    },\n    addShape: function () {\n      console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.');\n    }\n  }); //\n\n  Object.defineProperties(Uniform.prototype, {\n    dynamic: {\n      set: function () {\n        console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n      }\n    },\n    onUpdate: {\n      value: function () {\n        console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n        return this;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Material.prototype, {\n    wrapAround: {\n      get: function () {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      },\n      set: function () {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function () {\n        console.warn('THREE.Material: .wrapRGB has been removed.');\n        return new Color();\n      }\n    },\n    shading: {\n      get: function () {\n        console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      },\n      set: function (value) {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = value === FlatShading;\n      }\n    }\n  });\n  Object.defineProperties(MeshPhongMaterial.prototype, {\n    metal: {\n      get: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n        return false;\n      },\n      set: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n      }\n    }\n  });\n  Object.defineProperties(ShaderMaterial.prototype, {\n    derivatives: {\n      get: function () {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function (value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  Object.assign(WebGLRenderer.prototype, {\n    clearTarget: function (renderTarget, color, depth, stencil) {\n      console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n      this.setRenderTarget(renderTarget);\n      this.clear(color, depth, stencil);\n    },\n    animate: function (callback) {\n      console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n      this.setAnimationLoop(callback);\n    },\n    getCurrentRenderTarget: function () {\n      console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n      return this.getRenderTarget();\n    },\n    getMaxAnisotropy: function () {\n      console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n      return this.capabilities.getMaxAnisotropy();\n    },\n    getPrecision: function () {\n      console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n      return this.capabilities.precision;\n    },\n    resetGLState: function () {\n      console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n      return this.state.reset();\n    },\n    supportsFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n      return this.extensions.get('OES_texture_float');\n    },\n    supportsHalfFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n      return this.extensions.get('OES_texture_half_float');\n    },\n    supportsStandardDerivatives: function () {\n      console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n      return this.extensions.get('OES_standard_derivatives');\n    },\n    supportsCompressedTextureS3TC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_s3tc');\n    },\n    supportsCompressedTexturePVRTC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n    },\n    supportsBlendMinMax: function () {\n      console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n      return this.extensions.get('EXT_blend_minmax');\n    },\n    supportsVertexTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n      return this.capabilities.vertexTextures;\n    },\n    supportsInstancedArrays: function () {\n      console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n      return this.extensions.get('ANGLE_instanced_arrays');\n    },\n    enableScissorTest: function (boolean) {\n      console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n      this.setScissorTest(boolean);\n    },\n    initMaterial: function () {\n      console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n    },\n    addPrePlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n    },\n    addPostPlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n    },\n    updateShadowMap: function () {\n      console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n    },\n    setFaceCulling: function () {\n      console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n    }\n  });\n  Object.defineProperties(WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function () {\n        return this.shadowMap.enabled;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function () {\n        return this.shadowMap.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  });\n  Object.defineProperties(WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function ()\n      /* cullFace */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderReverseSided: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderSingleSided: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebVRManager.prototype, {\n    standing: {\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebVRManager: .standing has been removed.');\n      }\n    },\n    userHeight: {\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebVRManager: .userHeight has been removed.');\n      }\n    }\n  }); //\n\n  Audio.prototype.load = function (file) {\n    console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n    var scope = this;\n    var audioLoader = new AudioLoader();\n    audioLoader.load(file, function (buffer) {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  };\n\n  AudioAnalyser.prototype.getData = function () {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }; //\n\n\n  CubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n    console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n    return this.update(renderer, scene);\n  }; //\n\n\n  var GeometryUtils = {\n    merge: function (geometry1, geometry2, materialIndexOffset) {\n      console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n      var matrix;\n\n      if (geometry2.isMesh) {\n        geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n        matrix = geometry2.matrix;\n        geometry2 = geometry2.geometry;\n      }\n\n      geometry1.merge(geometry2, matrix, materialIndexOffset);\n    },\n    center: function (geometry) {\n      console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n      return geometry.center();\n    }\n  };\n  ImageUtils.crossOrigin = undefined;\n\n  ImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadCompressedTexture = function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  };\n\n  ImageUtils.loadCompressedTextureCube = function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }; //\n\n\n  function Projector() {\n    console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n    this.projectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .projectVector() is now vector.project().');\n      vector.project(camera);\n    };\n\n    this.unprojectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n      vector.unproject(camera);\n    };\n\n    this.pickingRay = function () {\n      console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n    };\n  } //\n\n\n  function CanvasRenderer() {\n    console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n    this.domElement = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\n    this.clear = function () {};\n\n    this.render = function () {};\n\n    this.setClearColor = function () {};\n\n    this.setSize = function () {};\n  } //\n\n\n  var SceneUtils = {\n    createMultiMaterialObject: function ()\n    /* geometry, materials */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    },\n    detach: function ()\n    /* child, parent, scene */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    },\n    attach: function ()\n    /* child, scene, parent */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    }\n  }; //\n\n  function LensFlare() {\n    console.error('THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js');\n  }\n\n  exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n  exports.WebGLRenderTarget = WebGLRenderTarget;\n  exports.WebGLRenderer = WebGLRenderer;\n  exports.ShaderLib = ShaderLib;\n  exports.UniformsLib = UniformsLib;\n  exports.UniformsUtils = UniformsUtils;\n  exports.ShaderChunk = ShaderChunk;\n  exports.FogExp2 = FogExp2;\n  exports.Fog = Fog;\n  exports.Scene = Scene;\n  exports.Sprite = Sprite;\n  exports.LOD = LOD;\n  exports.SkinnedMesh = SkinnedMesh;\n  exports.Skeleton = Skeleton;\n  exports.Bone = Bone;\n  exports.Mesh = Mesh;\n  exports.LineSegments = LineSegments;\n  exports.LineLoop = LineLoop;\n  exports.Line = Line;\n  exports.Points = Points;\n  exports.Group = Group;\n  exports.VideoTexture = VideoTexture;\n  exports.DataTexture = DataTexture;\n  exports.DataTexture3D = DataTexture3D;\n  exports.CompressedTexture = CompressedTexture;\n  exports.CubeTexture = CubeTexture;\n  exports.CanvasTexture = CanvasTexture;\n  exports.DepthTexture = DepthTexture;\n  exports.Texture = Texture;\n  exports.CompressedTextureLoader = CompressedTextureLoader;\n  exports.DataTextureLoader = DataTextureLoader;\n  exports.CubeTextureLoader = CubeTextureLoader;\n  exports.TextureLoader = TextureLoader;\n  exports.ObjectLoader = ObjectLoader;\n  exports.MaterialLoader = MaterialLoader;\n  exports.BufferGeometryLoader = BufferGeometryLoader;\n  exports.DefaultLoadingManager = DefaultLoadingManager;\n  exports.LoadingManager = LoadingManager;\n  exports.JSONLoader = JSONLoader;\n  exports.ImageLoader = ImageLoader;\n  exports.ImageBitmapLoader = ImageBitmapLoader;\n  exports.FontLoader = FontLoader;\n  exports.FileLoader = FileLoader;\n  exports.Loader = Loader;\n  exports.LoaderUtils = LoaderUtils;\n  exports.Cache = Cache;\n  exports.AudioLoader = AudioLoader;\n  exports.SpotLightShadow = SpotLightShadow;\n  exports.SpotLight = SpotLight;\n  exports.PointLight = PointLight;\n  exports.RectAreaLight = RectAreaLight;\n  exports.HemisphereLight = HemisphereLight;\n  exports.DirectionalLightShadow = DirectionalLightShadow;\n  exports.DirectionalLight = DirectionalLight;\n  exports.AmbientLight = AmbientLight;\n  exports.LightShadow = LightShadow;\n  exports.Light = Light;\n  exports.StereoCamera = StereoCamera;\n  exports.PerspectiveCamera = PerspectiveCamera;\n  exports.OrthographicCamera = OrthographicCamera;\n  exports.CubeCamera = CubeCamera;\n  exports.ArrayCamera = ArrayCamera;\n  exports.Camera = Camera;\n  exports.AudioListener = AudioListener;\n  exports.PositionalAudio = PositionalAudio;\n  exports.AudioContext = AudioContext;\n  exports.AudioAnalyser = AudioAnalyser;\n  exports.Audio = Audio;\n  exports.VectorKeyframeTrack = VectorKeyframeTrack;\n  exports.StringKeyframeTrack = StringKeyframeTrack;\n  exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n  exports.NumberKeyframeTrack = NumberKeyframeTrack;\n  exports.ColorKeyframeTrack = ColorKeyframeTrack;\n  exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n  exports.PropertyMixer = PropertyMixer;\n  exports.PropertyBinding = PropertyBinding;\n  exports.KeyframeTrack = KeyframeTrack;\n  exports.AnimationUtils = AnimationUtils;\n  exports.AnimationObjectGroup = AnimationObjectGroup;\n  exports.AnimationMixer = AnimationMixer;\n  exports.AnimationClip = AnimationClip;\n  exports.Uniform = Uniform;\n  exports.InstancedBufferGeometry = InstancedBufferGeometry;\n  exports.BufferGeometry = BufferGeometry;\n  exports.Geometry = Geometry;\n  exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n  exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n  exports.InterleavedBuffer = InterleavedBuffer;\n  exports.InstancedBufferAttribute = InstancedBufferAttribute;\n  exports.Face3 = Face3;\n  exports.Object3D = Object3D;\n  exports.Raycaster = Raycaster;\n  exports.Layers = Layers;\n  exports.EventDispatcher = EventDispatcher;\n  exports.Clock = Clock;\n  exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n  exports.LinearInterpolant = LinearInterpolant;\n  exports.DiscreteInterpolant = DiscreteInterpolant;\n  exports.CubicInterpolant = CubicInterpolant;\n  exports.Interpolant = Interpolant;\n  exports.Triangle = Triangle;\n  exports.Math = _Math;\n  exports.Spherical = Spherical;\n  exports.Cylindrical = Cylindrical;\n  exports.Plane = Plane;\n  exports.Frustum = Frustum;\n  exports.Sphere = Sphere;\n  exports.Ray = Ray;\n  exports.Matrix4 = Matrix4;\n  exports.Matrix3 = Matrix3;\n  exports.Box3 = Box3;\n  exports.Box2 = Box2;\n  exports.Line3 = Line3;\n  exports.Euler = Euler;\n  exports.Vector4 = Vector4;\n  exports.Vector3 = Vector3;\n  exports.Vector2 = Vector2;\n  exports.Quaternion = Quaternion;\n  exports.Color = Color;\n  exports.ImmediateRenderObject = ImmediateRenderObject;\n  exports.VertexNormalsHelper = VertexNormalsHelper;\n  exports.SpotLightHelper = SpotLightHelper;\n  exports.SkeletonHelper = SkeletonHelper;\n  exports.PointLightHelper = PointLightHelper;\n  exports.RectAreaLightHelper = RectAreaLightHelper;\n  exports.HemisphereLightHelper = HemisphereLightHelper;\n  exports.GridHelper = GridHelper;\n  exports.PolarGridHelper = PolarGridHelper;\n  exports.FaceNormalsHelper = FaceNormalsHelper;\n  exports.DirectionalLightHelper = DirectionalLightHelper;\n  exports.CameraHelper = CameraHelper;\n  exports.BoxHelper = BoxHelper;\n  exports.Box3Helper = Box3Helper;\n  exports.PlaneHelper = PlaneHelper;\n  exports.ArrowHelper = ArrowHelper;\n  exports.AxesHelper = AxesHelper;\n  exports.Shape = Shape;\n  exports.Path = Path;\n  exports.ShapePath = ShapePath;\n  exports.Font = Font;\n  exports.CurvePath = CurvePath;\n  exports.Curve = Curve;\n  exports.ImageUtils = ImageUtils;\n  exports.ShapeUtils = ShapeUtils;\n  exports.WebGLUtils = WebGLUtils;\n  exports.WireframeGeometry = WireframeGeometry;\n  exports.ParametricGeometry = ParametricGeometry;\n  exports.ParametricBufferGeometry = ParametricBufferGeometry;\n  exports.TetrahedronGeometry = TetrahedronGeometry;\n  exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n  exports.OctahedronGeometry = OctahedronGeometry;\n  exports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n  exports.IcosahedronGeometry = IcosahedronGeometry;\n  exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n  exports.DodecahedronGeometry = DodecahedronGeometry;\n  exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n  exports.PolyhedronGeometry = PolyhedronGeometry;\n  exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n  exports.TubeGeometry = TubeGeometry;\n  exports.TubeBufferGeometry = TubeBufferGeometry;\n  exports.TorusKnotGeometry = TorusKnotGeometry;\n  exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n  exports.TorusGeometry = TorusGeometry;\n  exports.TorusBufferGeometry = TorusBufferGeometry;\n  exports.TextGeometry = TextGeometry;\n  exports.TextBufferGeometry = TextBufferGeometry;\n  exports.SphereGeometry = SphereGeometry;\n  exports.SphereBufferGeometry = SphereBufferGeometry;\n  exports.RingGeometry = RingGeometry;\n  exports.RingBufferGeometry = RingBufferGeometry;\n  exports.PlaneGeometry = PlaneGeometry;\n  exports.PlaneBufferGeometry = PlaneBufferGeometry;\n  exports.LatheGeometry = LatheGeometry;\n  exports.LatheBufferGeometry = LatheBufferGeometry;\n  exports.ShapeGeometry = ShapeGeometry;\n  exports.ShapeBufferGeometry = ShapeBufferGeometry;\n  exports.ExtrudeGeometry = ExtrudeGeometry;\n  exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n  exports.EdgesGeometry = EdgesGeometry;\n  exports.ConeGeometry = ConeGeometry;\n  exports.ConeBufferGeometry = ConeBufferGeometry;\n  exports.CylinderGeometry = CylinderGeometry;\n  exports.CylinderBufferGeometry = CylinderBufferGeometry;\n  exports.CircleGeometry = CircleGeometry;\n  exports.CircleBufferGeometry = CircleBufferGeometry;\n  exports.BoxGeometry = BoxGeometry;\n  exports.BoxBufferGeometry = BoxBufferGeometry;\n  exports.ShadowMaterial = ShadowMaterial;\n  exports.SpriteMaterial = SpriteMaterial;\n  exports.RawShaderMaterial = RawShaderMaterial;\n  exports.ShaderMaterial = ShaderMaterial;\n  exports.PointsMaterial = PointsMaterial;\n  exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n  exports.MeshStandardMaterial = MeshStandardMaterial;\n  exports.MeshPhongMaterial = MeshPhongMaterial;\n  exports.MeshToonMaterial = MeshToonMaterial;\n  exports.MeshNormalMaterial = MeshNormalMaterial;\n  exports.MeshLambertMaterial = MeshLambertMaterial;\n  exports.MeshDepthMaterial = MeshDepthMaterial;\n  exports.MeshDistanceMaterial = MeshDistanceMaterial;\n  exports.MeshBasicMaterial = MeshBasicMaterial;\n  exports.MeshMatcapMaterial = MeshMatcapMaterial;\n  exports.LineDashedMaterial = LineDashedMaterial;\n  exports.LineBasicMaterial = LineBasicMaterial;\n  exports.Material = Material;\n  exports.Float64BufferAttribute = Float64BufferAttribute;\n  exports.Float32BufferAttribute = Float32BufferAttribute;\n  exports.Uint32BufferAttribute = Uint32BufferAttribute;\n  exports.Int32BufferAttribute = Int32BufferAttribute;\n  exports.Uint16BufferAttribute = Uint16BufferAttribute;\n  exports.Int16BufferAttribute = Int16BufferAttribute;\n  exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n  exports.Uint8BufferAttribute = Uint8BufferAttribute;\n  exports.Int8BufferAttribute = Int8BufferAttribute;\n  exports.BufferAttribute = BufferAttribute;\n  exports.ArcCurve = ArcCurve;\n  exports.CatmullRomCurve3 = CatmullRomCurve3;\n  exports.CubicBezierCurve = CubicBezierCurve;\n  exports.CubicBezierCurve3 = CubicBezierCurve3;\n  exports.EllipseCurve = EllipseCurve;\n  exports.LineCurve = LineCurve;\n  exports.LineCurve3 = LineCurve3;\n  exports.QuadraticBezierCurve = QuadraticBezierCurve;\n  exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n  exports.SplineCurve = SplineCurve;\n  exports.REVISION = REVISION;\n  exports.MOUSE = MOUSE;\n  exports.CullFaceNone = CullFaceNone;\n  exports.CullFaceBack = CullFaceBack;\n  exports.CullFaceFront = CullFaceFront;\n  exports.CullFaceFrontBack = CullFaceFrontBack;\n  exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n  exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n  exports.BasicShadowMap = BasicShadowMap;\n  exports.PCFShadowMap = PCFShadowMap;\n  exports.PCFSoftShadowMap = PCFSoftShadowMap;\n  exports.FrontSide = FrontSide;\n  exports.BackSide = BackSide;\n  exports.DoubleSide = DoubleSide;\n  exports.FlatShading = FlatShading;\n  exports.SmoothShading = SmoothShading;\n  exports.NoColors = NoColors;\n  exports.FaceColors = FaceColors;\n  exports.VertexColors = VertexColors;\n  exports.NoBlending = NoBlending;\n  exports.NormalBlending = NormalBlending;\n  exports.AdditiveBlending = AdditiveBlending;\n  exports.SubtractiveBlending = SubtractiveBlending;\n  exports.MultiplyBlending = MultiplyBlending;\n  exports.CustomBlending = CustomBlending;\n  exports.AddEquation = AddEquation;\n  exports.SubtractEquation = SubtractEquation;\n  exports.ReverseSubtractEquation = ReverseSubtractEquation;\n  exports.MinEquation = MinEquation;\n  exports.MaxEquation = MaxEquation;\n  exports.ZeroFactor = ZeroFactor;\n  exports.OneFactor = OneFactor;\n  exports.SrcColorFactor = SrcColorFactor;\n  exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n  exports.SrcAlphaFactor = SrcAlphaFactor;\n  exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n  exports.DstAlphaFactor = DstAlphaFactor;\n  exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n  exports.DstColorFactor = DstColorFactor;\n  exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n  exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n  exports.NeverDepth = NeverDepth;\n  exports.AlwaysDepth = AlwaysDepth;\n  exports.LessDepth = LessDepth;\n  exports.LessEqualDepth = LessEqualDepth;\n  exports.EqualDepth = EqualDepth;\n  exports.GreaterEqualDepth = GreaterEqualDepth;\n  exports.GreaterDepth = GreaterDepth;\n  exports.NotEqualDepth = NotEqualDepth;\n  exports.MultiplyOperation = MultiplyOperation;\n  exports.MixOperation = MixOperation;\n  exports.AddOperation = AddOperation;\n  exports.NoToneMapping = NoToneMapping;\n  exports.LinearToneMapping = LinearToneMapping;\n  exports.ReinhardToneMapping = ReinhardToneMapping;\n  exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n  exports.CineonToneMapping = CineonToneMapping;\n  exports.UVMapping = UVMapping;\n  exports.CubeReflectionMapping = CubeReflectionMapping;\n  exports.CubeRefractionMapping = CubeRefractionMapping;\n  exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n  exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n  exports.SphericalReflectionMapping = SphericalReflectionMapping;\n  exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n  exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n  exports.RepeatWrapping = RepeatWrapping;\n  exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n  exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n  exports.NearestFilter = NearestFilter;\n  exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n  exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n  exports.LinearFilter = LinearFilter;\n  exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n  exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n  exports.UnsignedByteType = UnsignedByteType;\n  exports.ByteType = ByteType;\n  exports.ShortType = ShortType;\n  exports.UnsignedShortType = UnsignedShortType;\n  exports.IntType = IntType;\n  exports.UnsignedIntType = UnsignedIntType;\n  exports.FloatType = FloatType;\n  exports.HalfFloatType = HalfFloatType;\n  exports.UnsignedShort4444Type = UnsignedShort4444Type;\n  exports.UnsignedShort5551Type = UnsignedShort5551Type;\n  exports.UnsignedShort565Type = UnsignedShort565Type;\n  exports.UnsignedInt248Type = UnsignedInt248Type;\n  exports.AlphaFormat = AlphaFormat;\n  exports.RGBFormat = RGBFormat;\n  exports.RGBAFormat = RGBAFormat;\n  exports.LuminanceFormat = LuminanceFormat;\n  exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n  exports.RGBEFormat = RGBEFormat;\n  exports.DepthFormat = DepthFormat;\n  exports.DepthStencilFormat = DepthStencilFormat;\n  exports.RedFormat = RedFormat;\n  exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n  exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n  exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n  exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n  exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n  exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n  exports.RGB_ETC1_Format = RGB_ETC1_Format;\n  exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n  exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n  exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n  exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n  exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n  exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n  exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n  exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n  exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n  exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n  exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n  exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n  exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n  exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n  exports.LoopOnce = LoopOnce;\n  exports.LoopRepeat = LoopRepeat;\n  exports.LoopPingPong = LoopPingPong;\n  exports.InterpolateDiscrete = InterpolateDiscrete;\n  exports.InterpolateLinear = InterpolateLinear;\n  exports.InterpolateSmooth = InterpolateSmooth;\n  exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n  exports.ZeroSlopeEnding = ZeroSlopeEnding;\n  exports.WrapAroundEnding = WrapAroundEnding;\n  exports.TrianglesDrawMode = TrianglesDrawMode;\n  exports.TriangleStripDrawMode = TriangleStripDrawMode;\n  exports.TriangleFanDrawMode = TriangleFanDrawMode;\n  exports.LinearEncoding = LinearEncoding;\n  exports.sRGBEncoding = sRGBEncoding;\n  exports.GammaEncoding = GammaEncoding;\n  exports.RGBEEncoding = RGBEEncoding;\n  exports.LogLuvEncoding = LogLuvEncoding;\n  exports.RGBM7Encoding = RGBM7Encoding;\n  exports.RGBM16Encoding = RGBM16Encoding;\n  exports.RGBDEncoding = RGBDEncoding;\n  exports.BasicDepthPacking = BasicDepthPacking;\n  exports.RGBADepthPacking = RGBADepthPacking;\n  exports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n  exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n  exports.CubeGeometry = BoxGeometry;\n  exports.Face4 = Face4;\n  exports.LineStrip = LineStrip;\n  exports.LinePieces = LinePieces;\n  exports.MeshFaceMaterial = MeshFaceMaterial;\n  exports.MultiMaterial = MultiMaterial;\n  exports.PointCloud = PointCloud;\n  exports.Particle = Particle;\n  exports.ParticleSystem = ParticleSystem;\n  exports.PointCloudMaterial = PointCloudMaterial;\n  exports.ParticleBasicMaterial = ParticleBasicMaterial;\n  exports.ParticleSystemMaterial = ParticleSystemMaterial;\n  exports.Vertex = Vertex;\n  exports.DynamicBufferAttribute = DynamicBufferAttribute;\n  exports.Int8Attribute = Int8Attribute;\n  exports.Uint8Attribute = Uint8Attribute;\n  exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n  exports.Int16Attribute = Int16Attribute;\n  exports.Uint16Attribute = Uint16Attribute;\n  exports.Int32Attribute = Int32Attribute;\n  exports.Uint32Attribute = Uint32Attribute;\n  exports.Float32Attribute = Float32Attribute;\n  exports.Float64Attribute = Float64Attribute;\n  exports.ClosedSplineCurve3 = ClosedSplineCurve3;\n  exports.SplineCurve3 = SplineCurve3;\n  exports.Spline = Spline;\n  exports.AxisHelper = AxisHelper;\n  exports.BoundingBoxHelper = BoundingBoxHelper;\n  exports.EdgesHelper = EdgesHelper;\n  exports.WireframeHelper = WireframeHelper;\n  exports.XHRLoader = XHRLoader;\n  exports.BinaryTextureLoader = BinaryTextureLoader;\n  exports.GeometryUtils = GeometryUtils;\n  exports.Projector = Projector;\n  exports.CanvasRenderer = CanvasRenderer;\n  exports.SceneUtils = SceneUtils;\n  exports.LensFlare = LensFlare;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["C:\\Users\\yonatant\\measure-app\\src\\third_party\\three.js\\three.js"],"names":["global","factory","exports","module","define","amd","THREE","Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Matrix4","error","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","z","extractRotation","Vector3","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","d","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","_x","_y","_z","_w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","Quaternion","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","r","EPS","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","matrixWorld","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","Matrix3","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","isWebGLRenderTargetCube","DataTexture","data","isDataTexture","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","p0","p1","p2","triangle","distanceToPoint","clampedPoint","getBoundingSphere","Sphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","lerpHSL","hslA","hslB","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","buffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","delete","Face3","materialIndex","vertexNormals","vertexColors","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","enable","toggle","disable","test","layers","object3DId","Object3D","parent","children","DefaultUp","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","JSON","stringify","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","sort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","keys","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","combine","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","uniform","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","barycoord","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","result","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","MeshBasicMaterial","isMeshBasicMaterial","Mesh","drawMode","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","renderer","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","render","renderList","scene","forceClear","setClear","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","capabilities","mode","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture3d","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","addLineNumbers","split","join","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","objectSpaceNormalMap","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLProperties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","UniformsCache","light","halfWidth","halfHeight","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","autoUpdate","_gl","_state","BLEND","setTest","setScissorTest","faceCount","shadowCamera","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","renderBufferDirect","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","setBlending","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","useProgram","FUNC_ADD","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","blendFunc","ZERO","ONE_MINUS_SRC_COLOR","SRC_COLOR","SRC_ALPHA","blendEquationSeparate","convert","setMaterial","frontFaceCW","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_videoTextures","_canvas","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","RED","R32F","HALF_FLOAT","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","complete","uploadTexture","TEXTURE_3D","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","isPowerOfTwoImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN","MAX","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","Group","isGroup","Camera","projectionMatrixInverse","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","frameOfReferenceType","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","cameraVR","isPresenting","currentSize","currentPixelRatio","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","getController","getDevice","setDevice","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebXRManager","session","frameOfReference","inputSources","XRDevice","setCompatibleXRDevice","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","then","getInputSources","updateCamera","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isImmediateRenderObject","camera2","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","isFog","density","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","float32Array","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","LOD","levels","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","LineSegments","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","toJSON$1","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","createElement","fillStyle","fillRect","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","tangent","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","OrthographicCamera","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","track","trackType","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","getTrackTypeForValueTypeName","typeName","parseKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","JSONLoader","setResourcePath","resourcePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","setTexturePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","setFromCartesianCoords","Cylindrical","Box2","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","CubeGeometry"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.THREE = {})));\n}(this, (function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( 'name' in Function.prototype === false ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tvar REVISION = '97';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: ( function () {\n\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\t\tvar lut = [];\n\n\t\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t\t}\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\t\treturn uuid.toUpperCase();\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tceilPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tfloorPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector2();\n\t\t\tvar max = new Vector2();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tcross: function ( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\t// this method does not support reflection matrices\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\t\tte[ 3 ] = 0;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\t\tte[ 7 ] = 0;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\t\tte[ 11 ] = 0;\n\n\t\t\t\tte[ 12 ] = 0;\n\t\t\t\tte[ 13 ] = 0;\n\t\t\t\tte[ 14 ] = 0;\n\t\t\t\tte[ 15 ] = 1;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function () {\n\n\t\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\t\treturn this.compose( zero, q, one );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar x = new Vector3();\n\t\t\tvar y = new Vector3();\n\t\t\tvar z = new Vector3();\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target );\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\t// up and z are parallel\n\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tz.normalize();\n\t\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t\t}\n\n\t\t\t\tx.normalize();\n\t\t\t\ty.crossVectors( z, x );\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t        te[ 1 ] = ( xy + wz ) * sx;\n\t\t        te[ 2 ] = ( xz - wy ) * sx;\n\t\t        te[ 3 ] = 0;\n\n\t\t        te[ 4 ] = ( xy - wz ) * sy;\n\t\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t        te[ 6 ] = ( yz + wx ) * sy;\n\t\t        te[ 7 ] = 0;\n\n\t\t        te[ 8 ] = ( xz + wy ) * sz;\n\t\t        te[ 9 ] = ( yz - wx ) * sz;\n\t\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t        te[ 11 ] = 0;\n\n\t\t        te[ 12 ] = position.x;\n\t\t        te[ 13 ] = position.y;\n\t\t        te[ 14 ] = position.z;\n\t\t        te[ 15 ] = 1;\n\n\t\t        return this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector = new Vector3();\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\t\t\t\tmatrix.copy( this );\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tisQuaternion: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t},\n\n\t\trotateTowards: function ( q, step ) {\n\n\t\t\tvar angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) return this;\n\n\t\t\tvar t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tinverse: function () {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t},\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t},\n\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t},\n\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn attribute;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tvar c = Math.cos( rotation );\n\t\t\tvar s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t},\n\n\t\tscale: function ( sx, sy ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotate: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta );\n\t\t\tvar s = Math.sin( theta );\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\t\tte[ 0 ] = c * a11 + s * a21;\n\t\t\tte[ 3 ] = c * a12 + s * a22;\n\t\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( tx, ty ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar ImageUtils = {\n\n\t\tgetDataURL: function ( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tvar output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// process single image\n\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new Vector4();\n\t\t\t\t\tmax = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: WebGLRenderTarget,\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar scope, i, l;\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\tfunction traverse( node ) {\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn function expandByObject( object ) {\n\n\t\t\t\tscope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tobject.traverse( traverse );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint = new Vector3();\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t},\n\n\t\tintersectsTriangle: ( function () {\n\n\t\t\t// triangle centered vertices\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\t// triangle edge vectors\n\t\t\tvar f0 = new Vector3();\n\t\t\tvar f1 = new Vector3();\n\t\t\tvar f2 = new Vector3();\n\n\t\t\tvar testAxis = new Vector3();\n\n\t\t\tvar center = new Vector3();\n\t\t\tvar extents = new Vector3();\n\n\t\t\tvar triangleNormal = new Vector3();\n\n\t\t\tfunction satForAxes( axes ) {\n\n\t\t\t\tvar i, j;\n\n\t\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t\t// compute box center and extents\n\t\t\t\tthis.getCenter( center );\n\t\t\t\textents.subVectors( this.max, center );\n\n\t\t\t\t// translate triangle to aabb origin\n\t\t\t\tv0.subVectors( triangle.a, center );\n\t\t\t\tv1.subVectors( triangle.b, center );\n\t\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t\t// compute edge vectors for triangle\n\t\t\t\tf0.subVectors( v1, v0 );\n\t\t\t\tf1.subVectors( v2, v1 );\n\t\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\t\tvar axes = [\n\t\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t\t];\n\t\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t\t// test 3 face normals from the aabb\n\t\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t\t// finally testing the face normal of the triangle\n\t\t\t\t// use already existing triangle edge vectors here\n\t\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\t\treturn satForAxes( axes );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getBoundingSphere( target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t\ttarget = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tthis.getCenter( target.center );\n\n\t\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\t\treturn target;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3(),\n\t\t\t\tnew Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\t\ttarget = new Box3();\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectLine( line, target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\t\ttarget = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar m1 = new Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\t// corner at max distance\n\n\t\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\tvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\tvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\tvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\\n\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\\n\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\\n\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\n\tvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n}\\n\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nvoid main() {\\n\\tvUv = uv;\\n\\tgl_Position = vec4( position, 1.0 );\\n\\tgl_Position.z = 1.0;\\n}\\n\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\tvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\tvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\\n\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tvar UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopySRGBToLinear: function () {\n\n\t\t\tfunction SRGBToLinear( c ) {\n\n\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t\t}\n\n\t\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcopyLinearToSRGB: function () {\n\n\t\t\tfunction LinearToSRGB( c ) {\n\n\t\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t\t}\n\n\t\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tconvertSRGBToLinear: function () {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToSRGB: function () {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( target ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function () {\n\n\t\t\tvar hsl = {};\n\n\t\t\treturn function ( h, s, l ) {\n\n\t\t\t\tthis.getHSL( hsl );\n\n\t\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpHSL: function () {\n\n\t\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\t\tthis.getHSL( hslA );\n\t\t\t\tcolor.getHSL( hslB );\n\n\t\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\t\tthis.setHSL( h, s, l );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 },\n\t\t\tmaxMipLevel: { value: 0 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tt2D: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: UniformsUtils.merge( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t},\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\tclearCoat: { value: 0 },\n\t\t\t\tclearCoatRoughness: { value: 0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAnimation() {\n\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tif ( isAnimating === false ) return;\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) return;\n\t\t\t\tif ( animationLoop === null ) return;\n\n\t\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = gl.FLOAT;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = gl.FLOAT;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = gl.SHORT;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = gl.INT;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = gl.BYTE;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( attribute.dynamic === false ) {\n\n\t\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis.onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix = new Matrix4();\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tvar object3DId = 0;\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Object3D,\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateOnWorldAxis: function () {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\tvar q1 = new Quaternion();\n\n\t\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tvar q1 = new Quaternion();\n\t\t\tvar m1 = new Matrix4();\n\t\t\tvar target = new Vector3();\n\t\t\tvar position = new Vector3();\n\n\t\t\treturn function lookAt( x, y, z ) {\n\n\t\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t\ttarget.copy( x );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t\t}\n\n\t\t\t\tvar parent = this.parent;\n\n\t\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tif ( this.isCamera ) {\n\n\t\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t\t}\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t\tif ( parent ) {\n\n\t\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar scale = new Vector3();\n\n\t\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\t\ttarget = new Quaternion();\n\n\t\t\t\t}\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\t\treturn target;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\n\t\t\treturn function getWorldScale( target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\t\ttarget = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\t\treturn target;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\t\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\t\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar geometryId = 0; // Geometry uses even numbers as Id\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Geometry,\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tvar offset = new Vector3();\n\n\t\t\treturn function center() {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.vertices = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\t\tthis.array = array;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) return - Infinity;\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: BufferGeometry,\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1 = new Matrix4();\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj = new Object3D();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tvar offset = new Vector3();\n\n\t\t\treturn function center() {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tvar position = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new Box3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar position = this.attributes.position;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) {\n\n\t\t\t\toffset = 0;\n\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\treturn function normalizeNormals() {\n\n\t\t\t\tvar normals = this.attributes.normal;\n\n\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\t\tvector.normalize();\n\n\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\n\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t// BoxBufferGeometry\n\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\t\tdepth = depth || 1;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\t\tif ( this.visible === false ) data.visible = false;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = {};\n\n\t\tfor ( var name in this.uniforms ) {\n\n\t\t\tvar uniform = this.uniforms[ name ];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif ( value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tvar directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new Vector3();\n\t\t\tvar segDir = new Vector3();\n\t\t\tvar diff = new Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, target );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, target ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, target ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new Vector3();\n\t\t\tvar edge1 = new Vector3();\n\t\t\tvar edge2 = new Vector3();\n\t\t\tvar normal = new Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tgetNormal: function () {\n\n\t\t\tvar v0 = new Vector3();\n\n\t\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\t\ttarget = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\ttarget.subVectors( c, b );\n\t\t\t\tv0.subVectors( a, b );\n\t\t\t\ttarget.cross( v0 );\n\n\t\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tgetBarycoord: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\t\tv0.subVectors( c, a );\n\t\t\t\tv1.subVectors( b, a );\n\t\t\t\tv2.subVectors( point, a );\n\n\t\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\t\ttarget = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\t// collinear or singular triangle\n\t\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t\t}\n\n\t\t\t\tvar invDenom = 1 / denom;\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t\t// barycentric coordinates must always sum to 1\n\t\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcontainsPoint: function () {\n\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetUV: function () {\n\n\t\t\tvar barycoord = new Vector3();\n\n\t\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\t\ttarget.set( 0, 0 );\n\t\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\t\treturn target;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetArea: function () {\n\n\t\t\tvar v0 = new Vector3();\n\t\t\tvar v1 = new Vector3();\n\n\t\t\treturn function getArea() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetMidpoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tgetNormal: function ( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetPlane: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetBarycoord: function ( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar vab = new Vector3();\n\t\t\tvar vac = new Vector3();\n\t\t\tvar vbc = new Vector3();\n\t\t\tvar vap = new Vector3();\n\t\t\tvar vbp = new Vector3();\n\t\t\tvar vcp = new Vector3();\n\n\t\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\t\tif ( target === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\t\ttarget = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\t\tvar v, w;\n\n\t\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t\tvab.subVectors( b, a );\n\t\t\t\tvac.subVectors( c, a );\n\t\t\t\tvap.subVectors( p, a );\n\t\t\t\tvar d1 = vab.dot( vap );\n\t\t\t\tvar d2 = vac.dot( vap );\n\t\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\t\treturn target.copy( a );\n\n\t\t\t\t}\n\n\t\t\t\tvbp.subVectors( p, b );\n\t\t\t\tvar d3 = vab.dot( vbp );\n\t\t\t\tvar d4 = vac.dot( vbp );\n\t\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\t\treturn target.copy( b );\n\n\t\t\t\t}\n\n\t\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t\t}\n\n\t\t\t\tvcp.subVectors( p, c );\n\t\t\t\tvar d5 = vab.dot( vcp );\n\t\t\t\tvar d6 = vac.dot( vcp );\n\t\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\t\treturn target.copy( c );\n\n\t\t\t\t}\n\n\t\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t\t}\n\n\t\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t\t}\n\n\t\t\t\t// face region\n\t\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t\t// u = va * denom\n\t\t\t\tv = vb * denom;\n\t\t\t\tw = vc * denom;\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar tempA = new Vector3();\n\t\t\tvar tempB = new Vector3();\n\t\t\tvar tempC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tvar intersectionPoint = new Vector3();\n\t\t\tvar intersectionPointWorld = new Vector3();\n\n\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uv ) {\n\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\t\tintersection.face = face;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar intersection;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\t\tvar i, j, il, jl;\n\t\t\t\t\tvar group, groupMaterial;\n\t\t\t\t\tvar start, end;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar uvs;\n\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\trenderList.push( planeMesh, planeMesh.geometry, planeMesh.material, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, info ) {\n\n\t\tvar geometries = {};\n\t\tvar wireframeAttributes = {};\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\t\tif ( attribute ) return attribute;\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\n\t\t\t} else {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\tinstanceCount = instanceCount || 1;\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\tvar length = objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\t// Remove current morphAttributes\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\t// Add morphAttributes\n\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence ) {\n\n\t\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( geometries, info ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Artur Trzesiok\n\t */\n\n\tfunction DataTexture3D( data, width, height, depth ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t}\n\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tfunction UniformContainer() {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\tvar mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) return false;\n\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( renderer, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValue1f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\tfunction setValue1i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) return;\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValue2fv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValue3fv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValue4fv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValue2fm( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValue3fm( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValue4fm( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, renderer ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = renderer.allocTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, renderer ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = renderer.allocTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\trenderer.setTexture3D( v || emptyTexture3d, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, renderer ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = renderer.allocTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValue2iv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValue3iv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValue4iv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8B5F: return setValueT3D1; // SAMPLER_3D\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\n\tfunction setValue1fv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\tfunction setValue1iv( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2a( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar data = flatten( v, this.size, 2 );\n\n\t\tif ( arraysEqual( cache, data ) ) return;\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t\tthis.updateCache( data );\n\n\t}\n\n\tfunction setValueV3a( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar data = flatten( v, this.size, 3 );\n\n\t\tif ( arraysEqual( cache, data ) ) return;\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t\tthis.updateCache( data );\n\n\t}\n\n\tfunction setValueV4a( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tif ( arraysEqual( cache, data ) ) return;\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t\tthis.updateCache( data );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2a( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tif ( arraysEqual( cache, data ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t\tthis.updateCache( data );\n\n\t}\n\n\tfunction setValueM3a( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar data = flatten( v, this.size, 9 );\n\n\t\tif ( arraysEqual( cache, data ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t\tthis.updateCache( data );\n\n\t}\n\n\tfunction setValueM4a( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar data = flatten( v, this.size, 16 );\n\n\t\tif ( arraysEqual( cache, data ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t\tthis.updateCache( data );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1a( gl, v, renderer ) {\n\n\t\tvar cache = this.cache;\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( renderer, n );\n\n\t\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\t\t\tcopyArray( cache, units );\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6a( gl, v, renderer ) {\n\n\t\tvar cache = this.cache;\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( renderer, n );\n\n\t\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\t\t\tcopyArray( cache, units );\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\t\tthis.cache = new Float32Array( data.length );\n\n\t\t}\n\n\t\tcopyArray( cache, data );\n\n\t};\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tUniformContainer.call( this ); // mix-in\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program, renderer ) {\n\n\t\tUniformContainer.call( this );\n\n\t\tthis.renderer = renderer;\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE', '( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\t\tif ( material.isShaderMaterial &&\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t\t}\n\n\t\t\t// GLSL 3.0 conversion\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.name = shader.name;\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\t\tvar precision = capabilities.precision;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tmatcap: !! material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tvar map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t\trenderItemsIndex ++;\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = {};\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar hash = scene.id + ',' + camera.id;\n\t\t\tvar list = lists[ hash ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists[ hash ] = list;\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar count = 0;\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar state = {\n\n\t\t\tid: count ++,\n\n\t\t\thash: {\n\t\t\t\tstateID: - 1,\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\t\t\t\tshadowsLength: - 1\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\n\t\t};\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.hash.stateID = state.id;\n\t\t\tstate.hash.directionalLength = directionalLength;\n\t\t\tstate.hash.pointLength = pointLength;\n\t\t\tstate.hash.spotLength = spotLength;\n\t\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\t\tstate.hash.hemiLength = hemiLength;\n\t\t\tstate.hash.shadowsLength = shadows.length;\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLRenderState() {\n\n\t\tvar lights = new WebGLLights();\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( camera ) {\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates() {\n\n\t\tvar renderStates = {};\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar renderState;\n\n\t\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ] = {};\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = {};\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum(),\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t\t_lookTarget = new Vector3(),\n\t\t\t_lightPositionWorld = new Vector3(),\n\n\t\t\t_MorphingFlag = 1,\n\t\t\t_SkinningFlag = 2,\n\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\t\tvar cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\t//\n\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( lights.length === 0 ) return;\n\n\t\t\t// TODO Clean up (needed in case of contextlost)\n\t\t\tvar _gl = _renderer.context;\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount;\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\t\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar enabledCapabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( gl.DEPTH_TEST );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( gl.CULL_FACE );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getCompressedTextureFormats() {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\t\tdisable( gl.BLEND );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\t\tenable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( gl.CULL_FACE )\n\t\t\t\t: enable( gl.CULL_FACE );\n\n\t\t\tvar flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tvar _videoTextures = {};\n\t\tvar _canvas;\n\n\t\t//\n\n\t\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\t\treturn _canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\t}\n\n\t\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.R32F;\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.R16F;\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.R8;\n\n\t\t\t}\n\n\t\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGB32F;\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\n\n\t\t\t}\n\n\t\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGBA32F;\n\t\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\n\t\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\n\n\t\t\t}\n\n\t\t\treturn glFormat;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t\t}\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t\t}\n\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tvar textureType;\n\n\t\t\tif ( texture.isDataTexture3D ) {\n\n\t\t\t\ttextureType = _gl.TEXTURE_3D;\n\n\t\t\t} else {\n\n\t\t\t\ttextureType = _gl.TEXTURE_2D;\n\n\t\t\t}\n\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tsetTextureParameters( textureType, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tvar id = texture.id;\n\t\t\tvar frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t\t_videoTextures[ id ] = frame;\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tfunction convert( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === ByteType ) return gl.BYTE;\n\t\t\tif ( p === ShortType ) return gl.SHORT;\n\t\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\t\tif ( p === IntType ) return gl.INT;\n\t\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\t\tif ( p === OneFactor ) return gl.ONE;\n\t\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return gl.MIN;\n\t\t\t\t\tif ( p === MaxEquation ) return gl.MAX;\n\n\t\t\t\t}\n\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group,\n\n\t\tisGroup: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tvar poseTarget = null;\n\n\t\tvar controllers = [];\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar frameOfReferenceType = 'stage';\n\n\t\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\t\tvar tempQuaternion = new Quaternion();\n\t\tvar tempPosition = new Vector3();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tfunction isPresenting() {\n\n\t\t\treturn device !== null && device.isPresenting === true;\n\n\t\t}\n\n\t\tvar currentSize, currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( isPresenting() ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\t\tanimation.start();\n\n\t\t\t} else {\n\n\t\t\t\tif ( scope.enabled ) {\n\n\t\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t\t}\n\n\t\t\t\tanimation.stop();\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar triggers = [];\n\n\t\tfunction findGamepad( id ) {\n\n\t\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\t\tj ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateControllers() {\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tvar controller = controllers[ i ];\n\n\t\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t\t//  Pose\n\n\t\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\t//  Trigger\n\n\t\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontroller.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.getController = function ( id ) {\n\n\t\t\tvar controller = controllers[ id ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new Group();\n\t\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t\tcontrollers[ id ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller;\n\n\t\t};\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\n\t\t\tanimation.setContext( value );\n\n\t\t};\n\n\t\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\t\tframeOfReferenceType = value;\n\n\t\t};\n\n\t\tthis.setPoseTarget = function ( object ) {\n\n\t\t\tif ( object !== undefined ) poseTarget = object;\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\t\tif ( device === null ) {\n\n\t\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\t\treturn camera;\n\n\t\t\t}\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\t\tif ( stageParameters ) {\n\n\t\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar pose = frameData.pose;\n\t\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\t\tposeObject.matrix.copy( standingMatrix );\n\t\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t\t}\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\t\ttempPosition.fromArray( pose.position );\n\t\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\t\tposeObject.position.add( tempPosition );\n\n\t\t\t}\n\n\t\t\tposeObject.updateMatrixWorld();\n\n\t\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t\t//\n\n\t\t\tcameraL.near = camera.near;\n\t\t\tcameraR.near = camera.near;\n\n\t\t\tcameraL.far = camera.far;\n\t\t\tcameraR.far = camera.far;\n\n\t\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\t// TODO (mrdoob) Double check this code\n\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = poseObject.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\t// HACK (mrdoob)\n\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t\t}\n\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tupdateControllers();\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.isPresenting = isPresenting;\n\n\t\t// Animation Loop\n\n\t\tvar animation = new WebGLAnimation();\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tanimation.setAnimationLoop( callback );\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( isPresenting() ) device.submitFrame();\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebXRManager( renderer ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar device = null;\n\t\tvar session = null;\n\n\t\tvar frameOfReference = null;\n\t\tvar frameOfReferenceType = 'stage';\n\n\t\tvar pose = null;\n\n\t\tvar controllers = [];\n\t\tvar inputSources = [];\n\n\t\tfunction isPresenting() {\n\n\t\t\treturn session !== null && frameOfReference !== null;\n\n\t\t}\n\n\t\t//\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.getController = function ( id ) {\n\n\t\t\tvar controller = controllers[ id ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new Group();\n\t\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t\tcontrollers[ id ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller;\n\n\t\t};\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) device = value;\n\t\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\trenderer.setFramebuffer( null );\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\t\tframeOfReferenceType = value;\n\n\t\t};\n\n\t\tthis.setSession = function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\t\tframeOfReference = value;\n\n\t\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\t\tanimation.setContext( session );\n\t\t\t\t\tanimation.start();\n\n\t\t\t\t} );\n\n\t\t\t\t//\n\n\t\t\t\tinputSources = session.getInputSources();\n\n\t\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( isPresenting() ) {\n\n\t\t\t\tvar parent = camera.parent;\n\t\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t\t// apply camera.parent to cameraVR\n\n\t\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera and its children\n\n\t\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\t\tvar children = camera.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t\t}\n\n\t\t\t\treturn cameraVR;\n\n\t\t\t}\n\n\t\t\treturn camera;\n\n\t\t};\n\n\t\tthis.isPresenting = isPresenting;\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tvar layer = session.baseLayer;\n\t\t\t\tvar views = frame.views;\n\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tvar view = views[ i ];\n\t\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tvar controller = controllers[ i ];\n\n\t\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\t\tif ( inputSource ) {\n\n\t\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t\t// DEPRECATED\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\t\treturn new THREE.Matrix4();\n\n\t\t};\n\n\t\tthis.submitFrame = function () {};\n\n\t}\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null;\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t_isContextLost = false,\n\n\t\t\t// internal state cache\n\n\t\t\t_framebuffer = null,\n\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\n\t\t\t// geometry and program caching\n\n\t\t\t_currentGeometryProgram = {\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false\n\t\t\t},\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t//\n\n\t\t\t_usedTextureUnits = 0,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3();\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference\n\t\t\t};\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, attributes, geometries, objects;\n\t\tvar programCache, renderLists, renderStates;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tvar utils;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\t\tobjects = new WebGLObjects( geometries, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates();\n\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.context = _gl;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// vr\n\n\t\tvar vr = null;\n\n\t\tif ( typeof navigator !== 'undefined' ) {\n\n\t\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t\t}\n\n\t\tthis.vr = vr;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tif ( vr.isPresenting() ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width * _pixelRatio,\n\t\t\t\theight: _height * _pixelRatio\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = width * pixelRatio;\n\t\t\t_canvas.height = height * pixelRatio;\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function () {\n\n\t\t\treturn _currentViewport;\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t_viewport.set( x, _height - y - height, width, height );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\t_scissor.set( x, _height - y - height, width, height );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn background.getClearColor();\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tobjects.dispose();\n\n\t\t\tvr.dispose();\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = Infinity;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) return;\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( vr.isPresenting() ) return;\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\tvr.setAnimationLoop( callback );\n\n\t\t\tanimation.start();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost ) return;\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t}\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t\tcurrentRenderList = null;\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t/*\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tvar _sphere = new Sphere();\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\t\t*/\n\n\t\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t\t_currentGeometryProgram.program = null;\n\t\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\t\trenderObjectImmediate( object, program );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tvar lightsHash = materialProperties.lightsHash;\n\t\t\tvar lightsStateHash = lights.state.hash;\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\t\tprogramChange = false;\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\t\t\tif ( lightsHash === undefined ) {\n\n\t\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t\t}\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tvar lightsHash = materialProperties.lightsHash;\n\t\t\tvar lightsStateHash = lights.state.hash;\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture3D = ( function () {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture3D( texture, slot ) {\n\n\t\t\t\ttextures.setTexture3D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function () {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\t//\n\n\t\tthis.setFramebuffer = function ( value ) {\n\n\t\t\t_framebuffer = value;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\t\tvar width = texture.image.width;\n\t\t\tvar height = texture.image.height;\n\t\t\tvar glFormat = utils.convert( texture.format );\n\n\t\t\tthis.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tFogExp2.prototype.clone = function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t};\n\n\tFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tFog.prototype.clone = function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t};\n\n\tFog.prototype.toJSON = function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetArray: function ( array ) {\n\n\t\t\tif ( Array.isArray( array ) ) {\n\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t\t}\n\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\t\tthis.array = array;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar geometry;\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( geometry === undefined ) {\n\n\t\t\tgeometry = new BufferGeometry();\n\n\t\t\tvar float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar intersectPoint = new Vector3();\n\t\t\tvar worldScale = new Vector3();\n\t\t\tvar mvPosition = new Vector3();\n\n\t\t\tvar alignedPosition = new Vector2();\n\t\t\tvar rotatedPosition = new Vector2();\n\t\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\t\tvar vA = new Vector3();\n\t\t\tvar vB = new Vector3();\n\t\t\tvar vC = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t\t// compute position in camera space\n\t\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t\t// to check if rotation is not zero\n\t\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t\t}\n\n\n\t\t\t\tvertexPosition.copy( mvPosition );\n\t\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t\t// transform to world space\n\t\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\t\tvar rotation = this.material.rotation;\n\t\t\t\tvar sin, cos;\n\t\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t\t}\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\t\tuvA.set( 0, 0 );\n\t\t\t\tuvB.set( 1, 0 );\n\t\t\t\tuvC.set( 1, 1 );\n\n\t\t\t\t// check first triangle\n\t\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\t// check second triangle\n\t\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\t\treturn this;\n\n\t\t}\n\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new Vector3();\n\t\t\tvar v2 = new Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new Matrix4();\n\t\t\tvar identityMatrix = new Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\tvar bones = this.bones;\n\t\t\t\tvar boneInverses = this.boneInverses;\n\t\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t},\n\n\t\tgetBoneByName: function ( name ) {\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tvar bones = this.initBones();\n\t\tvar skeleton = new Skeleton( bones );\n\n\t\tthis.bind( skeleton, this.matrixWorld );\n\n\t\tthis.normalizeSkinWeights();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tinitBones: function () {\n\n\t\t\tvar bones = [], bone, gbone;\n\t\t\tvar i, il;\n\n\t\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\t// create new 'Bone' object\n\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t\tbones.push( bone );\n\n\t\t\t\t\t// apply values\n\n\t\t\t\t\tbone.name = gbone.name;\n\t\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t\t}\n\n\t\t\t\t// second, create bone hierarchy\n\n\t\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t\t// let's update the corresponding matrices\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn bones;\n\n\t\t},\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar scale, i;\n\n\t\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\t\tvar vec = new Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\tcomputeLineDistances: ( function () {\n\n\t\t\tvar start = new Vector3();\n\t\t\tvar end = new Vector3();\n\n\t\t\treturn function computeLineDistances() {\n\n\t\t\t\tvar geometry = this.geometry;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\tsphere.radius += precision;\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\t\tvar vStart = new Vector3();\n\t\t\t\tvar vEnd = new Vector3();\n\t\t\t\tvar interSegment = new Vector3();\n\t\t\t\tvar interRay = new Vector3();\n\t\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true,\n\n\t\tcomputeLineDistances: ( function () {\n\n\t\t\tvar start = new Vector3();\n\t\t\tvar end = new Vector3();\n\n\t\t\treturn function computeLineDistances() {\n\n\t\t\t\tvar geometry = this.geometry;\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}() )\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new Matrix4();\n\t\t\tvar ray = new Ray();\n\t\t\tvar sphere = new Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\t\tsphere.radius += threshold;\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new Vector3();\n\t\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\t\tconstructor: VideoTexture,\n\n\t\tisVideoTexture: true,\n\n\t\tupdate: function () {\n\n\t\t\tvar video = this.image;\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tappplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction appplyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar P = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin = Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.1.2)\n\t */\n\n\tvar Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\t\tdim = dim || 2;\n\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\t\ttriangles = [];\n\n\t\t\tif ( ! outerNode ) return triangles;\n\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tvar i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) return start;\n\t\tif ( ! end ) end = start;\n\n\t\tvar p = start, again;\n\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) break;\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) return;\n\n\t\t// interlink polygon nodes in z-order\n\n\t\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\t\tvar stop = ear, prev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim );\n\t\t\t\ttriangles.push( ear.i / dim );\n\t\t\t\ttriangles.push( next.i / dim );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\n\tfunction isEar( ear ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tvar p = ear.next.next;\n\n\t\twhile ( p !== ear.prev ) {\n\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t\t// z-order range for the current triangle bbox;\n\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t\t// first look for points inside the triangle in increasing z-order\n\n\t\tvar p = ear.nextZ;\n\n\t\twhile ( p && p.z <= maxZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\t\tp = p.nextZ;\n\n\t\t}\n\n\t\t// then look for points in decreasing z-order\n\n\t\tp = ear.prevZ;\n\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tvar p = start;\n\n\t\tdo {\n\n\t\t\tvar a = p.prev, b = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim );\n\t\t\t\ttriangles.push( p.i / dim );\n\t\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t\t// remove two nodes involved\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn p;\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\n\t\tvar a = start;\n\n\t\tdo {\n\n\t\t\tvar b = a.next.next;\n\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tvar queue = [], i, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) list.steiner = true;\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\teliminateHole( queue[ i ], outerNode );\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\n\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\touterNode = findHoleBridge( hole, outerNode );\n\n\t\tif ( outerNode ) {\n\n\t\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\t\tfilterPoints( b, b.next );\n\n\t\t}\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tvar p = outerNode,\n\t\t\thx = hole.x,\n\t\t\thy = hole.y,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) return null;\n\n\t\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y,\n\t\t\ttanMin = Infinity,\n\t\t\ttan;\n\n\t\tp = m.next;\n\n\t\twhile ( p !== stop ) {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn m;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tvar p = start;\n\n\t\tdo {\n\n\t\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\tfunction sortLinked( list ) {\n\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) break;\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\t\telse list = e;\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\n\t\tx = 32767 * ( x - minX ) * invSize;\n\t\ty = 32767 * ( y - minY ) * invSize;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\n\tfunction getLeftmost( start ) {\n\n\t\tvar p = start, leftmost = start;\n\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n\t}\n\n\t// signed area of a triangle\n\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\t\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tvar p = a;\n\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\n\tfunction middleInside( a, b ) {\n\n\t\tvar p = a,\n\t\t\tinside = false,\n\t\t\tpx = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\t\tinside = ! inside;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\tfunction splitPolygon( a, b ) {\n\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tvar p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\t\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertice index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertice nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = null;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tvar sum = 0;\n\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tvar holeIndices = []; // array of hole indices\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tvar holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t};\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tvar l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tvar scope = this;\n\n\t\tvar verticesArray = [];\n\t\tvar uvArray = [];\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar placeholder = [];\n\n\t\t\t// options\n\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tvar extrudePath = options.extrudePath;\n\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tvar ahole, h, hl; // looping of holes\n\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tvar b, bs, t, z,\n\t\t\t\tvert, vlen = vertices.length,\n\t\t\t\tface, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tvar contourMovements = [];\n\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tvar holesMovements = [],\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbs = bevelSize;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tvar s;\n\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tvar j, k;\n\t\t\t\ti = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tj = i;\n\t\t\t\t\tk = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tvar s = 0,\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t//\n\n\tvar WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\tfunction toJSON( shapes, options, data ) {\n\n\t\t//\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 0.5;\n\t\touterRadius = outerRadius || 1;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\tShapeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t\t// also check if holes are in the opposite direction\n\n\t\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\tShapeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t//\n\n\tfunction toJSON$1( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\t\theight = height || 1;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t\t// a matcap is required\n\n\t\tif ( this.matcap === null ) {\n\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = 1;\n\t\t\tcanvas.height = 1;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tcontext.fillStyle = '#fff';\n\t\t\tcontext.fillRect( 0, 0, 1, 1 );\n\n\t\t\tthis.matcap = new THREE.CanvasTexture( canvas );\n\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\t\t\treturn this;\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar loading = {};\n\n\tfunction FileLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FileLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Initialise array for duplicate requests\n\n\t\t\t\tloading[ url ] = [];\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = this.response;\n\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t}\n\n\tObject.assign( DataTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction ImageLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( ImageLoader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( CubeTextureLoader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction TextureLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( TextureLoader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g$/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\t\tthis.aClockwise = aClockwise || false;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t};\n\n\tEllipseCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\n\tEllipseCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points || [];\n\t\tthis.closed = closed || false;\n\t\tthis.curveType = curveType || 'centripetal';\n\t\tthis.tension = tension || 0.5;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\t\tthis.v3 = v3 || new Vector2();\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\t\tthis.v3 = v3 || new Vector3();\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\tLineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points || [];\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar points = this.points;\n\t\tvar p = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar p1 = points[ intPoint ];\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tSplineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tSplineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurve.prototype.copy.call( this, source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tconstructor: Path,\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape( points ) {\n\n\t\tPath.call( this, points );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tPath.prototype.copy.call( this, source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new Matrix4();\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow( ) {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t}\n\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function ( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function () {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function ( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Static methods\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\ttoJSON: function ( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( KeyframeTrack.prototype, {\n\n\t\tconstructor: KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrack.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t}\n\n\tObject.assign( MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader() {}\n\n\tLoader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\tObject.assign( Loader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tonLoadStart: function () {},\n\n\t\tonLoadProgress: function () {},\n\n\t\tonLoadComplete: function () {},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar BlendingMode = {\n\t\t\t\tNoBlending: NoBlending,\n\t\t\t\tNormalBlending: NormalBlending,\n\t\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\t\tCustomBlending: CustomBlending\n\t\t\t};\n\n\t\t\tvar color = new Color();\n\t\t\tvar textureLoader = new TextureLoader();\n\t\t\tvar materialLoader = new MaterialLoader();\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tvar LoaderUtils = {\n\n\t\tdecodeText: function ( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tvar s = '';\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\t// Merges multi-byte utf-8 characters.\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t},\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) return './';\n\n\t\t\treturn url.substr( 0, index + 1 );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction JSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, path );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function parse( json, path ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, this.resourcePath || path, this.crossOrigin );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar shapes = this.parseShape( json.shapes );\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseShape: function ( json ) {\n\n\t\t\tvar shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t},\n\n\t\tparseGeometries: function ( json, shapes ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n\t};\n\n\t/**\n\t * @author thespite / http://clicktorelease.com/\n\t */\n\n\n\tfunction ImageBitmapLoader( manager ) {\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\tthis.options = undefined;\n\n\t}\n\n\tImageBitmapLoader.prototype = {\n\n\t\tconstructor: ImageBitmapLoader,\n\n\t\tsetOptions: function setOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) url = '';\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tfetch( url ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction Font( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size ) {\n\n\t\t\tif ( size === undefined ) size = 100;\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths( text, size, this.data );\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\tfunction createPaths( text, size, data ) {\n\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\tvar paths = [];\n\n\t\tvar offsetX = 0, offsetY = 0;\n\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\tvar char = chars[ i ];\n\n\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\n\t\t\t} else {\n\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn paths;\n\n\t}\n\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) return;\n\n\t\tvar path = new ShapePath();\n\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif ( glyph.o ) {\n\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( context === undefined ) {\n\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t}\n\n\tObject.assign( AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\t\tvar eyeRight = new Matrix4();\n\t\t\tvar eyeLeft = new Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tinstance = this;\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\t\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CubeCamera( near, far, cubeResolution ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar renderTarget = this.renderTarget;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTarget.activeCubeFace = i;\n\t\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.loop = false;\n\t\tthis.startTime = 0;\n\t\tthis.offset = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tsource.start( this.startTime, this.offset );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new Vector3();\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar scale = new Vector3();\n\n\t\t\tvar orientation = new Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar panner = this.panner;\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param  {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: ( function () {\n\n\t\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tparseTrackName: function () {\n\n\t\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t\t// instead, we exclude reserved characters and match everything else.\n\t\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t\t// be matched to parse the rest of the track name.\n\t\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t\t// Object on target node, and accessor. May not contain reserved\n\t\t\t// characters. Accessor may contain any character except closing bracket.\n\t\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t\t// contain any non-bracket characters.\n\t\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\t\tvar trackRe = new RegExp( ''\n\t\t\t\t+ '^'\n\t\t\t\t+ directoryRe\n\t\t\t\t+ nodeRe\n\t\t\t\t+ objectRe\n\t\t\t\t+ propertyRe\n\t\t\t\t+ '$'\n\t\t\t);\n\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\t\treturn function parseTrackName( trackName ) {\n\n\t\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\t\tif ( ! matches ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t\t}\n\n\t\t\t\tvar results = {\n\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t\t};\n\n\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t\t// include '.' characters).\n\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t\t}\n\n\t\t\t\treturn results;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup() {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length,\n\t\t\t\tknownObject = undefined;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function () {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function () {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function () {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function () {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function ( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function ( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function ( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function () {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function () {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function () {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function ( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function ( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function ( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function () {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function () {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function () {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function () {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function ( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function ( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function ( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\t\t\tvar loopCount = this._loopCount;\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: AnimationMixer,\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axiz.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function () {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new Vector3();\n\t\t\tvar startEnd = new Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar vector2 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.light.updateMatrixWorld();\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar boneMatrix = new Matrix4();\n\t\tvar matrixWorldInv = new Matrix4();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tvar bones = this.bones;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\t\tvar bone = bones[ i ];\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\t\tj += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction RectAreaLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\t\tthis.line = new Line( geometry, material );\n\t\tthis.add( this.line );\n\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\t// calculate new dimensions of the helper\n\n\t\tvar hx = this.light.width * 0.5;\n\t\tvar hy = this.light.height * 0.5;\n\n\t\tvar position = this.line.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\t// update vertices\n\n\t\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\t\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\t\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\t\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\t\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\t\tposition.needsUpdate = true;\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.line.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.line.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new Vector3();\n\n\t\tvar color1 = new Color();\n\t\tvar color2 = new Color();\n\n\t\treturn function update() {\n\n\t\t\tvar mesh = this.children[ 0 ];\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t\tcolor1.copy( this.light.color );\n\t\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.create( LineSegments.prototype );\n\tGridHelper.prototype.constructor = GridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar normalMatrix = new Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t};\n\n\t}() );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\t\tvar v3 = new Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tthis.lightPlane.lookAt( v3 );\n\n\t\t\tif ( this.color !== undefined ) {\n\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t\t} else {\n\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt( v3 );\n\t\t\tthis.targetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new Vector3();\n\t\tvar camera = new Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\t\tsetPoint( 'f2', w, - h, 1 );\n\t\t\tsetPoint( 'f3', - w, h, 1 );\n\t\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t\t}\n\n\t\t\tif ( this.object !== undefined ) {\n\n\t\t\t\tbox.setFromObject( this.object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, hex ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar lineGeometry, coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tif ( lineGeometry === undefined ) {\n\n\t\t\tlineGeometry = new BufferGeometry();\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxesHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) materials = [];\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tObject.assign( CurvePath.prototype, {\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from equidistant sampling along the path\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Path.prototype, {\n\n\t\tfromPoints: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction AxisHelper( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\treturn new AxesHelper( size );\n\n\t}\n\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tObject.assign( Loader.prototype, {\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t} );\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\tObject.assign( JSONLoader.prototype, {\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t\treturn this.setResourcePath( value );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\tObject.assign( _Math, {\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\t\treturn _Math.floorPowerOfTwo( value );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tarea: function () {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\t\treturn this.getArea();\n\n\t\t},\n\t\tbarycoordFromPoint: function ( point, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn this.getBarycoord( point, target );\n\n\t\t},\n\t\tmidpoint: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\t\treturn this.getMidpoint( target );\n\n\t\t},\n\t\tnormal: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn this.getNormal( target );\n\n\t\t},\n\t\tplane: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\t\treturn this.getPlane( target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle, {\n\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t\t},\n\t\tnormal: function ( a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\t\treturn this.extractPoints( divisions );\n\n\t\t},\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Geometry.prototype, {\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeLineDistances: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t},\n\t\tgetWorldRotation: function () {\n\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t},\n\t\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\t\tgetArrays: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t\t},\n\n\t\taddShapeList: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t\t},\n\n\t\taddShape: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t},\n\n\t\tanimate: function ( callback ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\t\tthis.setAnimationLoop( callback );\n\n\t\t},\n\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\n\t\tresetGLState: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\t\treturn this.state.reset();\n\n\t\t},\n\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t},\n\t\tsetFaceCulling: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* cullFace */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebVRManager.prototype, {\n\n\t\tstanding: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tuserHeight: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tAudio.prototype.load = function ( file ) {\n\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\tscope.setBuffer( buffer );\n\n\t\t} );\n\t\treturn this;\n\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\t//\n\n\tfunction Projector() {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function () {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t}\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t}\n\n\t//\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tattach: function ( /* child, scene, parent */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction LensFlare() {\n\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n\t}\n\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.LineLoop = LineLoop;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture3D = DataTexture3D;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.Texture = Texture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.JSONLoader = JSONLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.FontLoader = FontLoader;\n\texports.FileLoader = FileLoader;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.RectAreaLight = RectAreaLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.ArrayCamera = ArrayCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.AudioContext = AudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Cylindrical = Cylindrical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.Color = Color;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.Box3Helper = Box3Helper;\n\texports.PlaneHelper = PlaneHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxesHelper = AxesHelper;\n\texports.Shape = Shape;\n\texports.Path = Path;\n\texports.ShapePath = ShapePath;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ImageUtils = ImageUtils;\n\texports.ShapeUtils = ShapeUtils;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.ArcCurve = ArcCurve;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.EllipseCurve = EllipseCurve;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.SplineCurve = SplineCurve;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RedFormat = RedFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.CubeGeometry = BoxGeometry;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Particle;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.Spline = Spline;\n\texports.AxisHelper = AxisHelper;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.XHRLoader = XHRLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.GeometryUtils = GeometryUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.SceneUtils = SceneUtils;\n\texports.LensFlare = LensFlare;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"module"}